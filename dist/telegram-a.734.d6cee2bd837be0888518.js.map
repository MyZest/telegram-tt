{"version":3,"file":"telegram-a.734.d6cee2bd837be0888518.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSingularPaidMedia.ts","webpack://telegram-t/./src/components/middle/message/helpers/calculateAlbumLayout.ts","webpack://telegram-t/./src/util/languageDetection.ts","webpack://telegram-t/./src/components/middle/message/hooks/useDetectChatLanguage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOuterHandlers.ts","webpack://telegram-t/./src/components/common/embedded/EmbeddedStory.tsx","webpack://telegram-t/./src/components/common/TopicChip.tsx","webpack://telegram-t/./src/components/common/TopicChip.module.scss?5208","webpack://telegram-t/./src/components/middle/message/hocs/withSelectControl.tsx","webpack://telegram-t/./src/components/middle/message/Album.tsx","webpack://telegram-t/./src/components/common/hooks/useAnimatedEmoji.ts","webpack://telegram-t/./src/components/middle/message/AnimatedCustomEmoji.tsx","webpack://telegram-t/./src/components/middle/message/AnimatedEmoji.tsx","webpack://telegram-t/./src/components/middle/message/CommentButton.tsx","webpack://telegram-t/./src/components/middle/message/Contact.module.scss?fec1","webpack://telegram-t/./src/components/middle/message/Contact.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/FactCheck.module.scss?3842","webpack://telegram-t/./src/components/middle/message/FactCheck.tsx","webpack://telegram-t/./src/components/middle/message/Game.tsx","webpack://telegram-t/./src/components/middle/message/Giveaway.module.scss?9b0c","webpack://telegram-t/./src/components/middle/message/Giveaway.tsx","webpack://telegram-t/./src/components/middle/message/InlineButtons.tsx","webpack://telegram-t/./src/components/middle/message/Invoice.tsx","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.module.scss?19f6","webpack://telegram-t/./src/components/middle/message/InvoiceMediaPreview.tsx","webpack://telegram-t/./src/components/middle/message/Location.tsx","webpack://telegram-t/./src/components/middle/message/MessageMeta.tsx","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.module.scss?15a3","webpack://telegram-t/./src/components/middle/message/MessagePhoneCall.tsx","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.module.scss?e3d6","webpack://telegram-t/./src/components/middle/message/PaidMediaOverlay.tsx","webpack://telegram-t/./src/components/middle/message/PollOption.tsx","webpack://telegram-t/./src/components/middle/message/Poll.tsx","webpack://telegram-t/./src/components/middle/message/Sticker.module.scss?30d0","webpack://telegram-t/./src/components/middle/message/Sticker.tsx","webpack://telegram-t/./src/components/middle/message/Story.tsx","webpack://telegram-t/./src/components/middle/message/StoryMention.tsx","webpack://telegram-t/./src/components/middle/message/Message.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useInnerHandlers.ts","webpack://telegram-t/./src/hooks/useTextLanguage.ts","webpack://telegram-t/./src/components/middle/message/helpers/buildContentClassName.ts","webpack://telegram-t/./src/components/middle/message/MessageAppendix.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.module.scss?8703","webpack://telegram-t/./src/components/middle/message/WebPageUniqueGift.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isPlaying) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({\n        chatId,\n        messageIds: [editedMessage.id],\n        isSchedule: type === 'scheduled',\n      });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId\n          && bot.attachMenuPeerTypes && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput);\n    });\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        chatId,\n        threadId,\n        queryId,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        threadId,\n        chatId,\n        isSilent,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    emojiStatusSlug?: string;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  emojiStatusSlug,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n    openUniqueGiftBySlug,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (emojiStatusSlug) {\n      openUniqueGiftBySlug({ slug: emojiStatusSlug });\n      return;\n    }\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n    const emojiStatusSlug = emojiStatus?.type === 'collectible' ? emojiStatus.slug : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      emojiStatusSlug,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message)?.text !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        asPreview: true,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <span className=\"embedded-sender-wrapper\">\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderForwardSender() {\n    return forwardSenderTitle && !areSendersSame && (\n      <span className=\"embedded-forward-sender-wrapper\">\n        <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n        <span className=\"forward-sender-title\">\n          {renderText(forwardSenderTitle)}\n        </span>\n      </span>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      peer={sender}\n      emojiIconClassName=' className=\"EmbeddedMessage--background-icons\"'\n      ref={ref}\n      shouldReset\n      noUserColors={noUserColors}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n        'no-selection',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {renderForwardSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (chat?.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  groupStatefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { groupStatefulContent } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  lastMessageSender?: ApiPeer;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n} from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  lastMessageTopic,\n  lastMessageSender,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            asPreview: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    chat, chatId, draft, isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic,\n    mediaBlobUrl, mediaThumbnail, observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, undefined, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterPeersByQuery({\n      ids: unique([\n        ...((getWithInlineBots() && topInlineBotIds) || []),\n        ...(memberIds || []),\n      ]),\n      query: filter,\n      type: 'user',\n    });\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n    onStateChange?.({\n      height: 0,\n      isOpen: false,\n    });\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","import type { ApiPaidMedia } from '../../../../api/types';\n\nexport default function getSingularPaidMedia(media?: ApiPaidMedia) {\n  if (!media || media.extendedMedia.length !== 1) {\n    return {\n      photo: undefined,\n      video: undefined,\n    };\n  }\n\n  const singularMedia = media.extendedMedia[0];\n  const isPreview = 'mediaType' in singularMedia;\n  const photo = isPreview ? (!singularMedia.duration ? singularMedia : undefined) : singularMedia.photo;\n  const video = isPreview ? (singularMedia.duration ? singularMedia : undefined) : singularMedia.video;\n\n  return { photo, video };\n}\n","/* eslint-disable no-bitwise */\n// Based on\n// https://github.com/telegramdesktop/tdesktop/blob/dev/Telegram/SourceFiles/ui/grouped_layout.cpp\n// https://github.com/overtake/TelegramSwift/blob/master/Telegram-Mac/GroupedLayout.swift#L83\n\nimport type { ApiDimensions, ApiMessage } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { getMessageContent } from '../../../../global/helpers';\nimport { clamp } from '../../../../util/math';\nimport { getAvailableWidth } from '../../../common/helpers/mediaDimensions';\nimport { calculateMediaDimensions } from './mediaDimensions';\n\nexport const AlbumRectPart = {\n  None: 0,\n  Top: 1,\n  Right: 2,\n  Bottom: 4,\n  Left: 8,\n};\n\ntype IAttempt = {\n  lineCounts: number[];\n  heights: number[];\n};\nexport type IMediaDimensions = {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\ntype IMediaLayout = {\n  dimensions: IMediaDimensions;\n  sides: number;\n};\ntype ILayoutParams = {\n  ratios: number[];\n  proportions: string;\n  averageRatio: number;\n  maxWidth: number;\n  minWidth: number;\n  maxHeight: number;\n  spacing: number;\n};\nexport type IAlbumLayout = {\n  layout: IMediaLayout[];\n  containerStyle: ApiDimensions;\n};\n\nfunction getRatios(messages: ApiMessage[], isSingleMessage?: boolean, isMobile?: boolean) {\n  const isOutgoing = messages[0].isOutgoing;\n  const allMedia = (isSingleMessage\n    ? messages[0].content.paidMedia!.extendedMedia.map((media) => (\n      'mediaType' in media ? media : (media.photo || media.video)\n    ))\n    : messages.map((message) => (\n      getMessageContent(message).photo || getMessageContent(message).video\n    ))\n  ).filter(Boolean);\n  return allMedia.map(\n    (media) => {\n      const dimensions = calculateMediaDimensions({\n        media,\n        isOwn: isOutgoing,\n        isMobile,\n      }) as ApiDimensions;\n\n      return dimensions.width / dimensions.height;\n    },\n  );\n}\n\nfunction getProportions(ratios: number[]) {\n  return ratios.map((ratio) => (ratio > 1.2 ? 'w' : (ratio < 0.8 ? 'n' : 'q'))).join('');\n}\n\nfunction getAverageRatio(ratios: number[]) {\n  return ratios.reduce((result, ratio) => ratio + result, 1) / ratios.length;\n}\n\nfunction accumulate(list: number[], initValue: number) {\n  return list.reduce((accumulator, item) => accumulator + item, initValue);\n}\n\nfunction cropRatios(ratios: number[], averageRatio: number) {\n  return ratios.map((ratio) => {\n    return (averageRatio > 1.1 ? clamp(ratio, 1, 2.75) : clamp(ratio, 0.6667, 1));\n  });\n}\n\nfunction calculateContainerSize(layout: IMediaLayout[]) {\n  const styles: ApiDimensions = { width: 0, height: 0 };\n  layout.forEach(({\n    dimensions,\n    sides,\n  }) => {\n    if (sides & AlbumRectPart.Right) {\n      styles.width = dimensions.width + dimensions.x;\n    }\n    if (sides & AlbumRectPart.Bottom) {\n      styles.height = dimensions.height + dimensions.y;\n    }\n  });\n\n  return styles;\n}\n\nexport function calculateAlbumLayout(\n  isOwn: boolean,\n  noAvatars: boolean,\n  album: IAlbum,\n  isMobile?: boolean,\n): IAlbumLayout {\n  const spacing = 2;\n  const ratios = getRatios(album.messages, album.isPaidMedia, isMobile);\n  const proportions = getProportions(ratios);\n  const averageRatio = getAverageRatio(ratios);\n  const albumCount = ratios.length;\n  const forceCalc = ratios.some((ratio) => ratio > 2);\n  const maxWidth = getAvailableWidth(isOwn, false, noAvatars, isMobile);\n  const maxHeight = maxWidth;\n\n  let layout;\n\n  const params = {\n    ratios,\n    proportions,\n    averageRatio,\n    maxWidth,\n    minWidth: 100,\n    maxHeight,\n    spacing,\n  };\n\n  if (albumCount >= 5 || forceCalc) {\n    layout = layoutWithComplexLayouter(params);\n  } else if (albumCount === 2) {\n    layout = layoutTwo(params);\n  } else if (albumCount === 3) {\n    layout = layoutThree(params);\n  } else {\n    layout = layoutFour(params);\n  }\n\n  return {\n    layout,\n    containerStyle: calculateContainerSize(layout),\n  };\n}\n\nfunction layoutWithComplexLayouter({\n  ratios: originalRatios,\n  averageRatio,\n  maxWidth,\n  minWidth,\n  spacing,\n  maxHeight = (4 * maxWidth) / 3,\n}: ILayoutParams) {\n  const ratios = cropRatios(originalRatios, averageRatio);\n  const count = originalRatios.length;\n  const result = new Array(count);\n  const attempts: IAttempt[] = [];\n\n  const multiHeight = (offset: number, attemptCount: number) => {\n    const attemptRatios = ratios.slice(offset, offset + attemptCount);\n    const sum = accumulate(attemptRatios, 0);\n\n    return (maxWidth - (attemptCount - 1) * spacing) / sum;\n  };\n\n  const pushAttempt = (lineCounts: number[]) => {\n    const heights: number[] = [];\n    let offset = 0;\n    lineCounts.forEach((currentCount) => {\n      heights.push(multiHeight(offset, currentCount));\n      offset += currentCount;\n    });\n\n    attempts.push({\n      lineCounts,\n      heights,\n    });\n  };\n\n  for (let first = 1; first !== count; ++first) {\n    const second = count - first;\n    if (first <= 3 && second <= 3) {\n      pushAttempt([first, second]);\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      const third = count - first - second;\n      if (first <= 3 && second <= (averageRatio < 0.85 ? 4 : 3) && third <= 3) {\n        pushAttempt([first, second, third]);\n      }\n    }\n  }\n\n  for (let first = 1; first !== count - 1; ++first) {\n    for (let second = 1; second !== count - first; ++second) {\n      for (let third = 1; third !== count - first - second; ++third) {\n        const fourth = count - first - second - third;\n        if (first <= 3 && second <= 3 && third <= 3 && fourth <= 4) {\n          pushAttempt([first, second, third, fourth]);\n        }\n      }\n    }\n  }\n\n  let optimalAttempt: IAttempt | undefined;\n  let optimalDiff = 0;\n  for (let i = 0; i < attempts.length; i++) {\n    const {\n      heights,\n      lineCounts,\n    } = attempts[i];\n    const lineCount = lineCounts.length;\n    const totalHeight = accumulate(heights, 0) + spacing * (lineCount - 1);\n    const minLineHeight = Math.min(...heights);\n    const bad1 = minLineHeight < minWidth ? 1.5 : 1;\n    const bad2 = (() => {\n      for (let line = 1; line !== lineCount; ++line) {\n        if (lineCounts[line - 1] > lineCounts[line]) {\n          return 1.5;\n        }\n      }\n\n      return 1;\n    })();\n    const diff = Math.abs(totalHeight - maxHeight) * bad1 * bad2;\n\n    if (!optimalAttempt || diff < optimalDiff) {\n      optimalAttempt = attempts[i];\n      optimalDiff = diff;\n    }\n  }\n\n  const optimalCounts = optimalAttempt!.lineCounts;\n  const optimalHeights = optimalAttempt!.heights;\n  const rowCount = optimalCounts.length;\n  let index = 0;\n  let y = 0;\n  for (let row = 0; row !== rowCount; ++row) {\n    const colCount = optimalCounts[row];\n    const lineHeight = optimalHeights[row];\n    const height = Math.round(lineHeight);\n    let x = 0;\n\n    for (let col = 0; col !== colCount; ++col) {\n      const sides = AlbumRectPart.None\n        | (row === 0 ? AlbumRectPart.Top : AlbumRectPart.None)\n        | (row === rowCount - 1 ? AlbumRectPart.Bottom : AlbumRectPart.None)\n        | (col === 0 ? AlbumRectPart.Left : AlbumRectPart.None)\n        | (col === colCount - 1 ? AlbumRectPart.Right : AlbumRectPart.None);\n      const ratio = ratios[index];\n      const width = col === colCount - 1 ? maxWidth - x : Math.round(ratio * lineHeight);\n      result[index] = {\n        dimensions: {\n          x,\n          y,\n          width,\n          height,\n        },\n        sides,\n      };\n      x += width + spacing;\n      ++index;\n    }\n    y += height + spacing;\n  }\n\n  return result;\n}\n\nfunction layoutTwo(params: ILayoutParams) {\n  const {\n    ratios,\n    proportions,\n    averageRatio,\n  } = params;\n  return proportions === 'ww' && averageRatio > 1.4 && ratios[1] - ratios[0] < 0.2\n    ? layoutTwoTopBottom(params)\n    : proportions === 'ww' || proportions === 'qq'\n      ? layoutTwoLeftRightEqual(params)\n      : layoutTwoLeftRight(params);\n}\n\nfunction layoutTwoTopBottom(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const height = Math.round(Math.min(maxWidth / ratios[0], Math.min(maxWidth / ratios[1], (maxHeight - spacing) / 2)));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: height + spacing,\n      width: maxWidth,\n      height,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutTwoLeftRightEqual(params: ILayoutParams) {\n  const {\n    ratios,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const width = (maxWidth - spacing) / 2;\n  const height = Math.round(Math.min(width / ratios[0], Math.min(width / ratios[1], maxHeight)));\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: width + spacing,\n      y: 0,\n      width,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutTwoLeftRight(params: ILayoutParams) {\n  const {\n    ratios,\n    minWidth,\n    maxWidth,\n    spacing,\n    maxHeight,\n  } = params;\n  const minimalWidth = Math.round(1.5 * minWidth);\n  const secondWidth = Math.min(\n    Math.round(\n      Math.max(\n        0.4 * (maxWidth - spacing),\n        (maxWidth - spacing) / ratios[0] / (1 / ratios[0] + 1 / ratios[1]),\n      ),\n    ),\n    maxWidth - spacing - minimalWidth,\n  );\n  const firstWidth = maxWidth - secondWidth - spacing;\n  const height = Math.min(maxHeight, Math.round(Math.min(firstWidth / ratios[0], secondWidth / ratios[1])));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: firstWidth + spacing,\n      y: 0,\n      width: secondWidth,\n      height,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutThree(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'n'\n    ? layoutThreeLeftAndOther(params)\n    : layoutThreeTopAndOther(params);\n}\n\nfunction layoutThreeLeftAndOther(params: ILayoutParams) {\n  const {\n    maxHeight,\n    spacing,\n    ratios,\n    maxWidth,\n    minWidth,\n  } = params;\n  const firstHeight = maxHeight;\n  const thirdHeight = Math.round(\n    Math.min(\n      (maxHeight - spacing) / 2,\n      (ratios[1] * (maxWidth - spacing)) / (ratios[2] + ratios[1]),\n    ),\n  );\n  const secondHeight = firstHeight - thirdHeight - spacing;\n  const rightWidth = Math.max(\n    minWidth,\n    Math.round(\n      Math.min(\n        (maxWidth - spacing) / 2,\n        Math.min(\n          thirdHeight * ratios[2],\n          secondHeight * ratios[1],\n        ),\n      ),\n    ),\n  );\n  const leftWidth = Math.min(Math.round(firstHeight * ratios[0]), maxWidth - spacing - rightWidth);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: leftWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: 0,\n      width: rightWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: leftWidth + spacing,\n      y: secondHeight + spacing,\n      width: rightWidth,\n      height: thirdHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutThreeTopAndOther(params: ILayoutParams) {\n  const {\n    maxWidth,\n    ratios,\n    maxHeight,\n    spacing,\n  } = params;\n  const firstWidth = maxWidth;\n  const firstHeight = Math.round(Math.min(firstWidth / ratios[0], 0.66 * (maxHeight - spacing)));\n  const secondWidth = (maxWidth - spacing) / 2;\n  const secondHeight = Math.min(\n    maxHeight - firstHeight - spacing,\n    Math.round(Math.min(\n      secondWidth / ratios[1],\n      secondWidth / ratios[2],\n    )),\n  );\n  const thirdWidth = firstWidth - secondWidth - spacing;\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: firstWidth,\n      height: firstHeight,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: firstHeight + spacing,\n      width: secondWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: secondWidth + spacing,\n      y: firstHeight + spacing,\n      width: thirdWidth,\n      height: secondHeight,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n\nfunction layoutFour(params: ILayoutParams) {\n  const { proportions } = params;\n\n  return proportions[0] === 'w'\n    ? layoutFourTopAndOther(params)\n    : layoutFourLeftAndOther(params);\n}\n\nfunction layoutFourTopAndOther({\n  maxWidth,\n  ratios,\n  spacing,\n  maxHeight,\n  minWidth,\n}: ILayoutParams) {\n  const w = maxWidth;\n  const h0 = Math.round(Math.min(w / ratios[0], 0.66 * (maxHeight - spacing)));\n  const h = Math.round((maxWidth - 2 * spacing) / (ratios[1] + ratios[2] + ratios[3]));\n  const w0 = Math.max(minWidth, Math.round(Math.min(0.4 * (maxWidth - 2 * spacing), h * ratios[1])));\n  const w2 = Math.round(Math.max(Math.max(minWidth, 0.33 * (maxWidth - 2 * spacing)), h * ratios[3]));\n  const w1 = w - w0 - w2 - 2 * spacing;\n  const h1 = Math.min(maxHeight - h0 - spacing, h);\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w,\n      height: h0,\n    },\n    sides: AlbumRectPart.Left | AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: 0,\n      y: h0 + spacing,\n      width: w0,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Left,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing + w1 + spacing,\n      y: h0 + spacing,\n      width: w2,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right | AlbumRectPart.Bottom,\n  }];\n}\n\nfunction layoutFourLeftAndOther({\n  maxHeight,\n  ratios,\n  maxWidth,\n  spacing,\n  minWidth,\n}: ILayoutParams) {\n  const h = maxHeight;\n  const w0 = Math.round(Math.min(h * ratios[0], 0.6 * (maxWidth - spacing)));\n  const w = Math.round((maxHeight - 2 * spacing) / (1 / ratios[1] + 1 / ratios[2] + 1 / ratios[3]));\n  const h0 = Math.round(w / ratios[1]);\n  const h1 = Math.round(w / ratios[2]);\n  const h2 = h - h0 - h1 - 2 * spacing;\n  const w1 = Math.max(minWidth, Math.min(maxWidth - w0 - spacing, w));\n\n  return [{\n    dimensions: {\n      x: 0,\n      y: 0,\n      width: w0,\n      height: h,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Left | AlbumRectPart.Bottom,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: 0,\n      width: w1,\n      height: h0,\n    },\n    sides: AlbumRectPart.Top | AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + spacing,\n      width: w1,\n      height: h1,\n    },\n    sides: AlbumRectPart.Right,\n  }, {\n    dimensions: {\n      x: w0 + spacing,\n      y: h0 + h1 + 2 * spacing,\n      width: w1,\n      height: h2,\n    },\n    sides: AlbumRectPart.Bottom | AlbumRectPart.Right,\n  }];\n}\n","import type { FastTextApi } from '../lib/fasttextweb/fasttext.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TRANSLATION_SUPPORTED } from './windowEnvironment';\n\nimport Deferred from './Deferred';\nimport { createConnector } from './PostMessageConnector';\n\nconst WORKER_INIT_DELAY = 4000;\n\nconst DEFAULT_THRESHOLD = 0.2;\nconst DEFAULT_LABELS_COUNT = 5;\n\nlet worker: Connector<FastTextApi> | undefined;\nconst initializationDeferred = new Deferred();\n\nif (IS_TRANSLATION_SUPPORTED) {\n  setTimeout(initWorker, WORKER_INIT_DELAY);\n}\n\nfunction initWorker() {\n  if (!worker) {\n    worker = createConnector<FastTextApi>(\n      new Worker(new URL('../lib/fasttextweb/fasttext.worker.ts', import.meta.url)),\n    );\n    initializationDeferred.resolve();\n  }\n}\n\nexport async function detectLanguage(text: string, threshold = DEFAULT_THRESHOLD) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguage', args: [text, threshold] });\n  return result;\n}\n\nexport async function detectLanguageProbability(\n  text: string, labelsCount = DEFAULT_LABELS_COUNT, threshold = DEFAULT_THRESHOLD,\n) {\n  if (!worker) await initializationDeferred.promise;\n  const result = await worker!.request({ name: 'detectLanguageProbability', args: [text, labelsCount, threshold] });\n  return result;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiMessage } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport LimitedMap from '../../../../util/primitives/LimitedMap';\nimport { throttle } from '../../../../util/schedulers';\n\n// https://github.com/DrKLO/Telegram/blob/dfd74f809e97d1ecad9672fc7388cb0223a95dfc/TMessagesProj/src/main/java/org/telegram/messenger/TranslateController.java#L35\nconst MIN_MESSAGES_CHECKED = 8;\nconst MIN_TRANSLATABLE_RATIO = 0.3;\nconst MIN_DETECTABLE_RATIO = 0.6;\n\nconst THROTTLE_DELAY = 1000;\nconst MESSAGES_LIMIT = 150;\n\ntype MessageMetadata = {\n  id: number;\n  isTranslatable: boolean;\n  detectedLanguage: string | undefined;\n};\n\nconst CHAT_STATS = new Map<string, LimitedMap<number, MessageMetadata>>();\n\nexport default function useDetectChatLanguage(\n  message: ApiMessage, detectedLanguage?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>,\n) {\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    const isTranslatable = Boolean(message.content.text?.text.length);\n    processMessageMetadata(message.chatId, message.id, isTranslatable, detectedLanguage);\n  }, [message, detectedLanguage, isDisabled, getIsReady]);\n}\n\nconst throttledMakeChatDecision = throttle(makeChatDecision, THROTTLE_DELAY);\n\nfunction processMessageMetadata(chatId: string, id: number, isTranslatable: boolean, detectedLanguage?: string) {\n  const chatStats = CHAT_STATS.get(chatId) || new LimitedMap<number, MessageMetadata>(MESSAGES_LIMIT);\n\n  const previousMetadata = chatStats.get(id);\n  if (previousMetadata && previousMetadata.detectedLanguage === detectedLanguage\n    && previousMetadata.isTranslatable === isTranslatable\n  ) {\n    return;\n  }\n\n  chatStats.set(id, {\n    id,\n    isTranslatable,\n    detectedLanguage,\n  });\n\n  CHAT_STATS.set(chatId, chatStats);\n\n  throttledMakeChatDecision(chatId);\n}\n\nfunction makeChatDecision(chatId: string) {\n  const { updateChatDetectedLanguage } = getActions();\n  const chatStats = CHAT_STATS.get(chatId);\n  if (!chatStats) {\n    return;\n  }\n\n  const messagesChecked = chatStats.size;\n  if (messagesChecked < MIN_MESSAGES_CHECKED) {\n    return;\n  }\n\n  let translatableCount = 0;\n  let detectableCount = 0;\n  const languageOccurrences = new Map<string, number>();\n\n  for (const metadata of chatStats.values()) {\n    if (metadata.isTranslatable) {\n      translatableCount++;\n    }\n\n    if (metadata.detectedLanguage) {\n      detectableCount++;\n    }\n\n    const language = metadata.detectedLanguage;\n    if (language) {\n      const occurrences = languageOccurrences.get(language) || 0;\n      languageOccurrences.set(language, occurrences + 1);\n    }\n  }\n\n  const translatableRatio = translatableCount / messagesChecked;\n  const detectableRatio = detectableCount / messagesChecked;\n\n  if (translatableRatio < MIN_TRANSLATABLE_RATIO || detectableRatio < MIN_DETECTABLE_RATIO) {\n    return;\n  }\n\n  const mostFrequentLanguage = Array.from(languageOccurrences.entries())\n    .sort(([, a], [, b]) => b - a)[0][0];\n\n  updateChatDetectedLanguage({\n    chatId,\n    detectedLanguage: mostFrequentLanguage,\n  });\n}\n","import type { RefObject } from 'react';\nimport type React from '../../../../lib/teact/teact';\nimport { useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { captureEvents, SwipeDirection } from '../../../../util/captureEvents';\nimport stopEvent from '../../../../util/stopEvent';\nimport { IS_ANDROID, IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport windowSize from '../../../../util/windowSize';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { preventMessageInputBlur } from '../../helpers/preventMessageInputBlur';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\n\nconst ANDROID_KEYBOARD_HIDE_DELAY_MS = 350;\nconst SWIPE_ANIMATION_DURATION = 150;\nconst QUICK_REACTION_DOUBLE_TAP_DELAY = 200;\nconst QUICK_REACTION_AREA_WIDTH = 3 * REM;\nconst QUICK_REACTION_AREA_HEIGHT = Number(REM);\nconst GROUP_MESSAGE_HOVER_ATTRIBUTE = 'data-is-document-group-hover';\n\nexport default function useOuterHandlers(\n  selectMessage: (e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void,\n  containerRef: RefObject<HTMLDivElement>,\n  messageId: number,\n  isInSelectMode: boolean,\n  canReply: boolean,\n  isProtected: boolean,\n  onContextMenu: (e: React.MouseEvent) => void,\n  handleBeforeContextMenu: (e: React.MouseEvent) => void,\n  chatId: string,\n  isContextMenuShown: boolean,\n  quickReactionRef: RefObject<HTMLDivElement>,\n  shouldHandleMouseLeave: boolean,\n  getIsMessageListReady?: Signal<boolean>,\n) {\n  const { updateDraftReplyInfo, sendDefaultReaction } = getActions();\n\n  const [isQuickReactionVisible, markQuickReactionVisible, unmarkQuickReactionVisible] = useFlag();\n  const [isSwiped, markSwiped, unmarkSwiped] = useFlag();\n  const doubleTapTimeoutRef = useRef<NodeJS.Timeout>();\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  }\n\n  const handleMouseMove = useThrottledCallback((e: React.MouseEvent) => {\n    const quickReactionContainer = quickReactionRef.current;\n    if (!quickReactionContainer) return;\n\n    const { clientX, clientY } = e;\n    const {\n      x: quickReactionX, width: quickReactionWidth, y: quickReactionY, height: quickReactionHeight,\n    } = quickReactionContainer.getBoundingClientRect();\n    const x = quickReactionX + quickReactionWidth / 2;\n    const y = quickReactionY + quickReactionHeight / 2;\n\n    const isVisibleX = Math.abs(x - clientX) < QUICK_REACTION_AREA_WIDTH;\n    const isVisibleY = Math.abs(y - clientY) < QUICK_REACTION_AREA_HEIGHT;\n    if (isVisibleX && isVisibleY) {\n      markQuickReactionVisible();\n    } else {\n      unmarkQuickReactionVisible();\n    }\n  }, [quickReactionRef], requestMeasure);\n\n  function handleSendQuickReaction(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleTap(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      const target = e.target as HTMLDivElement;\n      if (!target.classList.contains('text-content') && !target.classList.contains('Message')) {\n        return;\n      }\n\n      if (windowSize.getIsKeyboardVisible()) {\n        setTimeout(() => {\n          onContextMenu(e);\n        }, ANDROID_KEYBOARD_HIDE_DELAY_MS);\n      } else {\n        onContextMenu(e);\n      }\n    }\n  }\n\n  function handleDoubleTap() {\n    sendDefaultReaction({\n      chatId,\n      messageId,\n    });\n  }\n\n  function handleClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (isInSelectMode) {\n      selectMessage(e);\n      return;\n    }\n\n    if (!IS_TOUCH_ENV) return;\n\n    if (doubleTapTimeoutRef.current) {\n      clearInterval(doubleTapTimeoutRef.current);\n      doubleTapTimeoutRef.current = undefined;\n      handleDoubleTap();\n      return;\n    }\n\n    doubleTapTimeoutRef.current = setTimeout(() => {\n      doubleTapTimeoutRef.current = undefined;\n      handleTap(e);\n    }, QUICK_REACTION_DOUBLE_TAP_DELAY);\n  }\n\n  function handleContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (IS_ANDROID) {\n      if ((e.target as HTMLElement).matches('a[href]') || isContextMenuShown) {\n        return;\n      }\n\n      e.preventDefault();\n      selectMessage();\n    } else {\n      onContextMenu(e);\n    }\n  }\n\n  function handleContainerDoubleClick() {\n    if (IS_TOUCH_ENV || !canReply) return;\n\n    updateDraftReplyInfo({ replyToMsgId: messageId, replyToPeerId: undefined, quoteText: undefined });\n  }\n\n  function stopPropagation(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.stopPropagation();\n  }\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || isInSelectMode || !canReply || isContextMenuShown || !getIsMessageListReady?.()) {\n      return undefined;\n    }\n\n    let startedAt: number | undefined;\n    return captureEvents(containerRef.current!, {\n      selectorToPreventScroll: '.MessageList',\n      excludedClosestSelector: '.no-word-wrap',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          if (!startedAt) {\n            startedAt = Date.now();\n          }\n\n          markSwiped();\n\n          return true;\n        }\n\n        return false;\n      }),\n      onRelease: () => {\n        if (!startedAt || !canReply) {\n          return;\n        }\n\n        updateDraftReplyInfo({ replyToMsgId: messageId });\n\n        setTimeout(unmarkSwiped, Math.max(0, SWIPE_ANIMATION_DURATION - (Date.now() - startedAt)));\n        startedAt = undefined;\n      },\n    });\n  }, [\n    containerRef, isInSelectMode, messageId, markSwiped, unmarkSwiped, canReply, isContextMenuShown,\n    getIsMessageListReady,\n  ]);\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    // Because `mousemove` event is throttled, we need to also throttle `mouseleave` event,\n    // so the order of events is preserved\n    requestMeasure(unmarkQuickReactionVisible);\n    if (shouldHandleMouseLeave) handleDocumentGroupMouseLeave(e);\n  }\n\n  return {\n    handleMouseDown: !isInSelectMode ? handleMouseDown : undefined,\n    handleClick,\n    handleContextMenu: !isInSelectMode ? handleContextMenu : (isProtected ? stopEvent : undefined),\n    handleDoubleClick: !isInSelectMode ? handleContainerDoubleClick : undefined,\n    handleContentDoubleClick: !IS_TOUCH_ENV ? stopPropagation : undefined,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  };\n}\n\nfunction handleDocumentGroupMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.setAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE, '');\n  }\n}\n\nfunction handleDocumentGroupMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n  const lastGroupElement = getLastElementInDocumentGroup(e.currentTarget);\n  if (lastGroupElement) {\n    lastGroupElement.removeAttribute(GROUP_MESSAGE_HOVER_ATTRIBUTE);\n  }\n}\n\nfunction getLastElementInDocumentGroup(element: Element) {\n  let current: Element | null = element;\n\n  do {\n    current = current.nextElementSibling;\n  } while (current && !current.classList.contains('last-in-document-group'));\n\n  return current;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport {\n  getPeerTitle,\n  getStoryMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  story?: ApiTypeStory;\n  sender?: ApiPeer;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  onClick: NoneToVoidFunction;\n};\n\nconst NBSP = '\\u00A0';\n\nconst EmbeddedStory: FC<OwnProps> = ({\n  story,\n  sender,\n  noUserColors,\n  isProtected,\n  observeIntersectionForLoading,\n  onClick,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isFullStory = story && 'content' in story;\n  const isExpiredStory = story && 'isDeleted' in story;\n  const isVideoStory = isFullStory && Boolean(story.content.video);\n  const title = isFullStory ? 'Story' : (isExpiredStory ? 'ExpiredStory' : 'Loading');\n\n  const mediaBlobUrl = useMedia(isFullStory && getStoryMediaHash(story, 'pictogram'), !isIntersecting);\n  const mediaThumbnail = isVideoStory ? story.content.video!.thumbnail?.dataUri : undefined;\n  const pictogramUrl = mediaBlobUrl || mediaThumbnail;\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : undefined;\n  const handleFastClick = useLastCallback(() => {\n    if (story && !isExpiredStory) {\n      onClick();\n    } else {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(handleFastClick);\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      peerColor={sender?.color}\n      noUserColors={noUserColors}\n      shouldReset\n      className={buildClassName(\n        'EmbeddedMessage',\n        pictogramUrl && 'with-thumb',\n      )}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {pictogramUrl && renderPictogram(pictogramUrl, isProtected)}\n      <div className=\"message-text with-message-color\">\n        <p className=\"embedded-text-wrapper\">\n          {isExpiredStory && (\n            <Icon name=\"story-expired\" className=\"embedded-origin-icon\" />\n          )}\n          {isFullStory && (\n            <Icon name=\"story-reply\" className=\"embedded-origin-icon\" />\n          )}\n          {lang(title)}\n        </p>\n        <div className=\"message-title\">{renderText(senderTitle || NBSP)}</div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nfunction renderPictogram(\n  srcUrl: string,\n  isProtected?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  return (\n    <div className=\"embedded-thumb\">\n      <img\n        src={srcUrl}\n        width={width}\n        height={height}\n        alt=\"\"\n        className=\"pictogram\"\n        draggable={false}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default EmbeddedStory;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getTopicColorCssVariable } from '../../util/forumColors';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\n\nimport styles from './TopicChip.module.scss';\n\nimport blankSrc from '../../assets/blank.png';\n\ntype OwnProps = {\n  topic?: ApiTopic;\n  className?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst TOPIC_ICON_SIZE = 1.125 * REM;\n\nconst TopicChip: FC<OwnProps> = ({\n  topic,\n  className,\n  onClick,\n}) => {\n  const lang = useOldLang();\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={`--topic-button-accent-color: var(${getTopicColorCssVariable(topic?.iconColor)})`}\n      onClick={onClick}\n    >\n      {topic\n        ? <TopicIcon topic={topic} size={TOPIC_ICON_SIZE} />\n        : <img src={blankSrc} alt=\"\" draggable={false} />}\n      {topic?.title ? renderText(topic.title) : lang('Loading')}\n      {topic?.isClosed && <Icon name=\"lock\" />}\n      <Icon name=\"next\" />\n    </div>\n  );\n};\n\nexport default memo(TopicChip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"JldIqqof\"};","import type { MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { OwnProps as PhotoProps } from '../Photo';\nimport type { OwnProps as VideoProps } from '../Video';\n\nimport {\n  selectIsInSelectMode,\n  selectIsMessageSelected,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport Icon from '../../../common/icons/Icon';\n\ntype OwnProps<T> =\n  (PhotoProps<T> | VideoProps<T>) & {\n    clickArg: number;\n    noSelectControls?: boolean;\n  };\n\ntype StateProps = {\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n};\n\nexport default function withSelectControl(WrappedComponent: FC) {\n  // eslint-disable-next-line @typescript-eslint/comma-dangle\n  const ComponentWithSelectControl = <T,>(props: OwnProps<T> & StateProps) => {\n    const {\n      isInSelectMode,\n      isSelected,\n      dimensions,\n      clickArg,\n    } = props;\n    const { toggleMessageSelection } = getActions();\n\n    const handleMessageSelect = useLastCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n      e.stopPropagation();\n      toggleMessageSelection({ messageId: clickArg, withShift: e?.shiftKey });\n    });\n\n    const newProps = useMemo(() => {\n      const { dimensions: dims, onClick } = props;\n      return {\n        ...props,\n        isInSelectMode,\n        isSelected,\n        dimensions: {\n          ...dims,\n          x: 0,\n          y: 0,\n        },\n        onClick: isInSelectMode ? undefined : onClick,\n      };\n    }, [props, isInSelectMode, isSelected]);\n\n    return (\n      <div\n        className={buildClassName('album-item-select-wrapper', isSelected && 'is-selected')}\n        style={dimensions ? `left: ${dimensions.x}px; top: ${dimensions.y}px;` : ''}\n        onClick={isInSelectMode ? handleMessageSelect : undefined}\n      >\n        {isInSelectMode && (\n          <div className=\"message-select-control\">\n            {isSelected && (\n              <Icon name=\"select\" />\n            )}\n          </div>\n        )}\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <WrappedComponent {...newProps} />\n      </div>\n    );\n  };\n\n  return memo(withGlobal<OwnProps<unknown>>(\n    (global, ownProps) => {\n      const { clickArg, noSelectControls } = ownProps;\n      return {\n        isInSelectMode: !noSelectControls && selectIsInSelectMode(global),\n        isSelected: !noSelectControls && selectIsMessageSelected(global, clickArg),\n      };\n    },\n  )(ComponentWithSelectControl)) as typeof ComponentWithSelectControl;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { GlobalState, TabState } from '../../../global/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IAlbum, ISettings } from '../../../types';\nimport type { IAlbumLayout } from './helpers/calculateAlbumLayout';\n\nimport {\n  getIsDownloading, getMessageContent, getMessageHtmlId, getMessagePhoto,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectTheme,\n} from '../../../global/selectors';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { AlbumRectPart } from './helpers/calculateAlbumLayout';\nimport withSelectControl from './hocs/withSelectControl';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './Album.scss';\n\nconst PhotoWithSelect = withSelectControl(Photo);\nconst VideoWithSelect = withSelectControl(Video);\n\ntype OwnProps = {\n  album: IAlbum;\n  observeIntersection: ObserveFn;\n  hasCustomAppendix?: boolean;\n  isOwn: boolean;\n  isProtected?: boolean;\n  albumLayout: IAlbumLayout;\n  onMediaClick: (messageId: number, index?: number) => void;\n};\n\ntype StateProps = {\n  theme: ISettings['theme'];\n  uploadsByKey: GlobalState['fileUploads']['byMessageKey'];\n  activeDownloads: TabState['activeDownloads'];\n};\n\nconst Album: FC<OwnProps & StateProps> = ({\n  album,\n  observeIntersection,\n  hasCustomAppendix,\n  isOwn,\n  isProtected,\n  albumLayout,\n  onMediaClick,\n  uploadsByKey,\n  activeDownloads,\n  theme,\n}) => {\n  const { cancelUploadMedia } = getActions();\n\n  const { content: { paidMedia } } = album.mainMessage;\n\n  const mediaCount = album.isPaidMedia ? paidMedia!.extendedMedia.length : album.messages.length;\n\n  const handlePaidMediaClick = useLastCallback((index: number) => {\n    onMediaClick(album.mainMessage.id, index);\n  });\n\n  const handleAlbumMessageClick = useLastCallback((messageId: number) => {\n    onMediaClick(messageId);\n  });\n\n  const handleCancelUpload = useLastCallback((messageId: number) => {\n    cancelUploadMedia({ chatId: album.mainMessage.chatId, messageId });\n  });\n\n  const messages = useMemo(() => {\n    if (album.isPaidMedia) {\n      return album.mainMessage.content.paidMedia!.extendedMedia.map(() => album.mainMessage);\n    }\n\n    return album.messages;\n  }, [album]);\n\n  function renderAlbumMessage(message: ApiMessage, index: number) {\n    const renderingPaidMedia = album.isPaidMedia ? message.content.paidMedia?.extendedMedia[index] : undefined;\n    const paidPhotoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.photo;\n    const paidVideoOrPreview = renderingPaidMedia && 'mediaType' in renderingPaidMedia\n      ? renderingPaidMedia : renderingPaidMedia?.video;\n    const photo = paidPhotoOrPreview || getMessagePhoto(message);\n    const video = paidVideoOrPreview || getMessageContent(message).video;\n\n    const fileUpload = uploadsByKey[getMessageKey(message)];\n    const uploadProgress = fileUpload?.progress;\n    const { dimensions, sides } = albumLayout.layout[index];\n\n    // Ignoring global updates is a known drawback here\n    const canAutoLoad = selectCanAutoLoadMedia(getGlobal(), message);\n    const canAutoPlay = selectCanAutoPlayMedia(getGlobal(), message);\n\n    if (photo) {\n      const shouldAffectAppendix = hasCustomAppendix && (\n        // eslint-disable-next-line no-bitwise\n        (isOwn ? index === mediaCount - 1 : Boolean(sides & AlbumRectPart.Left && sides & AlbumRectPart.Bottom))\n      );\n\n      return (\n        <PhotoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id, album.isPaidMedia ? index : undefined)}`}\n          photo={photo}\n          isOwn={isOwn}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          shouldAffectAppendix={shouldAffectAppendix}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={photo.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, photo)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    } else if (video) {\n      return (\n        <VideoWithSelect\n          id={`album-media-${getMessageHtmlId(message.id)}`}\n          video={video}\n          observeIntersectionForLoading={observeIntersection}\n          canAutoLoad={canAutoLoad}\n          canAutoPlay={canAutoPlay}\n          uploadProgress={uploadProgress}\n          dimensions={dimensions}\n          isProtected={isProtected}\n          clickArg={album.isPaidMedia ? index : message.id}\n          onClick={album.isPaidMedia ? handlePaidMediaClick : handleAlbumMessageClick}\n          onCancelUpload={handleCancelUpload}\n          isDownloading={video.mediaType !== 'extendedMediaPreview' && getIsDownloading(activeDownloads, video)}\n          theme={theme}\n          noSelectControls={album.isPaidMedia}\n        />\n      );\n    }\n\n    return undefined;\n  }\n\n  const { width: containerWidth, height: containerHeight } = albumLayout.containerStyle;\n\n  return (\n    <div\n      className=\"Album\"\n      style={`width: ${containerWidth}px; height: ${containerHeight}px;`}\n    >\n      {messages.map(renderAlbumMessage)}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const activeDownloads = selectActiveDownloads(global);\n\n    return {\n      theme,\n      uploadsByKey: global.fileUploads.byMessageKey,\n      activeDownloads,\n    };\n  },\n)(Album);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport buildStyle from '../../../util/buildStyle';\nimport safePlay from '../../../util/safePlay';\nimport { IS_ELECTRON } from '../../../util/windowEnvironment';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\n\nconst SIZE = 7 * REM;\nconst INTERACTION_BUNCH_TIME = 1000;\nconst MS_DIVIDER = 1000;\nconst TIME_DEFAULT = 0;\n\nexport default function useAnimatedEmoji(\n  chatId?: string,\n  messageId?: number,\n  soundId?: string,\n  activeEmojiInteractions?: ActiveEmojiInteraction[],\n  isOwn?: boolean,\n  emoji?: string,\n  preferredSize?: number,\n) {\n  const {\n    interactWithAnimatedEmoji, sendEmojiInteraction, sendWatchingEmojiInteraction,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const audioRef = useRef<HTMLAudioElement | undefined>(null);\n\n  const soundMediaData = useMedia(soundId ? `document${soundId}` : undefined, !soundId);\n\n  const size = preferredSize || SIZE;\n  const style = buildStyle(`width: ${size}px`, `height: ${size}px`, emoji && !IS_ELECTRON && 'cursor: pointer');\n\n  const interactions = useRef<number[] | undefined>(undefined);\n  const startedInteractions = useRef<number | undefined>(undefined);\n  const sendInteractionBunch = useLastCallback(() => {\n    const container = ref.current;\n\n    if (!container) return;\n\n    sendEmojiInteraction({\n      chatId: chatId!,\n      messageId: messageId!,\n      emoji: emoji!,\n      interactions: interactions.current!,\n    });\n    startedInteractions.current = undefined;\n    interactions.current = undefined;\n  });\n\n  const play = useLastCallback(() => {\n    const audio = audioRef.current;\n    if (soundMediaData) {\n      if (audio) {\n        audio.pause();\n        audio.remove();\n      }\n      audioRef.current = new Audio();\n      audioRef.current.src = soundMediaData;\n      safePlay(audioRef.current);\n      audioRef.current.addEventListener('ended', () => {\n        audioRef.current = undefined;\n      }, { once: true });\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    play();\n\n    const container = ref.current;\n\n    if (!emoji || !container || !messageId || !chatId) {\n      return;\n    }\n\n    const { x, y } = container.getBoundingClientRect();\n\n    interactWithAnimatedEmoji({\n      emoji: emoji!,\n      x,\n      y,\n      startSize: size,\n      isReversed: !isOwn,\n    });\n\n    if (!interactions.current) {\n      interactions.current = [];\n      startedInteractions.current = performance.now();\n      setTimeout(sendInteractionBunch, INTERACTION_BUNCH_TIME);\n    }\n\n    interactions.current.push(startedInteractions.current\n      ? (performance.now() - startedInteractions.current) / MS_DIVIDER\n      : TIME_DEFAULT);\n  });\n\n  // Set an end anchor for remote activated interaction\n  useEffect(() => {\n    const container = ref.current;\n\n    if (!container || !activeEmojiInteractions) return;\n\n    activeEmojiInteractions.forEach(({\n      id,\n      startSize,\n      messageId: interactionMessageId,\n    }) => {\n      if (startSize || messageId !== interactionMessageId) {\n        return;\n      }\n\n      const { x, y } = container.getBoundingClientRect();\n\n      sendWatchingEmojiInteraction({\n        id,\n        chatId: chatId!,\n        emoticon: emoji!,\n        startSize: size,\n        x,\n        y,\n        isReversed: !isOwn,\n      });\n      play();\n    });\n  }, [activeEmojiInteractions, chatId, emoji, isOwn, messageId, play, sendWatchingEmojiInteraction, size]);\n\n  return {\n    ref,\n    size,\n    style,\n    handleClick,\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n  selectCanPlayAnimatedEmojis,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\n\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  customEmojiId: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  observeIntersection?: ObserveFn;\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n  noPlay?: boolean;\n}\n\nconst AnimatedCustomEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  customEmojiId,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n  noPlay,\n  observeIntersection,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(\n    chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji, getCustomEmojiSize(1),\n  );\n\n  return (\n    <CustomEmoji\n      ref={ref}\n      documentId={customEmojiId}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      size={size}\n      isBig\n      noPlay={noPlay}\n      withSharedAnimation\n      forceOnHeavyAnimation={Boolean(effect && activeEmojiInteractions?.length)}\n      observeIntersectionForLoading={observeIntersection}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { customEmojiId, withEffects }) => {\n  const sticker = global.customEmojis.byId[customEmojiId];\n\n  return {\n    sticker,\n    effect: sticker?.emoji && withEffects ? selectAnimatedEmojiEffect(global, sticker.emoji) : undefined,\n    soundId: sticker?.emoji && selectAnimatedEmojiSound(global, sticker.emoji),\n    noPlay: !selectCanPlayAnimatedEmojis(global),\n  };\n})(AnimatedCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ActiveEmojiInteraction } from '../../../types';\n\nimport {\n  selectAnimatedEmoji,\n  selectAnimatedEmojiEffect,\n  selectAnimatedEmojiSound,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { LIKE_STICKER_ID } from '../../common/helpers/mediaDimensions';\n\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useAnimatedEmoji from '../../common/hooks/useAnimatedEmoji';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  emoji: string;\n  withEffects?: boolean;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  forceLoadPreview?: boolean;\n  messageId?: number;\n  chatId?: string;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n};\n\ninterface StateProps {\n  sticker?: ApiSticker;\n  effect?: ApiSticker;\n  soundId?: string;\n}\n\nconst QUALITY = 1;\n\nconst AnimatedEmoji: FC<OwnProps & StateProps> = ({\n  isOwn,\n  observeIntersection,\n  forceLoadPreview,\n  messageId,\n  chatId,\n  activeEmojiInteractions,\n  sticker,\n  effect,\n  soundId,\n}) => {\n  const {\n    ref,\n    size,\n    style,\n    handleClick,\n  } = useAnimatedEmoji(chatId, messageId, soundId, activeEmojiInteractions, isOwn, effect?.emoji);\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  return (\n    <AnimatedIconFromSticker\n      sticker={sticker}\n      size={size}\n      quality={QUALITY}\n      noLoad={!isIntersecting}\n      forcePreview={forceLoadPreview}\n      play={isIntersecting}\n      forceAlways\n      ref={ref}\n      className={buildClassName('AnimatedEmoji media-inner', sticker?.id === LIKE_STICKER_ID && 'like-sticker-thumb')}\n      style={style}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { emoji, withEffects }) => {\n  return {\n    sticker: selectAnimatedEmoji(global, emoji),\n    effect: withEffects ? selectAnimatedEmojiEffect(global, emoji) : undefined,\n    soundId: selectAnimatedEmojiSound(global, emoji),\n  };\n})(AnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiCommentsInfo } from '../../../api/types';\n\nimport { selectPeer } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Spinner from '../../ui/Spinner';\n\nimport './CommentButton.scss';\n\ntype OwnProps = {\n  threadInfo: ApiCommentsInfo;\n  disabled?: boolean;\n  isLoading?: boolean;\n  isCustomShape?: boolean;\n  asActionButton?: boolean;\n};\n\nconst SHOW_LOADER_DELAY = 450;\n\nconst CommentButton: FC<OwnProps> = ({\n  isCustomShape,\n  threadInfo,\n  disabled,\n  isLoading,\n  asActionButton,\n}) => {\n  const { openThread } = getActions();\n\n  const shouldRenderLoading = useAsyncRendering([isLoading], SHOW_LOADER_DELAY);\n\n  const lang = useOldLang();\n  const {\n    originMessageId, chatId, messagesCount, lastMessageId, lastReadInboxMessageId, recentReplierIds, originChannelId,\n  } = threadInfo;\n\n  const handleClick = useLastCallback(() => {\n    openThread({\n      isComments: true, chatId, originMessageId, originChannelId,\n    });\n  });\n\n  const recentRepliers = useMemo(() => {\n    if (!recentReplierIds?.length) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on chats and users, so we avoid them\n    const global = getGlobal();\n\n    return recentReplierIds.map((peerId) => {\n      return selectPeer(global, peerId);\n    }).filter(Boolean);\n  }, [recentReplierIds]);\n\n  if (messagesCount === undefined) {\n    return undefined;\n  }\n\n  function renderRecentRepliers() {\n    return (\n      Boolean(recentRepliers?.length) && (\n        <div className=\"recent-repliers\" dir={lang.isRtl ? 'rtl' : 'ltr'}>\n          {recentRepliers!.map((peer) => (\n            <Avatar\n              key={peer.id}\n              size=\"small\"\n              peer={peer}\n            />\n          ))}\n        </div>\n      )\n    );\n  }\n\n  const hasUnread = Boolean(lastReadInboxMessageId && lastMessageId && lastReadInboxMessageId < lastMessageId);\n\n  const commentsText = messagesCount ? (lang('CommentsCount', '%COMMENTS_COUNT%', undefined, messagesCount) as string)\n    .split('%')\n    .map((s) => {\n      return (s === 'COMMENTS_COUNT' ? <AnimatedCounter text={formatIntegerCompact(messagesCount)} /> : s);\n    })\n    : undefined;\n\n  return (\n    <div\n      data-cnt={formatIntegerCompact(messagesCount)}\n      className={buildClassName(\n        'CommentButton',\n        hasUnread && 'has-unread',\n        disabled && 'disabled',\n        isCustomShape && 'CommentButton-custom-shape',\n        isLoading && 'loading',\n        asActionButton && 'as-action-button',\n      )}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={handleClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <Icon\n        name=\"comments-sticker\"\n        className={buildClassName(\n          'CommentButton_icon-comments',\n          isLoading && shouldRenderLoading && 'CommentButton_hidden',\n        )}\n      />\n      {!recentRepliers?.length && <Icon name=\"comments\" />}\n      {renderRecentRepliers()}\n      <div className=\"label\" dir=\"auto\">\n        {messagesCount ? commentsText : lang('LeaveAComment')}\n      </div>\n      <div className=\"CommentButton_right\">\n        {isLoading && (\n          <Spinner\n            className={buildClassName(\n              'CommentButton_loading',\n              !shouldRenderLoading && 'CommentButton_hidden',\n            )}\n            color={isCustomShape ? 'white' : 'blue'}\n          />\n        ) }\n        <Icon\n          name=\"next\"\n          className={buildClassName(\n            'CommentButton_icon-open',\n            isLoading && shouldRenderLoading && 'CommentButton_hidden',\n          )}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CommentButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AAHWWWvU\",\"info-container\":\"tpDpg82n\",\"infoContainer\":\"tpDpg82n\",\"info\":\"fpYynE5s\",\"name\":\"_PNTJc_V\",\"phone\":\"JP_3wes8\",\"divider\":\"_OSJcuqH\",\"buttons\":\"Blui4M4G\",\"button\":\"ReDHhQHm\",\"disabled\":\"XAeKpuIZ\",\"emoji-icon-background\":\"SjZYi3sJ\",\"emojiIconBackground\":\"SjZYi3sJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiContact, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { getCanAddContact, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Button from '../../ui/Button';\n\nimport styles from './Contact.module.scss';\n\ntype OwnProps = {\n  contact: ApiContact;\n  noUserColors?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst UNREGISTERED_CONTACT_ID = '0';\n\nconst Contact: FC<OwnProps & StateProps> = ({\n  contact, user, phoneCodeList, noUserColors,\n}) => {\n  const lang = useOldLang();\n  const {\n    openChat, openAddContactDialog, showNotification, openChatWithInfo,\n  } = getActions();\n\n  const { phoneNumber, userId } = contact;\n  const isRegistered = userId !== UNREGISTERED_CONTACT_ID;\n  const canAddContact = isRegistered && user && getCanAddContact(user);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: userId });\n  });\n\n  const handleAddContact = useLastCallback(() => {\n    openAddContactDialog({ userId: user?.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (user) {\n      openChatWithInfo({ id: userId });\n    } else {\n      copyTextToClipboard(phoneNumber);\n      showNotification({ message: lang('PhoneCopied') });\n    }\n  });\n\n  return (\n    <PeerColorWrapper\n      noUserColors={noUserColors}\n      peer={user}\n      emojiIconClassName={styles.emojiIconBackground}\n      className={styles.root}\n    >\n      <div className={styles.infoContainer} onClick={handleClick}>\n        <Avatar size=\"medium\" peer={user} text={getContactName(contact)} />\n        <div className={styles.info}>\n          <div className={styles.name}>\n            {user ? getUserFullName(user) : getContactName(contact)}\n          </div>\n          <div className={styles.phone}>\n            {formatPhoneNumberWithCode(phoneCodeList, phoneNumber)}\n          </div>\n        </div>\n      </div>\n      {isRegistered && (\n        <>\n          <div className={styles.divider} />\n          <div className={styles.buttons}>\n            <Button\n              isText\n              color=\"translucent\"\n              ripple\n              size=\"tiny\"\n              onClick={handleOpenChat}\n              className={styles.button}\n            >\n              {lang('SharedContactMessage')}\n            </Button>\n            {canAddContact && (\n              <Button\n                isText\n                color=\"translucent\"\n                ripple\n                size=\"tiny\"\n                onClick={handleAddContact}\n                className={styles.button}\n              >\n                {lang('SharedContactAdd')}\n              </Button>\n            )}\n          </div>\n        </>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nfunction getContactName(contact: ApiContact) {\n  if (contact.firstName && contact.lastName) {\n    return `${contact.firstName} ${contact.lastName}`;\n  }\n\n  if (contact.firstName) {\n    return contact.firstName;\n  }\n\n  if (contact.lastName) {\n    return contact.lastName;\n  }\n\n  return '';\n}\n\nexport default withGlobal<OwnProps>((global, { contact }): StateProps => {\n  const {\n    countryList: { phoneCodes: phoneCodeList },\n  } = global;\n  const user = selectUser(global, contact.userId);\n\n  return {\n    user,\n    phoneCodeList,\n  };\n})(Contact);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HMB5LgeX\",\"title\":\"vZnCPl3t\",\"content\":\"k_dGolcu\",\"separator\":\"qRaSs5iA\",\"footnote\":\"EDmr0wJG\",\"collapsed\":\"hYzpXwTM\",\"cutoutWrapper\":\"nfCzKu78\",\"collapseIcon\":\"mxPizZpR\",\"clickable\":\"Cj2cLczd\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiFactCheck } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useCollapsibleLines from '../../../hooks/element/useCollapsibleLines';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport Separator from '../../ui/Separator';\n\nimport styles from './FactCheck.module.scss';\n\ntype OwnProps = {\n  factCheck: ApiFactCheck;\n  isToggleDisabled?: boolean;\n};\n\nconst COLOR = {\n  color: 0,\n};\nconst MAX_LINES = 4;\n\nconst FactCheck = ({ factCheck, isToggleDisabled }: OwnProps) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cutoutRef = useRef<HTMLDivElement>(null);\n  const {\n    isCollapsed, isCollapsible, setIsCollapsed,\n  } = useCollapsibleLines(ref, MAX_LINES, cutoutRef);\n\n  const countryLocalized = useMemo(() => {\n    if (!factCheck.countryCode || !lang.code) return undefined;\n\n    const displayNames = new Intl.DisplayNames([lang.code], { type: 'region' });\n    return displayNames.of(factCheck.countryCode);\n  }, [factCheck.countryCode, lang.code]);\n\n  const canExpand = !isToggleDisabled && isCollapsed;\n\n  const handleExpand = useLastCallback(() => {\n    setIsCollapsed(false);\n  });\n\n  const handleToggle = useLastCallback(() => {\n    setIsCollapsed((prev) => !prev);\n  });\n\n  if (!factCheck.text) {\n    return undefined;\n  }\n\n  return (\n    <PeerColorWrapper peerColor={COLOR} className={styles.root} onClick={canExpand ? handleExpand : undefined}>\n      <div\n        ref={cutoutRef}\n        className={buildClassName(styles.cutoutWrapper, isCollapsed && styles.collapsed)}\n      >\n        <div className={styles.title}>{lang('FactCheck')}</div>\n        <div ref={ref} className={styles.content}>\n          {renderTextWithEntities({\n            text: factCheck.text.text,\n            entities: factCheck.text.entities,\n          })}\n        </div>\n        <Separator className={styles.separator} />\n        <div className={styles.footnote}>{lang('FactCheckFooter', countryLocalized)}</div>\n      </div>\n      {isCollapsible && (\n        <div\n          className={buildClassName(styles.collapseIcon, !isToggleDisabled && styles.clickable)}\n          onClick={!isToggleDisabled ? handleToggle : undefined}\n          aria-hidden\n        >\n          <Icon name={isCollapsed ? 'down' : 'up'} />\n        </div>\n      )}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(FactCheck);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getGamePreviewPhotoHash, getGamePreviewVideoHash, getMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Game.scss';\n\nconst DEFAULT_PREVIEW_DIMENSIONS = {\n  width: 480,\n  height: 270,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  canAutoLoadMedia?: boolean;\n};\n\nconst Game: FC<OwnProps> = ({\n  message,\n  canAutoLoadMedia,\n}) => {\n  const { clickBotInlineButton } = getActions();\n  const game = message.content.game!;\n  const {\n    title, description,\n  } = game;\n\n  const photoHash = getGamePreviewPhotoHash(game);\n  const videoHash = getGamePreviewVideoHash(game);\n  const photoBlobUrl = useMedia(photoHash, !canAutoLoadMedia);\n  const videoBlobUrl = useMedia(videoHash, !canAutoLoadMedia);\n\n  const handleGameClick = () => {\n    clickBotInlineButton({\n      chatId: message.chatId,\n      messageId: message.id,\n      button: message.inlineButtons![0][0],\n    });\n  };\n\n  return (\n    <div className=\"Game\">\n      <div\n        className=\"preview\"\n        style={`width: ${DEFAULT_PREVIEW_DIMENSIONS.width}px; height: ${DEFAULT_PREVIEW_DIMENSIONS.height}px`}\n        onClick={handleGameClick}\n      >\n        {!photoBlobUrl && !videoBlobUrl && (\n          <Skeleton className=\"skeleton preview-content\" />\n        )}\n        {photoBlobUrl && (\n          <img\n            className=\"preview-content\"\n            src={photoBlobUrl}\n            alt={title}\n            draggable={false}\n          />\n        )}\n        {videoBlobUrl && (\n          <video\n            className=\"preview-content\"\n            playsInline\n            muted\n            disablePictureInPicture\n            autoPlay\n            loop\n            src={videoBlobUrl}\n          />\n        )}\n      </div>\n      <div className=\"title\">{title}</div>\n      {!getMessageText(message) && <div className=\"description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default memo(Game);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CbpKtOey\",\"title\":\"ogvcv3mr\",\"sticker\":\"hjjKhvVv\",\"resultSticker\":\"JEiR48jJ\",\"count\":\"n_QCMv_A\",\"section\":\"MSFa9BPf\",\"description\":\"HfZ6SuLI\",\"peers\":\"rPyyNYxK\",\"peer\":\"FV70u896\",\"button\":\"jMBw7STU\",\"result\":\"ZQ4aVVkI\",\"separator\":\"ao0x1YnS\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiGiveaway, ApiGiveawayInfo, ApiGiveawayResults, ApiMessage, ApiPeer, ApiSticker,\n} from '../../../api/types';\n\nimport {\n  getChatTitle, getUserFullName, isOwnMessage,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectForwardedSender,\n  selectGiftStickerForDuration,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateAtTime, formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { isoToEmoji } from '../../../util/emoji/emoji';\nimport { getServerTime } from '../../../util/serverTime';\nimport { callApi } from '../../../api/gramjs';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Separator from '../../ui/Separator';\n\nimport styles from './Giveaway.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  sender?: ApiPeer;\n  giftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst NBSP = '\\u00A0';\nconst GIFT_STICKER_SIZE = 175;\nconst RESULT_STICKER_SIZE = 150;\n\nconst Giveaway = ({\n  chat,\n  sender,\n  message,\n  canPlayAnimatedEmojis,\n  giftSticker,\n}: OwnProps & StateProps) => {\n  const { openChat } = getActions();\n\n  const isLoadingInfo = useRef(false);\n  const [giveawayInfo, setGiveawayInfo] = useState<ApiGiveawayInfo | undefined>();\n\n  const lang = useOldLang();\n  const { giveaway, giveawayResults } = message.content;\n  const isResults = Boolean(giveawayResults);\n  const {\n    months, untilDate, prizeDescription, stars,\n  } = (giveaway || giveawayResults)!;\n\n  const isOwn = isOwnMessage(message);\n\n  const quantity = isResults ? giveawayResults.winnersCount : giveaway!.quantity;\n\n  const hasEnded = getServerTime() > untilDate;\n\n  const countryList = useMemo(() => {\n    if (isResults) return undefined;\n    const translatedNames = new Intl.DisplayNames([lang.code!, 'en'].filter(Boolean), { type: 'region' });\n    return giveaway?.countries?.map((countryCode) => (\n      `${isoToEmoji(countryCode)}${NBSP}${translatedNames.of(countryCode)}`\n    )).join(', ');\n  }, [giveaway, isResults, lang.code]);\n\n  const handlePeerClick = useLastCallback((channelId: string) => {\n    openChat({ id: channelId });\n  });\n\n  const handleShowInfoClick = useLastCallback(async () => {\n    if (isLoadingInfo.current) return;\n\n    isLoadingInfo.current = true;\n    const result = await callApi('fetchGiveawayInfo', {\n      peer: chat,\n      messageId: message.id,\n    });\n    setGiveawayInfo(result);\n    isLoadingInfo.current = false;\n  });\n\n  const handleCloseInfo = useLastCallback(() => {\n    setGiveawayInfo(undefined);\n  });\n\n  const giveawayInfoTitle = useMemo(() => {\n    if (!giveawayInfo) return undefined;\n    return lang(giveawayInfo.type === 'results' ? 'BoostingGiveawayEnd' : 'BoostingGiveAwayAbout');\n  }, [giveawayInfo, lang]);\n\n  function renderGiveawayDescription(media: ApiGiveaway) {\n    const channelIds = media.channelIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayPrizes'), ['simple_markdown'])}\n          </strong>\n          {prizeDescription && (\n            <>\n              <p className={styles.description}>\n                {renderText(\n                  lang('BoostingGiveawayMsgPrizes', [quantity, prizeDescription], undefined, quantity),\n                  ['simple_markdown'],\n                )}\n              </p>\n              <Separator>{lang('BoostingGiveawayMsgWithDivider')}</Separator>\n            </>\n          )}\n          <p className={styles.description}>\n            {message?.content?.giveaway?.stars ? (\n              <>\n                {renderText(\n                  lang('Chat.Giveaway.Message.Stars.PrizeText', lang('Stars', message?.content?.giveaway?.stars)),\n                  ['simple_markdown'],\n                )}\n                <br />\n                {renderText(lang('AmongWinners', quantity), ['simple_markdown'])}\n              </>\n            ) : (\n              <>\n                {renderText(lang('Chat.Giveaway.Info.Subscriptions', quantity), ['simple_markdown'])}\n                <br />\n                {renderText(lang(\n                  'ActionGiftPremiumSubtitle',\n                  lang('Chat.Giveaway.Info.Months', months),\n                ), ['simple_markdown'])}\n              </>\n            )}\n          </p>\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayMsgParticipants'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayMsgAllSubsPlural', channelIds.length), ['simple_markdown'])}\n          </p>\n          <div className={styles.peers}>\n            {channelIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n          {countryList && (\n            <span>{renderText(lang('Chat.Giveaway.Message.CountriesFrom', countryList))}</span>\n          )}\n        </div>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingWinnersDate'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {formatDateTimeToString(untilDate * 1000, lang.code, true)}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayResultsDescription(media: ApiGiveawayResults) {\n    const winnerIds = media.winnerIds;\n    return (\n      <>\n        <div className={styles.section}>\n          <strong className={styles.title}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersSelected'), ['simple_markdown'])}\n          </strong>\n          <p className={styles.description}>\n            {renderText(lang('BoostingGiveawayResultsMsgWinnersTitle', winnerIds.length), ['simple_markdown'])}\n          </p>\n          <strong className={styles.title}>\n            {lang('lng_prizes_results_winners')}\n          </strong>\n          <div className={styles.peers}>\n            {winnerIds.map((peerId) => (\n              <PeerChip\n                peerId={peerId}\n                forceShowSelf\n                withPeerColors={!isOwn}\n                className={styles.peer}\n                clickArg={peerId}\n                onClick={handlePeerClick}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <p className={styles.description}>\n            {lang('BoostingGiveawayResultsMsgAllWinnersReceivedLinks')}\n          </p>\n        </div>\n      </>\n    );\n  }\n\n  function renderGiveawayInfo() {\n    if (!sender || !giveawayInfo) return undefined;\n    const isResultsInfo = giveawayInfo.type === 'results';\n\n    const chatTitle = isApiPeerChat(sender) ? getChatTitle(lang, sender) : getUserFullName(sender);\n    const endDate = formatDateAtTime(lang, untilDate * 1000);\n    const otherChannelsCount = giveaway?.channelIds ? giveaway.channelIds.length - 1 : 0;\n    const otherChannelsString = lang('Chat.Giveaway.Info.OtherChannels', otherChannelsCount);\n    const isSeveral = otherChannelsCount > 0;\n\n    const firstKey = isResultsInfo ? 'BoostingGiveawayHowItWorksTextEnd' : 'BoostingGiveawayHowItWorksText';\n    const giveawayDuration = isResultsInfo ? lang('Chat.Giveaway.Info.Months', months) : lang('Stars', stars, 'i');\n    const firstParagraph = lang(firstKey, [chatTitle, quantity, giveawayDuration], undefined, quantity);\n\n    const additionalPrizes = prizeDescription\n      ? lang('BoostingGiveawayHowItWorksIncludeText', [chatTitle, quantity, prizeDescription], undefined, quantity)\n      : undefined;\n\n    let secondKey = '';\n    if (isResultsInfo) {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveralEnd' : 'BoostingGiveawayHowItWorksSubTextEnd';\n    } else {\n      secondKey = isSeveral ? 'BoostingGiveawayHowItWorksSubTextSeveral' : 'BoostingGiveawayHowItWorksSubText';\n    }\n    let secondParagraph = lang(secondKey, [endDate, quantity, chatTitle, otherChannelsCount], undefined, quantity);\n    if (isResultsInfo && giveawayInfo.activatedCount) {\n      secondParagraph += ` ${lang('BoostingGiveawayUsedLinksPlural', giveawayInfo.activatedCount)}`;\n    }\n\n    let result = '';\n\n    if (isResultsInfo) {\n      if (giveawayInfo.isRefunded) {\n        result = lang('BoostingGiveawayCanceledByPayment');\n      } else {\n        result = lang(giveawayInfo.isWinner ? 'BoostingGiveawayYouWon' : 'BoostingGiveawayYouNotWon');\n      }\n    }\n\n    let lastParagraph = '';\n    if (isResultsInfo) {\n      // Nothing\n    } else if (giveawayInfo.disallowedCountry) {\n      lastParagraph = lang('BoostingGiveawayNotEligibleCountry');\n    } else if (giveawayInfo.adminDisallowedChatId) {\n      // Since rerenders are not expected, we can use the global state directly\n      const chatsById = getGlobal().chats.byId;\n      const disallowedChat = chatsById[giveawayInfo.adminDisallowedChatId];\n      const disallowedChatTitle = disallowedChat && getChatTitle(lang, disallowedChat);\n      lastParagraph = lang('BoostingGiveawayNotEligibleAdmin', disallowedChatTitle);\n    } else if (giveawayInfo.joinedTooEarlyDate) {\n      const joinedTooEarlyDate = formatDateAtTime(lang, giveawayInfo.joinedTooEarlyDate * 1000);\n      lastParagraph = lang('BoostingGiveawayNotEligible', joinedTooEarlyDate);\n    } else if (giveawayInfo.isParticipating) {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.ParticipatingMany', [chatTitle, otherChannelsCount])\n        : lang('Chat.Giveaway.Info.Participating', chatTitle);\n    } else {\n      lastParagraph = isSeveral\n        ? lang('Chat.Giveaway.Info.NotQualifiedMany', [chatTitle, otherChannelsString, endDate])\n        : lang('Chat.Giveaway.Info.NotQualified', [chatTitle, endDate]);\n    }\n\n    return (\n      <>\n        {result && (\n          <p className={styles.result}>\n            {renderText(result, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(firstParagraph, ['simple_markdown'])}\n        </p>\n        {additionalPrizes && (\n          <p>\n            {renderText(additionalPrizes, ['simple_markdown'])}\n          </p>\n        )}\n        <p>\n          {renderText(secondParagraph, ['simple_markdown'])}\n        </p>\n        {lastParagraph && (\n          <p>\n            {renderText(lastParagraph, ['simple_markdown'])}\n          </p>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.sticker, isResults && styles.resultSticker)}>\n        {isResults ? (\n          <AnimatedIconWithPreview\n            size={RESULT_STICKER_SIZE}\n            tgsUrl={LOCAL_TGS_URLS.PartyPopper}\n            nonInteractive\n            noLoop\n          />\n        ) : (\n          <AnimatedIconFromSticker\n            sticker={giftSticker}\n            play={canPlayAnimatedEmojis && hasEnded}\n            noLoop\n            nonInteractive\n            size={GIFT_STICKER_SIZE}\n          />\n        )}\n        <span className={styles.count}>\n          {`x${quantity}`}\n        </span>\n      </div>\n      {isResults ? renderGiveawayResultsDescription(giveawayResults) : renderGiveawayDescription(giveaway!)}\n      <Button\n        className={styles.button}\n        color=\"adaptive\"\n        size=\"smaller\"\n        onClick={handleShowInfoClick}\n      >\n        {lang('BoostingHowItWork')}\n      </Button>\n      <ConfirmDialog\n        isOpen={Boolean(giveawayInfo)}\n        isOnlyConfirm\n        title={giveawayInfoTitle}\n        confirmHandler={handleCloseInfo}\n        onClose={handleCloseInfo}\n      >\n        {renderGiveawayInfo()}\n      </ConfirmDialog>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message }): StateProps => {\n    const { giveaway } = message.content;\n    const chat = selectChat(global, message.chatId)!;\n    const sender = selectChat(global, giveaway?.channelIds[0]!)\n      || selectForwardedSender(global, message) || chat;\n\n    const sticker = giveaway && selectGiftStickerForDuration(global, giveaway.months);\n\n    return {\n      chat,\n      sender,\n      giftSticker: sticker,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(Giveaway));\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton, ApiMessage } from '../../../api/types';\nimport type { ActionPayloads } from '../../../global/types';\n\nimport { RE_TME_LINK } from '../../../config';\nimport renderKeyboardButtonText from '../composer/helpers/renderKeyboardButtonText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './InlineButtons.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  onClick: (payload: ActionPayloads['clickBotInlineButton']) => void;\n};\n\nconst InlineButtons: FC<OwnProps> = ({ message, onClick }) => {\n  const lang = useOldLang();\n\n  const renderIcon = (button: ApiKeyboardButton) => {\n    const { type } = button;\n    switch (type) {\n      case 'url': {\n        if (!RE_TME_LINK.test(button.url)) {\n          return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n        }\n        break;\n      }\n      case 'urlAuth':\n        return <Icon className=\"corner-icon\" name=\"arrow-right\" />;\n      case 'buy':\n      case 'receipt':\n        return <Icon className=\"corner-icon\" name=\"card\" />;\n      case 'switchBotInline':\n        return <Icon className=\"corner-icon\" name=\"share-filled\" />;\n      case 'webView':\n      case 'simpleWebView':\n        return <Icon className=\"corner-icon\" name=\"webapp\" />;\n      case 'copy':\n        return <Icon className=\"corner-icon\" name=\"copy\" />;\n    }\n    return undefined;\n  };\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message.inlineButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n    return texts;\n  }, [lang, message.inlineButtons]);\n\n  return (\n    <div className=\"InlineButtons\">\n      {message.inlineButtons!.map((row, i) => (\n        <div className=\"row\">\n          {row.map((button, j) => (\n            <Button\n              size=\"tiny\"\n              ripple\n              disabled={button.type === 'unsupported'}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onClick({ chatId: message.chatId, messageId: message.id, button })}\n            >\n              <span className=\"inline-button-text\">\n                {buttonTexts[i][j]}\n              </span>\n              {renderIcon(button)}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(InlineButtons);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageInvoice, getWebDocumentHash } from '../../../global/helpers';\nimport buildStyle from '../../../util/buildStyle';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\n\nimport useLang from '../../../hooks/useLang';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Invoice.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldAffectAppendix?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ISettings['theme'];\n  forcedWidth?: number;\n};\n\nconst Invoice: FC<OwnProps> = ({\n  message,\n  shouldAffectAppendix,\n  isInSelectMode,\n  isSelected,\n  theme,\n  forcedWidth,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const invoice = getMessageInvoice(message);\n\n  const {\n    title,\n    description,\n    amount,\n    currency,\n    isTest,\n    photo,\n  } = invoice!;\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n  const withBlurredBackground = Boolean(forcedWidth);\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photoUrl, !withBlurredBackground);\n  const messageId = message.id;\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    if (photoUrl) {\n      const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n      getCustomAppendixBg(photoUrl, false, messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    }\n  }, [shouldAffectAppendix, photoUrl, isInSelectMode, isSelected, theme, messageId]);\n\n  const width = forcedWidth || photo?.dimensions?.width;\n\n  const style = buildStyle(\n    photo?.dimensions && `width: ${width}px`,\n    photo?.dimensions && `aspect-ratio: ${photo.dimensions.width} / ${photo.dimensions.height}`,\n    Boolean(!photo?.dimensions && forcedWidth) && `width: ${forcedWidth}px`,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className=\"Invoice\"\n    >\n      {title && (\n        <p className=\"title\">{renderText(title)}</p>\n      )}\n      {description && (\n        <div>{renderText(description, ['emoji', 'br'])}</div>\n      )}\n      <div className={`description ${photo ? 'has-image' : ''}`}>\n        {Boolean(photo) && (\n          <div className=\"invoice-image-container\">\n            {withBlurredBackground && <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />}\n            {photoUrl && (\n              <img\n                className=\"invoice-image\"\n                src={photoUrl}\n                alt=\"\"\n                style={style}\n                crossOrigin=\"anonymous\"\n                draggable={false}\n              />\n            )}\n            {!photoUrl && photo && (\n              <Skeleton\n                width={width}\n                height={photo.dimensions?.height}\n                forceAspectRatio\n              />\n            )}\n          </div>\n        )}\n        <p className=\"description-text\">\n          {formatCurrency(lang, amount, currency, { iconClassName: 'invoice-currency-icon' })}\n          {isTest && <span className=\"test-invoice\">{oldLang('PaymentTestInvoice')}</span>}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Invoice);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"dCK8GQ_8\",\"duration\":\"CWT8ZMwV\",\"buy\":\"C38zhCDM\",\"spoiler\":\"CG55VZP1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { getMessageInvoice } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './InvoiceMediaPreview.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  isConnected: boolean;\n};\n\nconst POLLING_INTERVAL = 30000;\n\nconst InvoiceMediaPreview: FC<OwnProps> = ({\n  message,\n  isConnected,\n}) => {\n  const { openInvoice, loadExtendedMedia } = getActions();\n  const lang = useOldLang();\n  const invoice = getMessageInvoice(message);\n\n  const { chatId, id } = message;\n\n  const refreshExtendedMedia = useLastCallback(() => {\n    loadExtendedMedia({ chatId, ids: [id] });\n  });\n\n  useInterval(refreshExtendedMedia, isConnected ? POLLING_INTERVAL : undefined);\n\n  const {\n    amount,\n    currency,\n    extendedMedia,\n  } = invoice!;\n\n  const {\n    width, height, thumbnail, duration,\n  } = extendedMedia!;\n\n  const handleClick = useLastCallback(() => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId: id,\n      isExtendedMedia: true,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, 'media-inner')}\n      onClick={handleClick}\n    >\n      <MediaSpoiler\n        thumbDataUri={thumbnail?.dataUri}\n        width={width}\n        height={height}\n        isVisible\n        className={styles.spoiler}\n      />\n      {Boolean(duration) && <div className={styles.duration}>{formatMediaDuration(duration)}</div>}\n      <div className={styles.buy}>\n        <Icon name=\"lock\" className={styles.lock} />\n        {lang('Checkout.PayPrice', formatCurrencyAsString(amount, currency))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(InvoiceMediaPreview);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, ApiPeer } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  buildStaticMapHash,\n  getMessageLocation,\n  isGeoLiveExpired,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCountdownShort, formatLastUpdated } from '../../../util/dates/dateFormat';\nimport {\n  getMetersPerPixel, getVenueColor, getVenueIconUrl,\n} from '../../../util/map';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar from '../../common/Avatar';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport './Location.scss';\n\nimport mapPin from '../../../assets/map-pin.svg';\n\nconst TIMER_RADIUS = 12;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst MOVE_THRESHOLD = 0.0001; // ~11m\nconst DEFAULT_MAP_CONFIG = {\n  width: 400,\n  height: 300,\n  zoom: 16,\n};\n\ntype OwnProps = {\n  message: ApiMessage;\n  peer?: ApiPeer;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  theme: ISettings['theme'];\n};\n\nconst Location: FC<OwnProps> = ({\n  message,\n  peer,\n}) => {\n  const { openMapModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const location = getMessageLocation(message)!;\n  const { mediaType, geo } = location;\n\n  const serverTime = getServerTime();\n  const isExpired = isGeoLiveExpired(message);\n  const secondsBeforeEnd = (mediaType === 'geoLive' && !isExpired) ? message.date + location.period - serverTime\n    : undefined;\n\n  const [point, setPoint] = useState(geo);\n\n  const shouldRenderText = mediaType === 'venue' || (mediaType === 'geoLive' && !isExpired);\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n\n  const mediaHash = buildStaticMapHash(point, width, height, zoom, dpr);\n  const mediaBlobUrl = useMedia(mediaHash);\n  const prevMediaBlobUrl = usePreviousDeprecated(mediaBlobUrl, true);\n  const mapBlobUrl = mediaBlobUrl || prevMediaBlobUrl;\n\n  const accuracyRadiusPx = useMemo(() => {\n    if (mediaType !== 'geoLive' || !point.accuracyRadius) {\n      return 0;\n    }\n\n    const { lat, accuracyRadius } = point;\n    return accuracyRadius / getMetersPerPixel(lat, zoom);\n  }, [mediaType, point, zoom]);\n\n  const handleClick = () => {\n    openMapModal({ geoPoint: point, zoom });\n  };\n\n  const updateCountdown = useLastCallback((countdownEl: HTMLDivElement) => {\n    if (mediaType !== 'geoLive') return;\n    const svgEl = countdownEl.lastElementChild!;\n    const timerEl = countdownEl.firstElementChild!;\n\n    const timeLeft = message.date + location.period - getServerTime();\n    const strokeDashOffset = (1 - timeLeft / location.period) * TIMER_CIRCUMFERENCE;\n    const text = formatCountdownShort(lang, timeLeft * 1000);\n    timerEl.textContent = text;\n    svgEl.firstElementChild!.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  });\n\n  useLayoutEffect(() => {\n    if (countdownRef.current) {\n      updateCountdown(countdownRef.current);\n    }\n  }, [updateCountdown]);\n\n  useEffect(() => {\n    // Prevent map refetching for slight location changes\n    if (Math.abs(geo.lat - point.lat) < MOVE_THRESHOLD && Math.abs(geo.long - point.long) < MOVE_THRESHOLD) {\n      if (point.accuracyRadius !== geo.accuracyRadius) {\n        setPoint({\n          ...point,\n          accuracyRadius: geo.accuracyRadius,\n        });\n      }\n      return;\n    }\n    setPoint(geo);\n  }, [geo, point]);\n\n  useTimeout(() => {\n    forceUpdate();\n  }, !isExpired ? (secondsBeforeEnd || 0) * 1000 : undefined);\n\n  useInterval(() => {\n    requestMutation(() => {\n      const countdownEl = countdownRef.current;\n      if (countdownEl) {\n        updateCountdown(countdownEl);\n      }\n    });\n  }, secondsBeforeEnd ? 1000 : undefined);\n\n  function renderInfo() {\n    if (!shouldRenderText) return undefined;\n    if (mediaType === 'venue') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">\n            {location.title}\n          </div>\n          <div className=\"location-info-subtitle\">\n            {location.address}\n          </div>\n        </div>\n      );\n    }\n    if (mediaType === 'geoLive') {\n      return (\n        <div className=\"location-info\">\n          <div className=\"location-info-title\">{lang('AttachLiveLocation')}</div>\n          <div className=\"location-info-subtitle\">\n            {formatLastUpdated(lang, serverTime, message.editDate)}\n          </div>\n          {!isExpired && (\n            <div className=\"geo-countdown\" ref={countdownRef}>\n              <span className=\"geo-countdown-text\" />\n              <svg width=\"32px\" height=\"32px\">\n                <circle\n                  cx=\"16\"\n                  cy=\"16\"\n                  r={TIMER_RADIUS}\n                  className=\"geo-countdown-progress\"\n                  transform=\"rotate(-90, 16, 16)\"\n                  stroke-dasharray={TIMER_CIRCUMFERENCE}\n                  stroke-dashoffset=\"0\"\n                />\n              </svg>\n            </div>\n          )}\n        </div>\n      );\n    }\n    return undefined;\n  }\n\n  function renderMap() {\n    if (!mapBlobUrl) return <Skeleton width={width} height={height} />;\n    return (\n      <img\n        className=\"full-media map\"\n        src={mapBlobUrl}\n        alt=\"Location on a map\"\n        draggable={false}\n        style={`width: ${DEFAULT_MAP_CONFIG.width}px; height: ${DEFAULT_MAP_CONFIG.height}px;`}\n      />\n    );\n  }\n\n  function renderPin() {\n    const pinClassName = buildClassName(\n      'pin',\n      mediaType,\n      isExpired && 'expired',\n    );\n    if (mediaType === 'geoLive') {\n      return (\n        <div className={pinClassName}>\n          <PinSvg />\n          <Avatar peer={peer} className=\"location-avatar\" />\n          {location.heading !== undefined && (\n            <div className=\"direction\" style={`--direction: ${location.heading}deg`} />\n          )}\n        </div>\n      );\n    }\n\n    if (mediaType === 'venue') {\n      const color = getVenueColor(location.venueType);\n      const iconSrc = getVenueIconUrl(location.venueType);\n      if (iconSrc) {\n        return (\n          <div className={pinClassName} style={`--pin-color: ${color}`}>\n            <PinSvg />\n            <img src={iconSrc} draggable={false} className=\"venue-icon\" alt=\"\" />\n          </div>\n        );\n      }\n    }\n\n    return (\n      <img className={pinClassName} draggable={false} src={mapPin} alt=\"\" />\n    );\n  }\n\n  function renderOverlay() {\n    if (!mapBlobUrl) return undefined;\n\n    return (\n      <>\n        {Boolean(accuracyRadiusPx) && !isExpired && (\n          <div\n            className=\"location-accuracy\"\n            style={`width: ${accuracyRadiusPx * 2}px; height: ${accuracyRadiusPx * 2}px`}\n          />\n        )}\n        {renderPin()}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className=\"Location media-inner interactive\"\n      onClick={handleClick}\n    >\n      <div className=\"map-wrapper\">\n        {renderMap()}\n        {renderOverlay()}\n      </div>\n      {renderInfo()}\n    </div>\n  );\n};\n\nfunction PinSvg() {\n  return (\n    <svg className=\"round-pin\" style=\"enable-background:new 0 0 64 64\" viewBox=\"0 0 64 64\">\n      <circle cx=\"32\" cy=\"32\" r=\"24.5\" />\n      <path d=\"M32 8c13.23 0 24 10.77 24 24S45.23 56 32 56 8 45.23 8 32 18.77 8 32 8m0-1C18.19 7 7 18.19 7 32s11.19 25 25 25 25-11.19 25-25S45.81 7 32 7z\" />\n      <path d=\"m29.38 57.67-1.98-1.59 3.02-1.66L32 51.54l1.58 2.88 3.02 1.66-1.91 1.53L32 60.73z\" />\n      <path d=\"m32 52.58 1.07 1.95.14.26.26.14 2.24 1.22-1.33 1.06-.07.06-.06.07L32 59.96l-2.24-2.61-.06-.07-.07-.06-1.33-1.06 2.24-1.22.26-.14.14-.26L32 52.58m0-2.08-1.94 3.56L26.5 56l2.5 2 3 3.5 3-3.5 2.5-2-3.56-1.94L32 50.5z\" />\n    </svg>\n  );\n}\n\nexport default memo(Location);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiMessage, ApiMessageOutgoingStatus, ApiThreadInfo,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString, formatPastTimeShort, formatTime } from '../../../util/dates/dateFormat';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport MessageOutgoingStatus from '../../common/MessageOutgoingStatus';\n\nimport './MessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  withReactionOffset?: boolean;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  signature?: string;\n  availableReactions?: ApiAvailableReaction[];\n  noReplies?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  isTranslated?: boolean;\n  isPinned?: boolean;\n  withFullDate?: boolean;\n  effectEmoji?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onTranslationClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onEffectClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  renderQuickReactionButton?: () => TeactNode | undefined;\n  onOpenThread: NoneToVoidFunction;\n};\n\nconst MessageMeta: FC<OwnProps> = ({\n  message,\n  outgoingStatus,\n  signature,\n  withReactionOffset,\n  repliesThreadInfo,\n  renderQuickReactionButton,\n  noReplies,\n  isTranslated,\n  isPinned,\n  withFullDate,\n  effectEmoji,\n  onClick,\n  onTranslationClick,\n  onEffectClick,\n  onOpenThread,\n}) => {\n  const { showNotification } = getActions();\n\n  const [isActivated, markActivated] = useFlag();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleImportedClick(e: React.MouseEvent) {\n    e.stopPropagation();\n\n    showNotification({\n      message: {\n        key: 'ImportedInfo',\n      },\n    });\n  }\n\n  function handleOpenThread(e: React.MouseEvent) {\n    e.stopPropagation();\n    onOpenThread();\n  }\n\n  const dateTitle = useMemo(() => {\n    if (!isActivated) return undefined;\n    const createDateTime = formatDateTimeToString(message.date * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const editDateTime = message.isEdited\n      && formatDateTimeToString(message.editDate! * 1000, oldLang.code, undefined, oldLang.timeFormat);\n    const forwardedDateTime = message.forwardInfo\n      && formatDateTimeToString(\n        (message.forwardInfo.savedDate || message.forwardInfo.date) * 1000,\n        oldLang.code,\n        undefined,\n        oldLang.timeFormat,\n      );\n\n    let text = createDateTime;\n    if (editDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipEditedDate', { date: editDateTime });\n    }\n    if (forwardedDateTime) {\n      text += '\\n';\n      text += lang('MessageTooltipForwardedDate', { date: forwardedDateTime });\n    }\n\n    return text;\n    // We need to listen to timeformat change\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [isActivated, oldLang, message, oldLang.timeFormat]);\n\n  const viewsTitle = useMemo(() => {\n    if (!message.viewsCount) return undefined;\n    let text = lang('MessageTooltipViews', { count: message.viewsCount }, { pluralValue: message.viewsCount });\n    if (message.forwardsCount) {\n      text += '\\n';\n      text += lang('MessageTooltipForwards', { count: message.forwardsCount }, { pluralValue: message.forwardsCount });\n    }\n\n    return text;\n  }, [lang, message.forwardsCount, message.viewsCount]);\n\n  const repliesTitle = useMemo(() => {\n    const count = repliesThreadInfo?.messagesCount;\n    if (!count) return undefined;\n    return lang('MessageTooltipReplies', { count }, { pluralValue: count });\n  }, [lang, repliesThreadInfo]);\n\n  const date = useMemo(() => {\n    const time = formatTime(oldLang, message.date * 1000);\n    if (!withFullDate) {\n      return time;\n    }\n\n    return formatPastTimeShort(oldLang, (message.forwardInfo?.date || message.date) * 1000, true);\n  }, [oldLang, message.date, message.forwardInfo?.date, withFullDate]);\n\n  const fullClassName = buildClassName(\n    'MessageMeta',\n    withReactionOffset && 'reactions-offset',\n    message.forwardInfo?.isImported && 'is-imported',\n  );\n\n  return (\n    <span\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n      onClick={onClick}\n      data-ignore-on-paste\n    >\n      {effectEmoji && (\n        <span className=\"message-effect-icon\" onClick={onEffectClick}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {isTranslated && (\n        <Icon name=\"language\" className=\"message-translated\" onClick={onTranslationClick} />\n      )}\n      {Boolean(message.viewsCount) && (\n        <>\n          <span className=\"message-views\" title={viewsTitle}>\n            {formatIntegerCompact(message.viewsCount!)}\n          </span>\n          <Icon name=\"channelviews\" />\n        </>\n      )}\n      {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n        <span onClick={handleOpenThread} className=\"message-replies-wrapper\" title={repliesTitle}>\n          <span className=\"message-replies\">\n            <AnimatedCounter text={formatIntegerCompact(repliesThreadInfo!.messagesCount!)} />\n          </span>\n          <Icon name=\"reply-filled\" />\n        </span>\n      )}\n      {isPinned && (\n        <Icon name=\"pinned-message\" className=\"message-pinned\" />\n      )}\n      {signature && (\n        <span className=\"message-signature\">{renderText(signature)}</span>\n      )}\n      <span className=\"message-time\" title={dateTitle} onMouseEnter={markActivated}>\n        {message.forwardInfo?.isImported && (\n          <>\n            <span className=\"message-imported\" onClick={handleImportedClick}>\n              {formatDateTimeToString(message.forwardInfo.date * 1000, lang.code, true)}\n            </span>\n            <span className=\"message-imported\" onClick={handleImportedClick}>{lang('MessageMetaImported')}</span>\n          </>\n        )}\n        {message.isEdited && `${lang('MessageMetaEdited')} `}\n        {message.isVideoProcessingPending && `${lang('MessageMetaApproximate')} `}\n        {date}\n      </span>\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      {renderQuickReactionButton && renderQuickReactionButton()}\n    </span>\n  );\n};\n\nexport default memo(MessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wqsZyy8u\",\"button\":\"NGmo4ADz\",\"info\":\"iFn6m6hd\",\"reason\":\"l8QfocIQ\",\"arrow\":\"ONmpzmUS\",\"incoming\":\"BfgDXljM\",\"missed\":\"Alra_BWu\",\"canceled\":\"J7xsuCAm\",\"meta\":\"rF5tkx92\",\"duration\":\"kKPKwFzu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ApiMessageActionPhoneCall } from '../../../api/types/messageActions';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatTimeDuration } from '../../../util/dates/dateFormat';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getCallMessageKey } from './helpers/messageActions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MessagePhoneCall.module.scss';\n\ntype OwnProps = {\n  phoneCall: ApiMessageActionPhoneCall;\n  message: ApiMessage;\n  chatId: string;\n};\n\nconst MessagePhoneCall: FC<OwnProps> = ({\n  phoneCall,\n  message,\n  chatId,\n}) => {\n  const { requestMasterAndRequestCall } = getActions();\n\n  const lang = useOldLang();\n  const {\n    isVideo, reason, duration,\n  } = phoneCall;\n  const isOutgoing = message.isOutgoing;\n  const isMissed = reason === 'missed';\n  const isCancelled = reason === 'busy' || duration === undefined;\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ isVideo, userId: chatId });\n  });\n\n  const formattedDuration = useMemo(() => {\n    return phoneCall.duration ? formatTimeDuration(lang, phoneCall.duration) : undefined;\n  }, [lang, phoneCall.duration]);\n\n  const timeFormatted = formatTime(lang, message.date * 1000);\n  return (\n    <div className={styles.root}>\n      <Button\n        size=\"smaller\"\n        color=\"translucent\"\n        round\n        ripple\n        onClick={handleCall}\n        className={styles.button}\n        disabled={!ARE_CALLS_SUPPORTED}\n        ariaLabel={lang(isOutgoing ? 'CallAgain' : 'CallBack')}\n      >\n        <Icon name={isVideo ? 'video-outlined' : 'phone'} />\n      </Button>\n      <div className={styles.info}>\n        <div className={styles.reason}>{lang(getCallMessageKey(phoneCall, message.isOutgoing))}</div>\n        <div className={styles.meta}>\n          <Icon\n            name=\"arrow-right\"\n            className={buildClassName(\n              styles.arrow,\n              isMissed && styles.missed,\n              isCancelled && styles.canceled,\n              !isOutgoing && styles.incoming,\n            )}\n          />\n          <span className={styles.duration}>\n            {formattedDuration ? lang('CallMessageWithDuration', [timeFormatted, formattedDuration]) : timeFormatted}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MessagePhoneCall);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mVaSjZRJ\",\"buyButton\":\"GnKGu6D9\",\"boughtStatus\":\"IGXW5hWr\",\"star\":\"ywiOugiH\",\"buttonText\":\"gLaaVQXr\"};","import React, { memo, type TeactNode, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPaidMedia } from '../../../api/types';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { replaceWithTeact } from '../../../util/replaceWithTeact';\nimport stopEvent from '../../../util/stopEvent';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './PaidMediaOverlay.module.scss';\n\ntype OwnProps = {\n  paidMedia: ApiPaidMedia;\n  chatId: string;\n  messageId: number;\n  isOutgoing?: boolean;\n  children?: TeactNode;\n};\n\nconst PaidMediaOverlay = ({\n  paidMedia,\n  chatId,\n  messageId,\n  isOutgoing,\n  children,\n}: OwnProps) => {\n  const { openInvoice } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isClickable = !paidMedia.isBought;\n\n  const buttonText = useMemo(() => {\n    const value = oldLang('UnlockPaidContent', paidMedia.starsAmount);\n\n    return replaceWithTeact(\n      value, STARS_ICON_PLACEHOLDER, <StarIcon className={styles.star} type=\"gold\" size=\"adaptive\" />,\n    );\n  }, [oldLang, paidMedia]);\n\n  const handleClick = useLastCallback((e: React.MouseEvent) => {\n    openInvoice({\n      type: 'message',\n      chatId,\n      messageId,\n    });\n    stopEvent(e);\n  });\n\n  return (\n    <div\n      className={styles.root}\n      onClick={isClickable ? handleClick : undefined}\n    >\n      {children}\n      {isClickable && (\n        <Button\n          className={styles.buyButton}\n          color=\"dark\"\n          size=\"tiny\"\n          fluid\n          pill\n        >\n          <span className={styles.buttonText}>{buttonText}</span>\n        </Button>\n      )}\n      {paidMedia.isBought && (\n        <div className={buildClassName('message-paid-media-status', styles.boughtStatus)}>\n          {isOutgoing\n            ? formatStarsAsIcon(lang, paidMedia.starsAmount)\n            : oldLang('Chat.PaidMedia.Purchased')}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(PaidMediaOverlay);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiPollAnswer, ApiPollResult } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './PollOption.scss';\n\ntype OwnProps = {\n  answer: ApiPollAnswer;\n  voteResults?: ApiPollResult[];\n  totalVoters?: number;\n  maxVotersCount?: number;\n  correctResults: string[];\n  shouldAnimate: boolean;\n};\n\nconst PollOption: FC<OwnProps> = ({\n  answer,\n  voteResults,\n  totalVoters,\n  maxVotersCount,\n  correctResults,\n  shouldAnimate,\n}) => {\n  const result = voteResults && voteResults.find((r) => r.option === answer.option);\n  const correctAnswer = correctResults.length === 0 || correctResults.indexOf(answer.option) !== -1;\n  const showIcon = (correctResults.length > 0 && correctAnswer) || (result?.isChosen);\n  const answerPercent = result ? getPercentage(result.votersCount, totalVoters || 0) : 0;\n  const [finalPercent, setFinalPercent] = useState(shouldAnimate ? 0 : answerPercent);\n  const lineWidth = result ? getPercentage(result.votersCount, maxVotersCount || 0) : 0;\n  const isAnimationDoesNotStart = finalPercent !== answerPercent;\n\n  useEffect(() => {\n    if (shouldAnimate) {\n      setFinalPercent(answerPercent);\n    }\n  }, [shouldAnimate, answerPercent]);\n\n  if (!voteResults || !result) {\n    return undefined;\n  }\n\n  const lineStyle = `width: ${lineWidth}%; transform:scaleX(${isAnimationDoesNotStart ? 0 : 1})`;\n\n  return (\n    <div className=\"PollOption\" dir=\"ltr\">\n      <div className={`poll-option-share ${answerPercent === '100' ? 'limit-width' : ''}`}>\n        {answerPercent}%\n        {showIcon && (\n          <span className={buildClassName(\n            'poll-option-chosen',\n            !correctAnswer && 'wrong',\n            shouldAnimate && 'animate',\n          )}\n          >\n            <Icon name={correctAnswer ? 'check' : 'close'} className=\"poll-option-icon\" />\n          </span>\n        )}\n      </div>\n      <div className=\"poll-option-right\">\n        <div className=\"poll-option-text\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: answer.text.text,\n            entities: answer.text.entities,\n          })}\n        </div>\n        <div className={buildClassName('poll-option-answer', showIcon && !correctAnswer && 'wrong')}>\n          {shouldAnimate && (\n            <svg\n              className=\"poll-line\"\n              style={!isAnimationDoesNotStart ? 'stroke-dasharray: 100% 200%; stroke-dashoffset: -44' : ''}\n            >\n              <path d=\"M4.47 5.33v13.6a9 9 0 009 9h13\" />\n            </svg>\n          )}\n          <div\n            className=\"poll-option-line\"\n            style={lineStyle}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default PollOption;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiPoll, ApiPollAnswer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { selectPeer } from '../../../global/selectors';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport { getServerTime } from '../../../util/serverTime';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport CheckboxGroup from '../../ui/CheckboxGroup';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PollOption from './PollOption';\n\nimport './Poll.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  poll: ApiPoll;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onSendVote: (options: string[]) => void;\n};\n\nconst SOLUTION_CONTAINER_ID = '#middle-column-portals';\nconst SOLUTION_DURATION = 5000;\nconst TIMER_RADIUS = 6;\nconst TIMER_CIRCUMFERENCE = TIMER_RADIUS * 2 * Math.PI;\nconst TIMER_UPDATE_INTERVAL = 1000;\nconst NBSP = '\\u00A0';\n\nconst Poll: FC<OwnProps> = ({\n  message,\n  poll,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onSendVote,\n}) => {\n  const {\n    loadMessage, openPollResults, requestConfetti, showNotification,\n  } = getActions();\n\n  const { id: messageId, chatId } = message;\n  const { summary, results } = poll;\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [chosenOptions, setChosenOptions] = useState<string[]>([]);\n  const [wasSubmitted, setWasSubmitted] = useState<boolean>(false);\n  const [closePeriod, setClosePeriod] = useState<number>(\n    !summary.closed && summary.closeDate && summary.closeDate > 0\n      ? Math.min(summary.closeDate - getServerTime(), summary.closePeriod!)\n      : 0,\n  );\n  // eslint-disable-next-line no-null/no-null\n  const countdownRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const timerCircleRef = useRef<SVGCircleElement>(null);\n  const { results: voteResults, totalVoters } = results;\n  const hasVoted = voteResults && voteResults.some((r) => r.isChosen);\n  const canVote = !summary.closed && !hasVoted;\n  const canViewResult = !canVote && summary.isPublic && Number(results.totalVoters) > 0;\n  const isMultiple = canVote && summary.multipleChoice;\n  const recentVoterIds = results.recentVoterIds;\n  const maxVotersCount = voteResults ? Math.max(...voteResults.map((r) => r.votersCount)) : totalVoters;\n  const correctResults = useMemo(() => {\n    return voteResults?.filter((r) => r.isCorrect).map((r) => r.option) || [];\n  }, [voteResults]);\n  const answers = useMemo(() => summary.answers.map((a) => ({\n    label: renderTextWithEntities({\n      text: a.text.text,\n      entities: a.text.entities,\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    }),\n    value: a.option,\n    hidden: Boolean(summary.quiz && summary.closePeriod && closePeriod <= 0),\n  })), [\n    closePeriod, observeIntersectionForLoading, observeIntersectionForPlaying,\n    summary.answers, summary.closePeriod, summary.quiz,\n  ]);\n\n  useEffect(() => {\n    const chosen = poll.results.results?.find((result) => result.isChosen);\n    if (isSubmitting && chosen) {\n      if (chosen.isCorrect) {\n        requestConfetti({});\n      }\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, poll.results.results, requestConfetti]);\n\n  useLayoutEffect(() => {\n    if (closePeriod > 0) {\n      setTimeout(() => setClosePeriod(closePeriod - 1), TIMER_UPDATE_INTERVAL);\n    }\n    if (!timerCircleRef.current) return;\n\n    if (closePeriod <= 5) {\n      countdownRef.current!.classList.add('hurry-up');\n    }\n\n    const strokeDashOffset = ((summary.closePeriod! - closePeriod) / summary.closePeriod!) * TIMER_CIRCUMFERENCE;\n    timerCircleRef.current.setAttribute('stroke-dashoffset', `-${strokeDashOffset}`);\n  }, [closePeriod, summary.closePeriod]);\n\n  useEffect(() => {\n    if (summary.quiz && (closePeriod <= 0 || (hasVoted && !summary.closed))) {\n      loadMessage({ chatId, messageId });\n    }\n  }, [chatId, closePeriod, hasVoted, loadMessage, messageId, summary.closed, summary.quiz]);\n\n  // If the client time is not synchronized, the poll must be updated after the closePeriod time has expired.\n  useEffect(() => {\n    let timer: number | undefined;\n\n    if (summary.quiz && !summary.closed && summary.closePeriod && summary.closePeriod > 0) {\n      timer = window.setTimeout(() => {\n        loadMessage({ chatId, messageId });\n      }, summary.closePeriod * 1000);\n    }\n\n    return () => {\n      if (timer) {\n        window.clearTimeout(timer);\n      }\n    };\n  }, [canVote, chatId, loadMessage, messageId, summary.closePeriod, summary.closed, summary.quiz]);\n\n  const recentVoters = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const global = getGlobal();\n    return recentVoterIds ? recentVoterIds.reduce((result: ApiPeer[], id) => {\n      const peer = selectPeer(global, id);\n      if (peer) {\n        result.push(peer);\n      }\n\n      return result;\n    }, []) : [];\n  }, [recentVoterIds]);\n\n  const handleRadioChange = useLastCallback((option: string) => {\n    setChosenOptions([option]);\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote([option]);\n  });\n\n  const handleCheckboxChange = useLastCallback((options: string[]) => {\n    setChosenOptions(options);\n  });\n\n  const handleVoteClick = useLastCallback(() => {\n    setIsSubmitting(true);\n    setWasSubmitted(true);\n    onSendVote(chosenOptions);\n  });\n\n  const handleViewResultsClick = useLastCallback(() => {\n    openPollResults({ chatId, messageId });\n  });\n\n  const showSolution = useLastCallback(() => {\n    showNotification({\n      localId: getMessageKey(message),\n      message: renderTextWithEntities({ text: poll.results.solution!, entities: poll.results.solutionEntities }),\n      duration: SOLUTION_DURATION,\n      containerSelector: SOLUTION_CONTAINER_ID,\n    });\n  });\n\n  // Show the solution to quiz if the answer was incorrect\n  useEffect(() => {\n    if (wasSubmitted && hasVoted && summary.quiz && results.results && poll.results.solution) {\n      const correctResult = results.results.find((r) => r.isChosen && r.isCorrect);\n      if (!correctResult) {\n        showSolution();\n      }\n    }\n  }, [hasVoted, wasSubmitted, results.results, summary.quiz, poll.results.solution]);\n\n  const lang = useOldLang();\n\n  function renderResultOption(answer: ApiPollAnswer) {\n    return (\n      <PollOption\n        key={answer.option}\n        shouldAnimate={wasSubmitted || !canVote}\n        answer={answer}\n        voteResults={voteResults}\n        totalVoters={totalVoters}\n        maxVotersCount={maxVotersCount}\n        correctResults={correctResults}\n      />\n    );\n  }\n\n  function renderRecentVoters() {\n    return (\n      recentVoters.length > 0 && (\n        <div className=\"poll-recent-voters\">\n          <AvatarList\n            size=\"micro\"\n            peers={recentVoters}\n          />\n        </div>\n      )\n    );\n  }\n\n  return (\n    <div className=\"Poll\" dir={lang.isRtl ? 'auto' : 'ltr'}>\n      <div className=\"poll-question\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n          observeIntersectionForLoading,\n          observeIntersectionForPlaying,\n        })}\n      </div>\n      <div className=\"poll-type\">\n        {lang(getPollTypeString(summary))}\n        {renderRecentVoters()}\n        {closePeriod > 0 && canVote && (\n          <div ref={countdownRef} className=\"poll-countdown\">\n            <span>{formatMediaDuration(closePeriod)}</span>\n            <svg width=\"16px\" height=\"16px\">\n              <circle\n                ref={timerCircleRef}\n                cx=\"8\"\n                cy=\"8\"\n                r={TIMER_RADIUS}\n                className=\"poll-countdown-progress\"\n                transform=\"rotate(-90, 8, 8)\"\n                stroke-dasharray={TIMER_CIRCUMFERENCE}\n                stroke-dashoffset=\"0\"\n              />\n            </svg>\n          </div>\n        )}\n        {summary.quiz && poll.results.solution && !canVote && (\n          <Button\n            round\n            size=\"tiny\"\n            color=\"translucent\"\n            className=\"poll-quiz-help\"\n            onClick={showSolution}\n            ariaLabel=\"Show Solution\"\n          >\n            <Icon name=\"lamp\" />\n          </Button>\n        )}\n      </div>\n      {canVote && (\n        <div className=\"poll-answers\" onClick={stopPropagation}>\n          {isMultiple\n            ? (\n              <CheckboxGroup\n                options={answers}\n                onChange={handleCheckboxChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOptions={isSubmitting ? chosenOptions : undefined}\n                isRound\n              />\n            )\n            : (\n              <RadioGroup\n                name={`poll-${messageId}`}\n                options={answers}\n                onChange={handleRadioChange}\n                disabled={message.isScheduled || isSubmitting}\n                loadingOption={isSubmitting ? chosenOptions[0] : undefined}\n              />\n            )}\n        </div>\n      )}\n      {!canVote && (\n        <div className=\"poll-results\">\n          {summary.answers.map(renderResultOption)}\n        </div>\n      )}\n      {!canViewResult && !isMultiple && (\n        <div className=\"poll-voters-count\">{getReadableVotersCount(lang, summary.quiz, results.totalVoters)}</div>\n      )}\n      {isMultiple && (\n        <Button\n          isText\n          disabled={chosenOptions.length === 0}\n          size=\"tiny\"\n          onClick={handleVoteClick}\n        >\n          {lang('PollSubmitVotes')}\n        </Button>\n      )}\n      {canViewResult && (\n        <Button\n          isText\n          size=\"tiny\"\n          onClick={handleViewResultsClick}\n        >\n          {lang('PollViewResults')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nfunction getPollTypeString(summary: ApiPoll['summary']) {\n  // When we just created the poll, some properties don't exist.\n  if (typeof summary.isPublic === 'undefined') {\n    return NBSP;\n  }\n\n  if (summary.closed) {\n    return 'FinalResults';\n  }\n\n  if (summary.quiz) {\n    return summary.isPublic ? 'QuizPoll' : 'AnonymousQuizPoll';\n  }\n\n  return summary.isPublic ? 'PublicPoll' : 'AnonymousPoll';\n}\n\nfunction getReadableVotersCount(lang: OldLangFn, isQuiz: true | undefined, count?: number) {\n  if (!count) {\n    return lang(isQuiz ? 'Chat.Quiz.TotalVotesEmpty' : 'Chat.Poll.TotalVotesResultEmpty');\n  }\n\n  return lang(isQuiz ? 'Answer' : 'Vote', count, 'i');\n}\n\nfunction stopPropagation(e: React.MouseEvent<HTMLDivElement>) {\n  e.stopPropagation();\n}\n\nexport default memo(Poll);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FPceNkgD\",\"inactive\":\"hruUWBuj\",\"mirrored\":\"GydRBA08\",\"effect\":\"WMMaWlOL\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { getStickerDimensions } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport StickerView from '../../common/StickerView';\nimport Portal from '../../ui/Portal';\n\nimport styles from './Sticker.module.scss';\n\n// https://github.com/telegramdesktop/tdesktop/blob/master/Telegram/SourceFiles/history/view/media/history_view_sticker.cpp#L42\nconst EFFECT_SIZE_MULTIPLIER = 1 + 0.245 * 2;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection: ObserveFn;\n  observeIntersectionForPlaying: ObserveFn;\n  shouldLoop?: boolean;\n  shouldPlayEffect?: boolean;\n  withEffect?: boolean;\n  onStopEffect?: VoidFunction;\n};\n\nconst Sticker: FC<OwnProps> = ({\n  message, observeIntersection, observeIntersectionForPlaying, shouldLoop,\n  shouldPlayEffect, withEffect, onStopEffect,\n}) => {\n  const { showNotification, openStickerSet } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const sticker = message.content.sticker!;\n  const { stickerSetInfo, isVideo, hasEffect } = sticker;\n  const isMirrored = !message.isOutgoing;\n\n  const mediaHash = sticker.isPreloadedGlobally ? undefined : (\n    getStickerMediaHash(sticker, isVideo && !IS_WEBM_SUPPORTED ? 'pictogram' : 'inline')!\n  );\n\n  const canLoad = useIsIntersecting(ref, observeIntersection);\n  const canPlay = useIsIntersecting(ref, observeIntersectionForPlaying);\n  const mediaHashEffect = `sticker${sticker.id}?size=f`;\n  const effectBlobUrl = useMedia(\n    mediaHashEffect,\n    !canLoad || !hasEffect || !withEffect,\n    ApiMediaFormat.BlobUrl,\n  );\n  const [isPlayingEffect, startPlayingEffect, stopPlayingEffect] = useFlag();\n\n  const handleEffectEnded = useLastCallback(() => {\n    stopPlayingEffect();\n    onStopEffect?.();\n  });\n\n  useEffect(() => {\n    if (hasEffect && withEffect && canPlay && shouldPlayEffect) {\n      startPlayingEffect();\n    }\n  }, [hasEffect, canPlay, shouldPlayEffect, startPlayingEffect, withEffect]);\n\n  const shouldRenderEffect = hasEffect && withEffect && effectBlobUrl && isPlayingEffect;\n  useOverlayPosition({\n    anchorRef: ref,\n    overlayRef: effectRef,\n    isMirrored,\n    isDisabled: !shouldRenderEffect,\n  });\n\n  const openModal = useLastCallback(() => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (hasEffect) {\n      if (isPlayingEffect || !withEffect) {\n        showNotification({\n          message: lang('PremiumStickerTooltip'),\n          action: {\n            action: 'openStickerSet',\n            payload: {\n              stickerSetInfo: sticker.stickerSetInfo,\n            },\n          },\n          actionText: lang('ViewAction'),\n        });\n        return;\n      } else if (withEffect) {\n        startPlayingEffect();\n        return;\n      }\n    }\n    openModal();\n  });\n\n  const isMemojiSticker = 'isMissing' in stickerSetInfo;\n  const { width, height } = getStickerDimensions(sticker, isMobile);\n  const className = buildClassName(\n    'media-inner',\n    styles.root,\n    isMemojiSticker && styles.inactive,\n    hasEffect && isMirrored && styles.mirrored,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={className}\n      style={`width: ${width}px; height: ${height}px;`}\n      onClick={!isMemojiSticker ? handleClick : undefined}\n    >\n      <StickerView\n        containerRef={ref}\n        sticker={sticker}\n        fullMediaHash={mediaHash}\n        fullMediaClassName=\"full-media\"\n        size={width}\n        shouldLoop={shouldLoop}\n        noLoad={!canLoad}\n        noPlay={!canPlay}\n        withSharedAnimation\n      />\n      {shouldRenderEffect && (\n        <Portal>\n          <AnimatedSticker\n            ref={effectRef}\n            key={mediaHashEffect}\n            className={buildClassName(styles.effect, isMirrored && styles.mirrored)}\n            tgsUrl={effectBlobUrl}\n            size={width * EFFECT_SIZE_MULTIPLIER}\n            play\n            isLowPriority\n            noLoop\n            onEnded={handleEffectEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nexport default Sticker;\n","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiTypeStory,\n} from '../../../api/types';\n\nimport { selectPeerStory } from '../../../global/selectors';\n\nimport BaseStory from './BaseStory';\n\ninterface OwnProps {\n  message: ApiMessage;\n  isProtected?: boolean;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  isConnected?: boolean;\n}\n\nfunction Story({\n  message, story, isProtected, isConnected,\n}: OwnProps & StateProps) {\n  const { storyData } = message.content;\n\n  return (\n    <BaseStory\n      story={story || storyData}\n      isProtected={isProtected}\n      isConnected={isConnected}\n    />\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    isConnected: global.connectionState === 'connectionStateReady',\n  };\n})(Story));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiTypeStory, ApiUser,\n} from '../../../api/types';\n\nimport { getPeerTitle, getStoryMediaHash, getUserFirstOrLastName } from '../../../global/helpers';\nimport {\n  selectPeer,\n  selectPeerStories,\n  selectPeerStory,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\ninterface OwnProps {\n  message: ApiMessage;\n}\n\ninterface StateProps {\n  story?: ApiTypeStory;\n  peer?: ApiPeer;\n  targetUser?: ApiUser;\n  isUnread?: boolean;\n}\n\nfunction StoryMention({\n  message, story, peer, isUnread, targetUser,\n}: OwnProps & StateProps) {\n  const { openStoryViewer } = getActions();\n\n  const lang = useOldLang();\n\n  const { storyData } = message.content;\n\n  const handleClick = useLastCallback(() => {\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  const isDeleted = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded\n    ? getStoryMediaHash(story, 'pictogram')\n    : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  useEnsureStory(storyData!.peerId, storyData!.id, story);\n\n  function getTitle() {\n    if (peer && 'isSelf' in peer && peer.isSelf) {\n      return isDeleted\n        ? lang('ExpiredStoryMentioned', getUserFirstOrLastName(targetUser))\n        : lang('StoryYouMentionedTitle', getUserFirstOrLastName(targetUser));\n    }\n\n    return isDeleted\n      ? lang('ExpiredStoryMention')\n      : lang('StoryMentionedTitle', getPeerTitle(lang, peer!));\n  }\n\n  return (\n    <div\n      className={buildClassName('action-message-story-mention', isUnread && 'is-unread', isLoaded && 'with-preview')}\n      tabIndex={0}\n      role=\"button\"\n      onClick={isLoaded ? handleClick : undefined}\n    >\n      {isLoaded && (\n        <span className=\"story-media-wrapper\">\n          {thumbUrl && (\n            <img src={thumbUrl} alt=\"\" className=\"story-media\" />\n          )}\n        </span>\n      )}\n\n      <span className=\"story-title\">{renderText(getTitle(), ['emoji', 'simple_markdown'])}</span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { message }): StateProps => {\n  const { id, peerId } = message.content.storyData!;\n  const lastReadId = selectPeerStories(global, peerId)?.lastReadId;\n\n  return {\n    story: selectPeerStory(global, peerId, id),\n    peer: selectPeer(global, peerId),\n    targetUser: selectUser(global, message.chatId),\n    isUnread: Boolean(lastReadId && lastReadId < id),\n  };\n})(StoryMention));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatMember,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n  ApiThreadInfo,\n  ApiTopic,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type {\n  ActiveEmojiInteraction,\n  ChatTranslatedMessages,\n  FocusDirection,\n  IAlbum,\n  ISettings,\n  MessageListType,\n  ScrollTargetPosition,\n  ThreadId,\n} from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport type { OnIntersectPinnedMessage } from '../hooks/usePinnedMessage';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { EMOJI_STATUS_LOOP_LIMIT, MESSAGE_APPEARANCE_DELAY } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getIsDownloading,\n  getMessageContent,\n  getMessageCustomShape,\n  getMessageDownloadableMedia,\n  getMessageHtmlId,\n  getMessageSingleCustomEmoji,\n  getMessageSingleRegularEmoji,\n  getPeerTitle,\n  hasMessageText,\n  hasMessageTtl,\n  isAnonymousForwardsChat,\n  isAnonymousOwnMessage,\n  isChatChannel,\n  isChatGroup,\n  isChatPublic,\n  isGeoLiveExpired,\n  isMessageLocal,\n  isMessageTranslatable,\n  isOwnMessage,\n  isReplyToMessage,\n  isSystemBot,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo, getStoryReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectActiveDownloads,\n  selectAnimatedEmoji,\n  selectCanAutoLoadMedia,\n  selectCanAutoPlayMedia,\n  selectCanReplyToMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatTranslations,\n  selectCurrentMiddleSearch,\n  selectDefaultReaction,\n  selectForwardedSender,\n  selectIsChatProtected,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsDocumentGroupSelected,\n  selectIsInSelectMode,\n  selectIsMessageFocused,\n  selectIsMessageProtected,\n  selectIsMessageSelected,\n  selectMessageIdsByGroupId,\n  selectMessageLastPlaybackTimestamp,\n  selectMessageTimestampableDuration,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectPollFromMessage,\n  selectReplyMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectSender,\n  selectSenderFromHeader,\n  selectShouldDetectChatLanguage,\n  selectShouldLoopStickers,\n  selectTabState,\n  selectTheme,\n  selectThreadInfo,\n  selectTopicFromMessage,\n  selectUploadProgress,\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport stopEvent from '../../../util/stopEvent';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { IS_ANDROID, IS_ELECTRON, IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport { calculateDimensionsForMessageMedia, getStickerDimensions, REM } from '../../common/helpers/mediaDimensions';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\nimport renderText from '../../common/helpers/renderText';\nimport { getCustomEmojiSize } from '../composer/helpers/customEmoji';\nimport { buildContentClassName } from './helpers/buildContentClassName';\nimport { calculateAlbumLayout } from './helpers/calculateAlbumLayout';\nimport getSingularPaidMedia from './helpers/getSingularPaidMedia';\nimport { calculateMediaDimensions, getMinMediaWidth, MIN_MEDIA_WIDTH_WITH_TEXT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useFlag from '../../../hooks/useFlag';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useMessageResizeObserver from '../../../hooks/useResizeMessageObserver';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useTextLanguage from '../../../hooks/useTextLanguage';\nimport useDetectChatLanguage from './hooks/useDetectChatLanguage';\nimport useFocusMessage from './hooks/useFocusMessage';\nimport useInnerHandlers from './hooks/useInnerHandlers';\nimport useMessageTranslation from './hooks/useMessageTranslation';\nimport useOuterHandlers from './hooks/useOuterHandlers';\n\nimport Audio from '../../common/Audio';\nimport Avatar from '../../common/Avatar';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Document from '../../common/Document';\nimport DotAnimation from '../../common/DotAnimation';\nimport EmbeddedMessage from '../../common/embedded/EmbeddedMessage';\nimport EmbeddedStory from '../../common/embedded/EmbeddedStory';\nimport FakeIcon from '../../common/FakeIcon';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport MessageText from '../../common/MessageText';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport TopicChip from '../../common/TopicChip';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Button from '../../ui/Button';\nimport Album from './Album';\nimport AnimatedCustomEmoji from './AnimatedCustomEmoji';\nimport AnimatedEmoji from './AnimatedEmoji';\nimport CommentButton from './CommentButton';\nimport Contact from './Contact';\nimport ContextMenuContainer from './ContextMenuContainer.async';\nimport FactCheck from './FactCheck';\nimport Game from './Game';\nimport Giveaway from './Giveaway';\nimport InlineButtons from './InlineButtons';\nimport Invoice from './Invoice';\nimport InvoiceMediaPreview from './InvoiceMediaPreview';\nimport Location from './Location';\nimport MessageAppendix from './MessageAppendix';\nimport MessageEffect from './MessageEffect';\nimport MessageMeta from './MessageMeta';\nimport MessagePhoneCall from './MessagePhoneCall';\nimport PaidMediaOverlay from './PaidMediaOverlay';\nimport Photo from './Photo';\nimport Poll from './Poll';\nimport Reactions from './reactions/Reactions';\nimport RoundVideo from './RoundVideo';\nimport Sticker from './Sticker';\nimport Story from './Story';\nimport StoryMention from './StoryMention';\nimport Video from './Video';\nimport WebPage from './WebPage';\n\nimport './Message.scss';\n\ntype MessagePositionProperties = {\n  isFirstInGroup: boolean;\n  isLastInGroup: boolean;\n  isFirstInDocumentGroup: boolean;\n  isLastInDocumentGroup: boolean;\n  isLastInList: boolean;\n};\n\ntype OwnProps =\n  {\n    message: ApiMessage;\n    observeIntersectionForBottom?: ObserveFn;\n    observeIntersectionForLoading?: ObserveFn;\n    observeIntersectionForPlaying?: ObserveFn;\n    album?: IAlbum;\n    noAvatars?: boolean;\n    withAvatar?: boolean;\n    withSenderName?: boolean;\n    threadId: ThreadId;\n    messageListType: MessageListType;\n    noComments: boolean;\n    noReplies: boolean;\n    appearanceOrder: number;\n    isJustAdded: boolean;\n    memoFirstUnreadIdRef?: { current: number | undefined };\n    getIsMessageListReady?: Signal<boolean>;\n    onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n  }\n  & MessagePositionProperties;\n\ntype StateProps = {\n  theme: ISettings['theme'];\n  forceSenderName?: boolean;\n  sender?: ApiPeer;\n  canShowSender: boolean;\n  originSender?: ApiPeer;\n  botSender?: ApiUser;\n  isThreadTop?: boolean;\n  shouldHideReply?: boolean;\n  replyMessage?: ApiMessage;\n  replyMessageSender?: ApiPeer;\n  replyMessageForwardSender?: ApiPeer;\n  replyMessageChat?: ApiChat;\n  isReplyPrivate?: boolean;\n  replyStory?: ApiTypeStory;\n  storySender?: ApiPeer;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  uploadProgress?: number;\n  isInDocumentGroup: boolean;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  focusedQuote?: string;\n  noFocusHighlight?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n  isResizingContainer?: boolean;\n  isForwarding?: boolean;\n  isChatWithSelf?: boolean;\n  isRepliesChat?: boolean;\n  isAnonymousForwards?: boolean;\n  isChannel?: boolean;\n  isGroup?: boolean;\n  canReply?: boolean;\n  highlight?: string;\n  animatedEmoji?: string;\n  animatedCustomEmoji?: string;\n  hasActiveReactions?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  isGroupSelected?: boolean;\n  isDownloading?: boolean;\n  threadId?: ThreadId;\n  isPinnedList?: boolean;\n  isPinned?: boolean;\n  canAutoLoadMedia?: boolean;\n  canAutoPlayMedia?: boolean;\n  hasLinkedChat?: boolean;\n  shouldLoopStickers?: boolean;\n  autoLoadFileMaxSizeMb: number;\n  repliesThreadInfo?: ApiThreadInfo;\n  reactionMessage?: ApiMessage;\n  availableReactions?: ApiAvailableReaction[];\n  defaultReaction?: ApiReaction;\n  activeEmojiInteractions?: ActiveEmojiInteraction[];\n  hasUnreadReaction?: boolean;\n  isTranscribing?: boolean;\n  transcribedText?: string;\n  isTranscriptionError?: boolean;\n  isPremium: boolean;\n  senderAdminMember?: ApiChatMember;\n  messageTopic?: ApiTopic;\n  hasTopicChip?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  areTranslationsEnabled?: boolean;\n  shouldDetectChatLanguage?: boolean;\n  requestedTranslationLanguage?: string;\n  requestedChatTranslationLanguage?: string;\n  withAnimatedEffects?: boolean;\n  webPageStory?: ApiTypeStory;\n  isConnected: boolean;\n  isLoadingComments?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  senderBoosts?: number;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  canTranscribeVoice?: boolean;\n  viaBusinessBot?: ApiUser;\n  effect?: ApiAvailableEffect;\n  poll?: ApiPoll;\n  maxTimestamp?: number;\n  lastPlaybackTimestamp?: number;\n};\n\ntype MetaPosition =\n  'in-text'\n  | 'standalone'\n  | 'none';\ntype ReactionsPosition =\n  'inside'\n  | 'outside'\n  | 'none';\ntype QuickReactionPosition =\n  'in-content'\n  | 'in-meta';\n\nconst NBSP = '\\u00A0';\nconst NO_MEDIA_CORNERS_THRESHOLD = 18;\nconst QUICK_REACTION_SIZE = 1.75 * REM;\nconst EXTRA_SPACE_FOR_REACTIONS = 2.25 * REM;\n\nconst Message: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForBottom,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  album,\n  noAvatars,\n  withAvatar,\n  withSenderName,\n  noComments,\n  noReplies,\n  appearanceOrder,\n  isJustAdded,\n  isFirstInGroup,\n  isPremium,\n  isLastInGroup,\n  isFirstInDocumentGroup,\n  isLastInDocumentGroup,\n  isTranscribing,\n  transcribedText,\n  isLastInList,\n  theme,\n  forceSenderName,\n  sender,\n  canShowSender,\n  originSender,\n  botSender,\n  isThreadTop,\n  shouldHideReply,\n  replyMessage,\n  replyMessageSender,\n  replyMessageForwardSender,\n  replyMessageChat,\n  replyStory,\n  isReplyPrivate,\n  storySender,\n  outgoingStatus,\n  uploadProgress,\n  isInDocumentGroup,\n  isLoadingComments,\n  isProtected,\n  isChatProtected,\n  isFocused,\n  focusDirection,\n  focusedQuote,\n  noFocusHighlight,\n  scrollTargetPosition,\n  isResizingContainer,\n  isForwarding,\n  isChatWithSelf,\n  isRepliesChat,\n  isAnonymousForwards,\n  isChannel,\n  isGroup,\n  canReply,\n  highlight,\n  animatedEmoji,\n  animatedCustomEmoji,\n  hasActiveReactions,\n  hasLinkedChat,\n  isInSelectMode,\n  isSelected,\n  isGroupSelected,\n  threadId,\n  reactionMessage,\n  availableReactions,\n  defaultReaction,\n  activeEmojiInteractions,\n  messageListType,\n  isPinnedList,\n  isPinned,\n  isDownloading,\n  canAutoLoadMedia,\n  canAutoPlayMedia,\n  shouldLoopStickers,\n  autoLoadFileMaxSizeMb,\n  repliesThreadInfo,\n  hasUnreadReaction,\n  memoFirstUnreadIdRef,\n  senderAdminMember,\n  messageTopic,\n  hasTopicChip,\n  chatTranslations,\n  areTranslationsEnabled,\n  shouldDetectChatLanguage,\n  requestedTranslationLanguage,\n  requestedChatTranslationLanguage,\n  withAnimatedEffects,\n  webPageStory,\n  isConnected,\n  getIsMessageListReady,\n  shouldWarnAboutSvg,\n  senderBoosts,\n  tags,\n  canTranscribeVoice,\n  viaBusinessBot,\n  effect,\n  poll,\n  maxTimestamp,\n  lastPlaybackTimestamp,\n  onIntersectPinnedMessage,\n}) => {\n  const {\n    toggleMessageSelection,\n    clickBotInlineButton,\n    disableContextMenuHint,\n    animateUnreadReaction,\n    focusLastMessage,\n    markMentionsRead,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const bottomMarkerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const quickReactionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [isTranscriptionHidden, setTranscriptionHidden] = useState(false);\n  const [isPlayingSnapAnimation, setIsPlayingSnapAnimation] = useState(false);\n  const [isPlayingDeleteAnimation, setIsPlayingDeleteAnimation] = useState(false);\n  const [shouldPlayEffect, requestEffect, hideEffect] = useFlag();\n  const { isMobile, isTouchScreen } = useAppLayout();\n\n  useOnIntersect(bottomMarkerRef, observeIntersectionForBottom);\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    contextMenuTarget,\n    handleBeforeContextMenu,\n    handleContextMenu: onContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(\n    ref,\n    isTouchScreen && isInSelectMode,\n    !IS_ELECTRON,\n    IS_ANDROID,\n    getIsMessageListReady,\n  );\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      disableContextMenuHint();\n    }\n  }, [isContextMenuOpen, disableContextMenuHint]);\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * MESSAGE_APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  useShowTransition({\n    ref,\n    isOpen: isShown || isJustAdded,\n    noMountTransition: noAppearanceAnimation && !isJustAdded,\n    className: false,\n  });\n\n  const {\n    id: messageId, chatId, forwardInfo, viaBotId, isTranscriptionError, factCheck,\n  } = message;\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      const id = album ? album.mainMessage.id : messageId;\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [id] });\n    }\n  });\n\n  const isLocal = isMessageLocal(message);\n  const isOwn = isOwnMessage(message);\n  const isScheduled = messageListType === 'scheduled' || message.isScheduled;\n  const hasMessageReply = isReplyToMessage(message) && !shouldHideReply;\n\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo, audio,\n    voice, document, sticker, contact,\n    webPage, invoice, location,\n    action, game, storyData, giveaway,\n    giveawayResults,\n  } = getMessageContent(message);\n\n  const messageReplyInfo = getMessageReplyInfo(message);\n  const storyReplyInfo = getStoryReplyInfo(message);\n\n  const withVoiceTranscription = Boolean(!isTranscriptionHidden && (isTranscriptionError || transcribedText));\n\n  const hasStoryReply = Boolean(storyReplyInfo);\n  const hasThread = Boolean(repliesThreadInfo) && messageListType === 'thread';\n  const isCustomShape = !withVoiceTranscription && getMessageCustomShape(message);\n  const hasAnimatedEmoji = isCustomShape && (animatedEmoji || animatedCustomEmoji);\n  const hasReactions = reactionMessage?.reactions && !areReactionsEmpty(reactionMessage.reactions);\n  const asForwarded = (\n    forwardInfo\n    && (!isChatWithSelf || isScheduled)\n    && !isRepliesChat\n    && !forwardInfo.isLinkedChannelPost\n    && !isAnonymousForwards\n    && !botSender\n  ) || Boolean(storyData && !storyData.isMention);\n  const canShowSenderBoosts = Boolean(senderBoosts) && !asForwarded && isFirstInGroup;\n  const isStoryMention = storyData?.isMention;\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isAlbum = Boolean(album)\n    && (\n      (album.isPaidMedia && paidMedia!.extendedMedia.length > 1)\n      || album.messages.length > 1\n    ) && !album.messages.some((msg) => Object.keys(msg.content).length === 0);\n  const isInDocumentGroupNotFirst = isInDocumentGroup && !isFirstInDocumentGroup;\n  const isInDocumentGroupNotLast = isInDocumentGroup && !isLastInDocumentGroup;\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n  const canShowActionButton = (\n    !(isContextMenuShown || isInSelectMode || isForwarding)\n    && !isInDocumentGroupNotLast\n    && !isStoryMention\n    && !((sticker || hasAnimatedEmoji) && asForwarded)\n  );\n  const canForward = isChannel && !isScheduled && message.isForwardingAllowed\n  && !isChatProtected;\n  const canFocus = Boolean(isPinnedList\n    || (forwardInfo\n      && (forwardInfo.isChannelPost || isChatWithSelf || isRepliesChat || isAnonymousForwards)\n      && forwardInfo.fromMessageId\n    ));\n\n  const hasFactCheck = Boolean(factCheck?.text);\n\n  const hasForwardedCustomShape = asForwarded && isCustomShape;\n  const hasSubheader = hasTopicChip || hasMessageReply || hasStoryReply || hasForwardedCustomShape;\n\n  const selectMessage = useLastCallback((e?: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => {\n    toggleMessageSelection({\n      messageId,\n      groupedId,\n      ...(e?.shiftKey && { withShift: true }),\n      ...(isAlbum && { childMessageIds: album!.messages.map(({ id }) => id) }),\n    });\n  });\n\n  const messageSender = canShowSender ? sender : undefined;\n\n  const shouldPreferOriginSender = forwardInfo\n    && (isChatWithSelf || isRepliesChat || isAnonymousForwards || !messageSender);\n  const avatarPeer = shouldPreferOriginSender ? originSender : messageSender;\n\n  const messageColorPeer = asForwarded ? originSender : sender;\n  const noUserColors = isOwn && !isCustomShape;\n\n  const senderPeer = (forwardInfo || storyData) ? originSender : messageSender;\n  const hasTtl = hasMessageTtl(message);\n\n  const {\n    handleMouseDown,\n    handleClick,\n    handleContextMenu,\n    handleDoubleClick,\n    handleContentDoubleClick,\n    handleMouseMove,\n    handleSendQuickReaction,\n    handleMouseLeave,\n    isSwiped,\n    isQuickReactionVisible,\n    handleDocumentGroupMouseEnter,\n  } = useOuterHandlers(\n    selectMessage,\n    ref,\n    messageId,\n    Boolean(isInSelectMode),\n    Boolean(canReply),\n    Boolean(isProtected),\n    onContextMenu,\n    handleBeforeContextMenu,\n    chatId,\n    isContextMenuShown,\n    quickReactionRef,\n    isInDocumentGroupNotLast,\n    getIsMessageListReady,\n  );\n\n  const {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleMediaClick,\n    handleDocumentClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll,\n    handleTopicChipClick,\n    handleStoryClick,\n  } = useInnerHandlers({\n    lang,\n    selectMessage,\n    message,\n    chatId,\n    threadId,\n    isInDocumentGroup,\n    asForwarded,\n    isScheduled,\n    album,\n    avatarPeer,\n    senderPeer,\n    botSender,\n    messageTopic,\n    isTranslatingChat: Boolean(requestedChatTranslationLanguage),\n    story: replyStory && 'content' in replyStory ? replyStory : undefined,\n    isReplyPrivate,\n    isRepliesChat,\n    isSavedMessages: isChatWithSelf,\n    lastPlaybackTimestamp,\n  });\n\n  const handleEffectClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    requestEffect();\n  });\n\n  useEffect(() => {\n    if (!isLastInList) {\n      return;\n    }\n\n    if (withVoiceTranscription && transcribedText) {\n      focusLastMessage();\n    }\n  }, [focusLastMessage, isLastInList, transcribedText, withVoiceTranscription]);\n\n  useEffect(() => {\n    const element = ref.current;\n    const isPartialAlbumDelete = message.isInAlbum && album?.messages.some((msg) => !msg.isDeleting);\n    if (message.isDeleting && element && !isPartialAlbumDelete) {\n      if (animateSnap(element)) {\n        setIsPlayingSnapAnimation(true);\n      } else {\n        setIsPlayingDeleteAnimation(true);\n      }\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- Only start animation on `isDeleting` change\n  }, [message.isDeleting]);\n\n  const textMessage = album?.hasMultipleCaptions ? undefined : (album?.captionMessage || message);\n  const hasTextContent = textMessage && hasMessageText(textMessage);\n  const hasText = hasTextContent || hasFactCheck;\n\n  const containerClassName = buildClassName(\n    'Message message-list-item',\n    isFirstInGroup && 'first-in-group',\n    isProtected && 'hide-on-print',\n    isProtected && !hasTextContent ? 'is-protected' : 'allow-selection',\n    isLastInGroup && 'last-in-group',\n    isFirstInDocumentGroup && 'first-in-document-group',\n    isLastInDocumentGroup && 'last-in-document-group',\n    isLastInList && 'last-in-list',\n    isOwn && 'own',\n    Boolean(message.viewsCount) && 'has-views',\n    message.isEdited && 'was-edited',\n    hasMessageReply && 'has-reply',\n    isContextMenuOpen && 'has-menu-open',\n    isFocused && !noFocusHighlight && 'focused',\n    isForwarding && 'is-forwarding',\n    isPlayingDeleteAnimation && 'is-deleting',\n    isPlayingSnapAnimation && 'is-dissolving',\n    isInDocumentGroup && 'is-in-document-group',\n    isAlbum && 'is-album',\n    message.hasUnreadMention && 'has-unread-mention',\n    isSelected && 'is-selected',\n    isInSelectMode && 'is-in-selection-mode',\n    isThreadTop && !withAvatar && 'is-thread-top',\n    Boolean(message.inlineButtons) && 'has-inline-buttons',\n    isSwiped && 'is-swiped',\n    isJustAdded && 'is-just-added',\n    (hasActiveReactions || shouldPlayEffect) && 'has-active-effect',\n    isStoryMention && 'is-story-mention',\n    !canShowActionButton && 'no-action-button',\n  );\n\n  const text = textMessage && getMessageContent(textMessage).text;\n  const isInvertedMedia = Boolean(message.isInvertedMedia);\n\n  const { replyToMsgId, replyToPeerId, isQuote } = messageReplyInfo || {};\n  const { peerId: storyReplyPeerId, storyId: storyReplyId } = storyReplyInfo || {};\n\n  useEffect(() => {\n    if ((sticker?.hasEffect || effect) && ((\n      memoFirstUnreadIdRef?.current && messageId >= memoFirstUnreadIdRef.current\n    ) || isLocal)) {\n      requestEffect();\n    }\n  }, [effect, isLocal, memoFirstUnreadIdRef, messageId, sticker?.hasEffect]);\n\n  const detectedLanguage = useTextLanguage(\n    text?.text,\n    !(areTranslationsEnabled || shouldDetectChatLanguage),\n    getIsMessageListReady,\n  );\n  useDetectChatLanguage(message, detectedLanguage, !shouldDetectChatLanguage, getIsMessageListReady);\n\n  const shouldTranslate = isMessageTranslatable(message, !requestedChatTranslationLanguage);\n  const { isPending: isTranslationPending, translatedText } = useMessageTranslation(\n    chatTranslations, chatId, shouldTranslate ? messageId : undefined, requestedTranslationLanguage,\n  );\n  // Used to display previous result while new one is loading\n  const previousTranslatedText = usePreviousDeprecated(translatedText, Boolean(shouldTranslate));\n\n  const currentTranslatedText = translatedText || previousTranslatedText;\n\n  const phoneCall = action?.type === 'phoneCall' ? action : undefined;\n\n  const isMediaWithCommentButton = (repliesThreadInfo || (hasLinkedChat && isChannel && isLocal))\n    && !isInDocumentGroupNotLast\n    && messageListType === 'thread'\n    && !noComments;\n  const withCommentButton = repliesThreadInfo?.isCommentsInfo\n    && !isInDocumentGroupNotLast && messageListType === 'thread'\n    && !noComments;\n  const withQuickReactionButton = !isTouchScreen && !phoneCall && !isInSelectMode && defaultReaction\n    && !isInDocumentGroupNotLast && !isStoryMention && !hasTtl;\n\n  const hasOutsideReactions = !withVoiceTranscription && hasReactions\n    && (isCustomShape || ((photo || video || storyData || (location?.mediaType === 'geo')) && !hasText));\n\n  const contentClassName = buildContentClassName(message, album, {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread: hasThread && !noComments,\n    forceSenderName,\n    hasCommentCounter: hasThread && repliesThreadInfo.messagesCount > 0,\n    hasCommentButton: withCommentButton,\n    hasActionButton: canForward || canFocus,\n    hasReactions,\n    isGeoLiveActive: location?.mediaType === 'geoLive' && !isGeoLiveExpired(message),\n    withVoiceTranscription,\n    peerColorClass: getPeerColorClass(messageColorPeer, noUserColors, true),\n    hasOutsideReactions,\n  });\n\n  const withAppendix = contentClassName.includes('has-appendix');\n  const emojiSize = getCustomEmojiSize(message.emojiOnlyCount);\n\n  let metaPosition!: MetaPosition;\n  if (phoneCall) {\n    metaPosition = 'none';\n  } else if (isInDocumentGroupNotLast) {\n    metaPosition = 'none';\n  } else if (hasText && !webPage && !emojiSize && !isInvertedMedia) {\n    metaPosition = 'in-text';\n  } else if (isInvertedMedia && !emojiSize && (hasFactCheck || webPage)) {\n    metaPosition = 'in-text';\n  } else {\n    metaPosition = 'standalone';\n  }\n\n  let reactionsPosition!: ReactionsPosition;\n  if (hasReactions) {\n    if (hasOutsideReactions) {\n      reactionsPosition = 'outside';\n    } else if (asForwarded) {\n      metaPosition = 'standalone';\n      reactionsPosition = 'inside';\n    } else {\n      reactionsPosition = 'inside';\n    }\n  } else {\n    reactionsPosition = 'none';\n  }\n\n  const quickReactionPosition: QuickReactionPosition = isCustomShape ? 'in-meta' : 'in-content';\n\n  useEnsureMessage(\n    replyToPeerId || chatId,\n    replyToMsgId,\n    replyMessage,\n    message.id,\n    shouldHideReply || isQuote || isReplyPrivate,\n  );\n\n  useEnsureStory(\n    storyReplyPeerId || chatId,\n    storyReplyId,\n    replyStory,\n  );\n\n  useFocusMessage({\n    elementRef: ref,\n    chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isResizingContainer,\n    isJustAdded,\n    isQuote: Boolean(focusedQuote),\n    scrollTargetPosition,\n  });\n\n  const viaBusinessBotTitle = viaBusinessBot ? getPeerTitle(lang, viaBusinessBot) : undefined;\n\n  const canShowPostAuthor = !message.senderId;\n  const signature = viaBusinessBotTitle || (canShowPostAuthor && message.postAuthorTitle)\n    || ((asForwarded || isChatWithSelf) && forwardInfo?.postAuthorTitle)\n    || undefined;\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    const bottomMarker = bottomMarkerRef.current;\n    if (!bottomMarker || !isElementInViewport(bottomMarker)) return;\n\n    if (hasUnreadReaction) {\n      animateUnreadReaction({ messageIds: [messageId] });\n    }\n\n    let unreadMentionIds: number[] = [];\n    if (message.hasUnreadMention) {\n      unreadMentionIds = [messageId];\n    }\n\n    if (album) {\n      unreadMentionIds = album.messages.filter((msg) => msg.hasUnreadMention).map((msg) => msg.id);\n    }\n\n    if (unreadMentionIds.length) {\n      markMentionsRead({ messageIds: unreadMentionIds });\n    }\n  }, [hasUnreadReaction, album, messageId, animateUnreadReaction, message.hasUnreadMention]);\n\n  const albumLayout = useMemo(() => {\n    return isAlbum\n      ? calculateAlbumLayout(isOwn, Boolean(noAvatars), album!, isMobile)\n      : undefined;\n  }, [isAlbum, isOwn, noAvatars, album, isMobile]);\n\n  const extraPadding = asForwarded && !isCustomShape ? 28 : 0;\n\n  const sizeCalculations = useMemo(() => {\n    let calculatedWidth;\n    let contentWidth: number | undefined;\n    let noMediaCorners = false;\n    let style = '';\n    let reactionsMaxWidth;\n\n    if (!isAlbum && (photo || video || invoice?.extendedMedia)) {\n      let width: number | undefined;\n      if (photo || video) {\n        const media = (photo || video);\n        if (media && !isRoundVideo) {\n          width = calculateMediaDimensions({\n            media,\n            isOwn,\n            asForwarded,\n            noAvatars,\n            isMobile,\n          }).width;\n        }\n      } else if (invoice?.extendedMedia && (\n        invoice.extendedMedia.width && invoice.extendedMedia.height\n      )) {\n        const { width: previewWidth, height: previewHeight } = invoice.extendedMedia;\n        width = calculateDimensionsForMessageMedia({\n          width: previewWidth,\n          height: previewHeight,\n          fromOwnMessage: isOwn,\n          asForwarded,\n          noAvatars,\n          isMobile,\n        }).width;\n      }\n\n      if (width) {\n        if (width < MIN_MEDIA_WIDTH_WITH_TEXT) {\n          contentWidth = width;\n        }\n        calculatedWidth = Math.max(getMinMediaWidth(text?.text, isMediaWithCommentButton), width);\n        if (!asForwarded && invoice?.extendedMedia && calculatedWidth - width > NO_MEDIA_CORNERS_THRESHOLD) {\n          noMediaCorners = true;\n        }\n      }\n    } else if (albumLayout) {\n      calculatedWidth = Math.max(\n        getMinMediaWidth(text?.text, isMediaWithCommentButton), albumLayout.containerStyle.width,\n      );\n      if (calculatedWidth - albumLayout.containerStyle.width > NO_MEDIA_CORNERS_THRESHOLD) {\n        noMediaCorners = true;\n      }\n    }\n\n    if (calculatedWidth) {\n      style = `width: ${calculatedWidth}px`;\n      reactionsMaxWidth = calculatedWidth + EXTRA_SPACE_FOR_REACTIONS;\n    } else if (sticker && !hasSubheader) {\n      const { width } = getStickerDimensions(sticker, isMobile);\n      style = `width: ${width + extraPadding}px`;\n      reactionsMaxWidth = width + EXTRA_SPACE_FOR_REACTIONS;\n    }\n\n    return {\n      contentWidth, noMediaCorners, style, reactionsMaxWidth,\n    };\n  }, [\n    albumLayout, asForwarded, extraPadding, hasSubheader, invoice?.extendedMedia, isAlbum, isMediaWithCommentButton,\n    isMobile, isOwn, noAvatars, photo, sticker, text?.text, video, isRoundVideo,\n  ]);\n\n  const {\n    contentWidth, noMediaCorners, style, reactionsMaxWidth,\n  } = sizeCalculations;\n\n  function renderMessageText(isForAnimation?: boolean) {\n    if (!textMessage) return undefined;\n    return (\n      <MessageText\n        messageOrStory={textMessage}\n        translatedText={requestedTranslationLanguage ? currentTranslatedText : undefined}\n        isForAnimation={isForAnimation}\n        focusedQuote={focusedQuote}\n        emojiSize={emojiSize}\n        highlight={highlight}\n        isProtected={isProtected}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        withTranslucentThumbs={isCustomShape}\n        isInSelectMode={isInSelectMode}\n        canBeEmpty={hasFactCheck}\n        maxTimestamp={maxTimestamp}\n        threadId={threadId}\n      />\n    );\n  }\n\n  const renderQuickReactionButton = useCallback(() => {\n    if (!defaultReaction) return undefined;\n\n    return (\n      <div\n        className={buildClassName('quick-reaction', isQuickReactionVisible && !hasActiveReactions && 'visible')}\n        onClick={handleSendQuickReaction}\n        ref={quickReactionRef}\n      >\n        <ReactionStaticEmoji\n          reaction={defaultReaction}\n          size={QUICK_REACTION_SIZE}\n          availableReactions={availableReactions}\n          observeIntersection={observeIntersectionForPlaying}\n        />\n      </div>\n    );\n  }, [\n    hasActiveReactions, availableReactions, defaultReaction, handleSendQuickReaction, isQuickReactionVisible,\n    observeIntersectionForPlaying,\n  ]);\n\n  function renderReactionsAndMeta() {\n    const meta = (\n      <MessageMeta\n        message={message}\n        isPinned={isPinned}\n        withFullDate={isChatWithSelf && !isOwn}\n        noReplies={noReplies}\n        repliesThreadInfo={repliesThreadInfo}\n        outgoingStatus={outgoingStatus}\n        signature={signature}\n        withReactionOffset={reactionsPosition === 'inside'}\n        renderQuickReactionButton={\n          withQuickReactionButton && quickReactionPosition === 'in-meta' ? renderQuickReactionButton : undefined\n        }\n        availableReactions={availableReactions}\n        isTranslated={Boolean(requestedTranslationLanguage ? currentTranslatedText : undefined)}\n        effectEmoji={effect?.emoticon}\n        onClick={handleMetaClick}\n        onEffectClick={handleEffectClick}\n        onTranslationClick={handleTranslationClick}\n        onOpenThread={handleOpenThread}\n      />\n    );\n\n    if (reactionsPosition !== 'inside') {\n      return meta;\n    }\n\n    return (\n      <Reactions\n        message={reactionMessage!}\n        threadId={threadId}\n        metaChildren={meta}\n        observeIntersection={observeIntersectionForPlaying}\n        noRecentReactors={isChannel}\n        tags={tags}\n        isCurrentUserPremium={isPremium}\n      />\n    );\n  }\n\n  function renderContent() {\n    const className = buildClassName(\n      'content-inner',\n      asForwarded && 'forwarded-message',\n      hasForwardedCustomShape && 'forwarded-custom-shape',\n      hasSubheader && 'with-subheader',\n      noMediaCorners && 'no-media-corners',\n    );\n    const hasCustomAppendix = isLastInGroup\n      && (!hasText || (isInvertedMedia && !hasFactCheck && !hasReactions)) && !withCommentButton;\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n    const shouldReadMedia = !hasTtl || !isOwn || isChatWithSelf;\n\n    return (\n      <div className={className} onDoubleClick={handleContentDoubleClick} dir=\"auto\">\n        {!asForwarded && shouldRenderSenderName() && renderSenderName()}\n        {hasSubheader && (\n          <div className=\"message-subheader\">\n            {hasTopicChip && (\n              <TopicChip\n                topic={messageTopic}\n                onClick={handleTopicChipClick}\n                className=\"message-topic\"\n              />\n            )}\n            {hasForwardedCustomShape && (\n              <div className=\"forward-custom-shape-subheader\">\n                <div className=\"message-title\">\n                  {renderForwardTitle()}\n                </div>\n                {renderSenderName(true, true)}\n              </div>\n            )}\n            {hasMessageReply && (\n              <EmbeddedMessage\n                message={replyMessage}\n                replyInfo={messageReplyInfo}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                sender={replyMessageSender}\n                senderChat={replyMessageChat}\n                forwardSender={replyMessageForwardSender}\n                chatTranslations={chatTranslations}\n                requestedChatTranslationLanguage={requestedChatTranslationLanguage}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                observeIntersectionForPlaying={observeIntersectionForPlaying}\n                onClick={handleReplyClick}\n              />\n            )}\n            {hasStoryReply && (\n              <EmbeddedStory\n                story={replyStory}\n                sender={storySender}\n                noUserColors={noUserColors}\n                isProtected={isProtected}\n                observeIntersectionForLoading={observeIntersectionForLoading}\n                onClick={handleStoryClick}\n              />\n            )}\n          </div>\n        )}\n        {sticker && observeIntersectionForLoading && observeIntersectionForPlaying && (\n          <Sticker\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            shouldLoop={shouldLoopStickers}\n            shouldPlayEffect={shouldPlayEffect}\n            withEffect={withAnimatedEffects}\n            onStopEffect={hideEffect}\n          />\n        )}\n        {hasAnimatedEmoji && animatedCustomEmoji && (\n          <AnimatedCustomEmoji\n            customEmojiId={animatedCustomEmoji}\n            withEffects={withAnimatedEffects && isUserId(chatId) && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {hasAnimatedEmoji && animatedEmoji && (\n          <AnimatedEmoji\n            emoji={animatedEmoji}\n            withEffects={withAnimatedEffects && isUserId(chatId) && !effect}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            forceLoadPreview={isLocal}\n            messageId={messageId}\n            chatId={chatId}\n            activeEmojiInteractions={activeEmojiInteractions}\n          />\n        )}\n        {withAnimatedEffects && effect && !isLocal && (\n          <MessageEffect\n            shouldPlay={shouldPlayEffect}\n            messageId={message.id}\n            isMirrored={!message.isOutgoing}\n            effect={effect}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onStop={hideEffect}\n          />\n        )}\n        {phoneCall && (\n          <MessagePhoneCall\n            message={message}\n            phoneCall={phoneCall}\n            chatId={chatId}\n          />\n        )}\n        {!isAlbum && isRoundVideo && !withVoiceTranscription && (\n          <RoundVideo\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            isDownloading={isDownloading}\n            onReadMedia={shouldReadMedia ? handleReadMedia : undefined}\n            onHideTranscription={setTranscriptionHidden}\n            isTranscriptionError={isTranscriptionError}\n            isTranscribed={Boolean(transcribedText)}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribing={isTranscribing}\n          />\n        )}\n        {(audio || voice || withVoiceTranscription) && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            noAvatars={noAvatars}\n            onPlay={handleAudioPlay}\n            onReadMedia={voice && shouldReadMedia ? handleReadMedia : undefined}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            isTranscribing={isTranscribing}\n            isTranscriptionHidden={isTranscriptionHidden}\n            isTranscribed={Boolean(transcribedText)}\n            isTranscriptionError={isTranscriptionError}\n            canDownload={!isProtected}\n            onHideTranscription={setTranscriptionHidden}\n            canTranscribe={canTranscribeVoice && !hasTtl}\n          />\n        )}\n        {document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            canAutoLoad={canAutoLoadMedia}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            uploadProgress={uploadProgress}\n            isSelectable={isInDocumentGroup}\n            isSelected={isSelected}\n            onMediaClick={handleDocumentClick}\n            onCancelUpload={handleCancelUpload}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {storyData && !isStoryMention && (\n          <Story\n            message={message}\n            isProtected={isProtected}\n          />\n        )}\n        {isStoryMention && <StoryMention message={message} />}\n        {contact && (\n          <Contact contact={contact} noUserColors={isOwn} />\n        )}\n        {poll && (\n          <Poll message={message} poll={poll} onSendVote={handleVoteSend} />\n        )}\n        {(giveaway || giveawayResults) && (\n          <Giveaway message={message} />\n        )}\n        {game && (\n          <Game\n            message={message}\n            canAutoLoadMedia={canAutoLoadMedia}\n          />\n        )}\n        {invoice?.extendedMedia && (\n          <InvoiceMediaPreview\n            message={message}\n            isConnected={isConnected}\n          />\n        )}\n\n        {withVoiceTranscription && (\n          <p\n            className={buildClassName(\n              'transcription',\n              !isTranscriptionHidden && isTranscriptionError && 'transcription-error',\n            )}\n            dir=\"auto\"\n          >\n            {(isTranscriptionError ? lang('NoWordsRecognized') : (\n              isTranscribing && transcribedText ? <DotAnimation content={transcribedText} /> : transcribedText\n            ))}\n          </p>\n        )}\n\n        {isInvertedMedia && renderInvertedMediaContent(hasCustomAppendix)}\n\n        {!isInvertedMedia && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {hasText && !hasAnimatedEmoji && (\n              <div className={textContentClass} dir=\"auto\">\n                {renderMessageText()}\n                {isTranslationPending && (\n                  <div className=\"translation-animation\">\n                    <div className=\"text-loading\">\n                      {renderMessageText(true)}\n                    </div>\n                  </div>\n                )}\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {metaPosition === 'in-text' && renderReactionsAndMeta()}\n              </div>\n            )}\n            {renderWebPage()}\n          </>\n        )}\n\n        {invoice && !invoice.extendedMedia && (\n          <Invoice\n            message={message}\n            shouldAffectAppendix={hasCustomAppendix && !hasReactions}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            forcedWidth={contentWidth}\n          />\n        )}\n        {location && (\n          <Location\n            message={message}\n            isInSelectMode={isInSelectMode}\n            isSelected={isSelected}\n            theme={theme}\n            peer={sender}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderInvertedMediaContent(hasCustomAppendix: boolean) {\n    const textContentClass = buildClassName(\n      'text-content',\n      'clearfix',\n    );\n    const footerClass = buildClassName(\n      'text-content',\n      'clearfix',\n      metaPosition === 'in-text' && 'with-meta',\n      outgoingStatus && 'with-outgoing-icon',\n    );\n\n    const hasMediaAfterText = isAlbum || (!isAlbum && photo) || (!isAlbum && video && !isRoundVideo);\n    const hasContentAfterText = hasMediaAfterText || (!hasAnimatedEmoji && hasFactCheck);\n    const isMetaInText = metaPosition === 'in-text';\n\n    return (\n      <>\n        {renderWebPage()}\n        {hasText && !hasAnimatedEmoji && (\n          <div className={textContentClass} dir=\"auto\">\n            {renderMessageText()}\n            {isTranslationPending && (\n              <div className=\"translation-animation\">\n                <div className=\"text-loading\">\n                  {renderMessageText(true)}\n                </div>\n              </div>\n            )}\n            {!hasContentAfterText && isMetaInText && renderReactionsAndMeta()}\n          </div>\n        )}\n\n        {hasContentAfterText && (\n          <>\n            {renderInvertibleMediaContent(hasCustomAppendix)}\n            {!hasAnimatedEmoji && (\n              <div className={footerClass} dir=\"auto\">\n                {hasFactCheck && (\n                  <FactCheck factCheck={factCheck} isToggleDisabled={isInSelectMode} />\n                )}\n                {isMetaInText && renderReactionsAndMeta()}\n              </div>\n            )}\n          </>\n        )}\n\n      </>\n    );\n  }\n\n  function renderWebPage() {\n    return webPage && (\n      <WebPage\n        message={message}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        noAvatars={noAvatars}\n        canAutoLoad={canAutoLoadMedia}\n        canAutoPlay={canAutoPlayMedia}\n        asForwarded={asForwarded}\n        isDownloading={isDownloading}\n        isProtected={isProtected}\n        theme={theme}\n        story={webPageStory}\n        isConnected={isConnected}\n        lastPlaybackTimestamp={lastPlaybackTimestamp}\n        backgroundEmojiId={messageColorPeer?.color?.backgroundEmojiId}\n        shouldWarnAboutSvg={shouldWarnAboutSvg}\n        autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n        onAudioPlay={handleAudioPlay}\n        onMediaClick={handleMediaClick}\n        onDocumentClick={handleDocumentClick}\n        onCancelMediaTransfer={handleCancelUpload}\n      />\n    );\n  }\n\n  function renderInvertibleMediaContent(hasCustomAppendix: boolean) {\n    const content = (\n      <>\n        {isAlbum && observeIntersectionForLoading && (\n          <Album\n            album={album!}\n            albumLayout={albumLayout!}\n            observeIntersection={observeIntersectionForLoading}\n            isOwn={isOwn}\n            isProtected={isProtected}\n            hasCustomAppendix={hasCustomAppendix}\n            onMediaClick={handleAlbumMediaClick}\n          />\n        )}\n        {!isAlbum && photo && (\n          <Photo\n            messageText={text?.text}\n            photo={photo}\n            isOwn={isOwn}\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            uploadProgress={uploadProgress}\n            shouldAffectAppendix={hasCustomAppendix}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            theme={theme}\n            forcedWidth={contentWidth}\n            onClick={handlePhotoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n        {!isAlbum && video && !isRoundVideo && (\n          <Video\n            video={video}\n            isOwn={isOwn}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            forcedWidth={contentWidth}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoadMedia}\n            canAutoPlay={canAutoPlayMedia}\n            uploadProgress={uploadProgress}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            asForwarded={asForwarded}\n            lastPlaybackTimestamp={lastPlaybackTimestamp}\n            onClick={handleVideoMediaClick}\n            onCancelUpload={handleCancelUpload}\n          />\n        )}\n      </>\n    );\n\n    if (paidMedia) {\n      return (\n        <PaidMediaOverlay chatId={chatId} messageId={messageId} paidMedia={paidMedia} isOutgoing={isOwn}>\n          {content}\n        </PaidMediaOverlay>\n      );\n    }\n\n    return content;\n  }\n\n  function shouldRenderSenderName() {\n    const media = photo || video || location || paidMedia;\n    return !(isCustomShape && !viaBotId) && (\n      (withSenderName && (!media || hasTopicChip)) || asForwarded || viaBotId || forceSenderName\n    ) && !isInDocumentGroupNotFirst && !(hasMessageReply && isCustomShape);\n  }\n\n  function renderForwardTitle() {\n    return (\n      <span className=\"forward-title-container\">\n        {asForwarded && (\n          <Icon name={forwardInfo?.hiddenUserName ? 'forward' : 'share-filled'} />\n        )}\n        {asForwarded && (\n          <span className=\"forward-title\">\n            {lang('ForwardedFrom')}\n          </span>\n        )}\n      </span>\n    );\n  }\n\n  function renderSenderName(shouldSkipRenderForwardTitle:boolean = false, shouldSkipRenderAdminTitle: boolean = false) {\n    let senderTitle;\n    let senderColor;\n    if (senderPeer && !(isCustomShape && viaBotId)) {\n      senderTitle = getPeerTitle(lang, senderPeer);\n    } else if (forwardInfo?.hiddenUserName) {\n      senderTitle = forwardInfo.hiddenUserName;\n    } else if (storyData && originSender) {\n      senderTitle = getPeerTitle(lang, originSender!);\n    }\n    const senderEmojiStatus = senderPeer && 'emojiStatus' in senderPeer && senderPeer.emojiStatus;\n    const senderIsPremium = senderPeer && 'isPremium' in senderPeer && senderPeer.isPremium;\n\n    const shouldRenderForwardAvatar = asForwarded && senderPeer;\n    const hasBotSenderUsername = botSender?.usernames?.length;\n    return (\n      <div className=\"message-title\" dir=\"ltr\">\n        {(senderTitle || asForwarded) ? (\n          <span\n            className={buildClassName(\n              'message-title-name-container',\n              forwardInfo?.hiddenUserName ? 'sender-hidden' : 'interactive',\n              senderColor,\n            )}\n            dir=\"ltr\"\n          >\n            {!shouldSkipRenderForwardTitle && renderForwardTitle()}\n            <span className=\"message-title-name\">\n              {storyData && <Icon name=\"play-story\" />}\n              {shouldRenderForwardAvatar && (\n                <Avatar\n                  className=\"forward-avatar\"\n                  peer={senderPeer}\n                  size=\"micro\"\n                />\n              )}\n              <span\n                className=\"sender-title\"\n                onClick={handleSenderClick}\n              >\n                {senderTitle ? renderText(senderTitle) : (asForwarded ? NBSP : undefined)}\n              </span>\n              {!asForwarded && senderEmojiStatus && (\n                <CustomEmoji\n                  documentId={senderEmojiStatus.documentId}\n                  className=\"no-selection\"\n                  loopLimit={EMOJI_STATUS_LOOP_LIMIT}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                />\n              )}\n              {!asForwarded && !senderEmojiStatus && senderIsPremium && <StarIcon />}\n              {senderPeer?.fakeType && <FakeIcon fakeType={senderPeer.fakeType} />}\n            </span>\n          </span>\n        ) : !botSender ? (\n          NBSP\n        ) : undefined}\n        {botSender?.usernames?.length && (\n          <span className=\"interactive\">\n            <span className=\"via\">{lang('ViaBot')}</span>\n            <span\n              className=\"sender-title\"\n              onClick={handleViaBotClick}\n            >\n              {renderText(`@${botSender.usernames[0].username}`)}\n            </span>\n          </span>\n        )}\n        <div className=\"title-spacer\" />\n        {!shouldSkipRenderAdminTitle && !hasBotSenderUsername ? (forwardInfo?.isLinkedChannelPost ? (\n          <span className=\"admin-title\" dir=\"auto\">{lang('DiscussChannel')}</span>\n        ) : message.postAuthorTitle && isGroup && !asForwarded ? (\n          <span className=\"admin-title\" dir=\"auto\">{message.postAuthorTitle}</span>\n        ) : senderAdminMember && !asForwarded && !viaBotId ? (\n          <span className=\"admin-title\" dir=\"auto\">\n            {senderAdminMember.customTitle || lang(\n              senderAdminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin',\n            )}\n          </span>\n        ) : undefined) : undefined}\n        {canShowSenderBoosts && (\n          <span className=\"sender-boosts\" aria-hidden>\n            <Icon name={senderBoosts > 1 ? 'boosts' : 'boost'} />\n            {senderBoosts > 1 ? senderBoosts : undefined}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  const forwardAuthor = isGroup && asForwarded ? message.postAuthorTitle : undefined;\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={containerClassName}\n      data-message-id={messageId}\n      onCopy={isProtected ? stopEvent : undefined}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={isInDocumentGroupNotLast ? handleDocumentGroupMouseEnter : undefined}\n      onMouseMove={withQuickReactionButton ? handleMouseMove : undefined}\n      onMouseLeave={(withQuickReactionButton || isInDocumentGroupNotLast) ? handleMouseLeave : undefined}\n    >\n      <div\n        ref={bottomMarkerRef}\n        className=\"bottom-marker\"\n        data-message-id={messageId}\n        data-last-message-id={album ? album.messages[album.messages.length - 1].id : undefined}\n        data-album-main-id={album ? album.mainMessage.id : undefined}\n        data-has-unread-mention={message.hasUnreadMention || undefined}\n        data-has-unread-reaction={hasUnreadReaction || undefined}\n        data-is-pinned={isPinned || undefined}\n        data-should-update-views={message.viewsCount !== undefined}\n      />\n      {!isInDocumentGroup && (\n        <div className=\"message-select-control no-selection\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {isLastInDocumentGroup && (\n        <div\n          className={buildClassName(\n            'message-select-control group-select no-selection', isGroupSelected && 'is-selected',\n          )}\n          onClick={handleDocumentGroupSelectAll}\n        >\n          {isGroupSelected && (\n            <Icon name=\"select\" />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName('message-content-wrapper',\n          contentClassName.includes('text') && 'can-select-text',\n          contentClassName.includes('giveaway') && 'giveaway-result-content')}\n      >\n        <div\n          className={contentClassName}\n          style={style}\n          dir=\"auto\"\n        >\n          {asForwarded && !isInDocumentGroupNotFirst && (\n            <>\n              {shouldRenderSenderName() && renderSenderName()}\n              {forwardAuthor && <span className=\"admin-title\" dir=\"auto\">{forwardAuthor}</span>}\n            </>\n          )}\n          {renderContent()}\n          {!isInDocumentGroupNotLast && metaPosition === 'standalone' && !isStoryMention && renderReactionsAndMeta()}\n          {canShowActionButton && (\n            <div className={buildClassName(\n              'message-action-buttons',\n              isLoadingComments && 'message-action-buttons-shown',\n            )}\n            >\n              {withCommentButton && isCustomShape && (\n                <CommentButton\n                  threadInfo={repliesThreadInfo}\n                  disabled={noComments}\n                  isLoading={isLoadingComments}\n                  isCustomShape\n                  asActionButton\n                />\n              )}\n              {canForward && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel={lang('lng_context_forward_msg')}\n                  onClick={isLastInDocumentGroup ? handleGroupForward : handleForward}\n                >\n                  <Icon name=\"share-filled\" />\n                </Button>\n              )}\n              {canFocus && (\n                <Button\n                  className=\"message-action-button\"\n                  color=\"translucent-white\"\n                  round\n                  size=\"tiny\"\n                  ariaLabel=\"Focus message\"\n                  onClick={isPinnedList ? handleFocus : handleFocusForwarded}\n                >\n                  <Icon name=\"arrow-right\" />\n                </Button>\n              )}\n            </div>\n          )}\n          {withCommentButton && !(canShowActionButton && isCustomShape) && (\n            <CommentButton\n              threadInfo={repliesThreadInfo}\n              disabled={noComments}\n              isLoading={isLoadingComments}\n            />\n          )}\n          {withAppendix && <MessageAppendix isOwn={isOwn} />}\n          {withQuickReactionButton && quickReactionPosition === 'in-content' && renderQuickReactionButton()}\n        </div>\n        {message.inlineButtons && (\n          <InlineButtons message={message} onClick={clickBotInlineButton} />\n        )}\n        {reactionsPosition === 'outside' && !isStoryMention && (\n          <Reactions\n            message={reactionMessage!}\n            threadId={threadId}\n            isOutside\n            isCurrentUserPremium={isPremium}\n            maxWidth={reactionsMaxWidth}\n            observeIntersection={observeIntersectionForPlaying}\n            noRecentReactors={isChannel}\n            tags={tags}\n          />\n        )}\n      </div>\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          targetHref={contextMenuTarget?.matches('a[href]') ? (contextMenuTarget as HTMLAnchorElement).href : undefined}\n          message={message}\n          album={album}\n          messageListType={messageListType}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          repliesThreadInfo={repliesThreadInfo}\n          noReplies={noReplies}\n          detectedLanguage={detectedLanguage}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, ownProps): StateProps => {\n    const {\n      focusedMessage, forwardMessages, activeReactions, activeEmojiInteractions,\n      loadingThread,\n    } = selectTabState(global);\n    const {\n      message, album, withSenderName, withAvatar, threadId, messageListType, isLastInDocumentGroup, isFirstInGroup,\n    } = ownProps;\n    const {\n      id, chatId, viaBotId, isOutgoing, forwardInfo, transcriptionId, isPinned, viaBusinessBotId, effectId,\n    } = message;\n\n    const chat = selectChat(global, chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isSystemBotChat = isSystemBot(chatId);\n    const isAnonymousForwards = isAnonymousForwardsChat(chatId);\n    const isChannel = chat && isChatChannel(chat);\n    const isGroup = chat && isChatGroup(chat);\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const webPageStoryData = message.content.webPage?.story;\n    const webPageStory = webPageStoryData\n      ? selectPeerStory(global, webPageStoryData.peerId, webPageStoryData.id)\n      : undefined;\n\n    const isForwarding = forwardMessages.messageIds && forwardMessages.messageIds.includes(id);\n    const forceSenderName = !isChatWithSelf && isAnonymousOwnMessage(message);\n    const canShowSender = withSenderName || withAvatar || forceSenderName;\n    const sender = selectSender(global, message);\n    const originSender = selectForwardedSender(global, message);\n    const botSender = viaBotId ? selectUser(global, viaBotId) : undefined;\n    const senderAdminMember = sender?.id && isGroup\n      ? chatFullInfo?.adminMembersById?.[sender?.id]\n      : undefined;\n\n    const isThreadTop = message.id === threadId;\n\n    const { replyToMsgId, replyToPeerId, replyFrom } = getMessageReplyInfo(message) || {};\n    const { peerId: storyReplyPeerId, storyId: storyReplyId } = getStoryReplyInfo(message) || {};\n\n    const shouldHideReply = replyToMsgId && replyToMsgId === threadId;\n    const replyMessage = selectReplyMessage(global, message);\n    const forwardHeader = forwardInfo || replyFrom;\n    const replyMessageSender = replyMessage ? selectSender(global, replyMessage)\n      : forwardHeader && !isSystemBotChat && !isAnonymousForwards\n        ? selectSenderFromHeader(global, forwardHeader) : undefined;\n    const replyMessageForwardSender = replyMessage && selectForwardedSender(global, replyMessage);\n    const replyMessageChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n    const isReplyPrivate = !isSystemBotChat && !isAnonymousForwards && replyMessageChat\n      && !isChatPublic(replyMessageChat)\n      && (replyMessageChat.isNotJoined || replyMessageChat.isRestricted);\n    const isReplyToTopicStart = replyMessage?.content.action?.type === 'topicCreate';\n    const replyStory = storyReplyId && storyReplyPeerId\n      ? selectPeerStory(global, storyReplyPeerId, storyReplyId)\n      : undefined;\n    const storySender = storyReplyPeerId ? selectPeer(global, storyReplyPeerId) : undefined;\n\n    const uploadProgress = selectUploadProgress(global, message);\n    const isFocused = messageListType === 'thread' && (\n      album\n        ? album.messages.some((m) => selectIsMessageFocused(global, m, threadId))\n        : selectIsMessageFocused(global, message, threadId)\n    );\n\n    const {\n      direction: focusDirection, noHighlight: noFocusHighlight, isResizingContainer,\n      quote: focusedQuote, scrollTargetPosition,\n    } = (isFocused && focusedMessage) || {};\n\n    const middleSearch = selectCurrentMiddleSearch(global);\n    const highlight = middleSearch?.results?.query\n      && `${middleSearch.isHashtag ? '#' : ''}${middleSearch.results.query}`;\n\n    const singleEmoji = getMessageSingleRegularEmoji(message);\n    const animatedEmoji = singleEmoji && selectAnimatedEmoji(global, singleEmoji) ? singleEmoji : undefined;\n    const animatedCustomEmoji = getMessageSingleCustomEmoji(message);\n\n    let isSelected: boolean;\n    if (album?.messages) {\n      isSelected = album.messages.every(({ id: messageId }) => selectIsMessageSelected(global, messageId));\n    } else {\n      isSelected = selectIsMessageSelected(global, id);\n    }\n\n    const canReply = messageListType === 'thread' && selectCanReplyToMessage(global, message, threadId);\n    const activeDownloads = selectActiveDownloads(global);\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    const isDownloading = downloadableMedia && getIsDownloading(activeDownloads, downloadableMedia);\n\n    const repliesThreadInfo = selectThreadInfo(global, chatId, album?.commentsMessage?.id || id);\n\n    const isInDocumentGroup = Boolean(message.groupedId) && !message.isInAlbum;\n    const documentGroupFirstMessageId = isInDocumentGroup\n      ? selectMessageIdsByGroupId(global, chatId, message.groupedId!)![0]\n      : undefined;\n    const reactionMessage = isInDocumentGroup ? (\n      isLastInDocumentGroup ? selectChatMessage(global, chatId, documentGroupFirstMessageId!) : undefined\n    ) : message;\n\n    const hasUnreadReaction = chat?.unreadReactions?.includes(message.id);\n\n    const hasTopicChip = threadId === MAIN_THREAD_ID && chat?.isForum && isFirstInGroup;\n    const messageTopic = hasTopicChip ? selectTopicFromMessage(global, message) : undefined;\n\n    const chatTranslations = selectChatTranslations(global, chatId);\n\n    const requestedTranslationLanguage = selectRequestedMessageTranslationLanguage(global, chatId, message.id);\n    const requestedChatTranslationLanguage = selectRequestedChatTranslationLanguage(global, chatId);\n\n    const areTranslationsEnabled = IS_TRANSLATION_SUPPORTED && global.settings.byKey.canTranslate\n      && !requestedChatTranslationLanguage; // Stop separate language detection if chat translation is requested\n\n    const isConnected = global.connectionState === 'connectionStateReady';\n\n    const hasActiveReactions = Boolean(reactionMessage && activeReactions[getMessageKey(reactionMessage)]?.length);\n\n    const isPremium = selectIsCurrentUserPremium(global);\n    const senderBoosts = sender && selectIsChatWithSelf(global, sender.id)\n      ? (chatFullInfo?.boostsApplied ?? message.senderBoosts) : message.senderBoosts;\n\n    const chatLevel = chat?.boostLevel || 0;\n    const transcribeMinLevel = global.appConfig?.groupTranscribeLevelMin;\n    const canTranscribeVoice = isPremium || Boolean(transcribeMinLevel && chatLevel >= transcribeMinLevel);\n\n    const viaBusinessBot = viaBusinessBotId ? selectUser(global, viaBusinessBotId) : undefined;\n\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n\n    const poll = selectPollFromMessage(global, message);\n\n    const maxTimestamp = selectMessageTimestampableDuration(global, message);\n\n    const lastPlaybackTimestamp = selectMessageLastPlaybackTimestamp(global, chatId, message.id);\n\n    return {\n      theme: selectTheme(global),\n      forceSenderName,\n      sender,\n      canShowSender,\n      originSender,\n      botSender,\n      shouldHideReply: shouldHideReply || isReplyToTopicStart,\n      isThreadTop,\n      replyMessage,\n      replyMessageSender,\n      replyMessageForwardSender,\n      replyMessageChat,\n      replyStory,\n      isReplyPrivate,\n      storySender,\n      isInDocumentGroup,\n      isProtected: selectIsMessageProtected(global, message),\n      isChatProtected: selectIsChatProtected(global, chatId),\n      isFocused,\n      isForwarding,\n      reactionMessage,\n      isChatWithSelf,\n      isRepliesChat: isSystemBotChat,\n      isAnonymousForwards,\n      isChannel,\n      isGroup,\n      canReply,\n      highlight,\n      animatedEmoji,\n      animatedCustomEmoji,\n      isInSelectMode: selectIsInSelectMode(global),\n      isSelected,\n      isGroupSelected: (\n        Boolean(message.groupedId)\n        && !message.isInAlbum\n        && selectIsDocumentGroupSelected(global, chatId, message.groupedId)\n      ),\n      threadId,\n      isDownloading,\n      isPinnedList: messageListType === 'pinned',\n      isPinned,\n      canAutoLoadMedia: selectCanAutoLoadMedia(global, message),\n      canAutoPlayMedia: selectCanAutoPlayMedia(global, message),\n      autoLoadFileMaxSizeMb: global.settings.byKey.autoLoadFileMaxSizeMb,\n      shouldLoopStickers: selectShouldLoopStickers(global),\n      repliesThreadInfo,\n      availableReactions: global.reactions.availableReactions,\n      defaultReaction: isMessageLocal(message) || messageListType === 'scheduled'\n        ? undefined : selectDefaultReaction(global, chatId),\n      hasActiveReactions,\n      activeEmojiInteractions,\n      hasUnreadReaction,\n      isTranscribing: transcriptionId !== undefined && global.transcriptions[transcriptionId]?.isPending,\n      transcribedText: transcriptionId !== undefined ? global.transcriptions[transcriptionId]?.text : undefined,\n      isPremium,\n      senderAdminMember,\n      messageTopic,\n      hasTopicChip,\n      chatTranslations,\n      areTranslationsEnabled,\n      shouldDetectChatLanguage: selectShouldDetectChatLanguage(global, chatId),\n      requestedTranslationLanguage,\n      requestedChatTranslationLanguage,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      withAnimatedEffects: selectPerformanceSettingsValue(global, 'stickerEffects'),\n      webPageStory,\n      isConnected,\n      isLoadingComments: repliesThreadInfo?.isCommentsInfo\n        && loadingThread?.loadingChatId === repliesThreadInfo?.originChannelId\n        && loadingThread?.loadingMessageId === repliesThreadInfo?.originMessageId,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n      ...(isOutgoing && { outgoingStatus: selectOutgoingStatus(global, message, messageListType === 'scheduled') }),\n      ...(typeof uploadProgress === 'number' && { uploadProgress }),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n        isResizingContainer,\n        focusedQuote,\n        scrollTargetPosition,\n      }),\n      senderBoosts,\n      tags: global.savedReactionTags?.byKey,\n      canTranscribeVoice,\n      viaBusinessBot,\n      effect,\n      poll,\n      maxTimestamp,\n      lastPlaybackTimestamp,\n    };\n  },\n)(Message));\n","import { getActions } from '../../../../global';\n\nimport type {\n  ApiMessage, ApiPeer, ApiStory, ApiTopic, ApiUser,\n} from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IAlbum, ThreadId } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\nimport { MediaViewerOrigin } from '../../../../types';\n\nimport { getMessagePhoto, getMessageWebPagePhoto } from '../../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport { tryParseDeepLink } from '../../../../util/deepLinkParser';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function useInnerHandlers({\n  lang,\n  selectMessage,\n  message,\n  chatId,\n  threadId,\n  isInDocumentGroup,\n  asForwarded,\n  isScheduled,\n  album,\n  senderPeer,\n  botSender,\n  messageTopic,\n  isTranslatingChat,\n  story,\n  isReplyPrivate,\n  isRepliesChat,\n  isSavedMessages,\n  lastPlaybackTimestamp,\n}: {\n  lang: OldLangFn;\n  selectMessage: (e: React.MouseEvent<HTMLDivElement, MouseEvent>, groupedId?: string) => void;\n  message: ApiMessage;\n  chatId: string;\n  threadId: ThreadId;\n  isInDocumentGroup: boolean;\n  asForwarded?: boolean;\n  isScheduled?: boolean;\n  album?: IAlbum;\n  avatarPeer?: ApiPeer;\n  senderPeer?: ApiPeer;\n  botSender?: ApiUser;\n  messageTopic?: ApiTopic;\n  isTranslatingChat?: boolean;\n  story?: ApiStory;\n  isReplyPrivate?: boolean;\n  isRepliesChat?: boolean;\n  isSavedMessages?: boolean;\n  lastPlaybackTimestamp?: number;\n}) {\n  const {\n    openChat, showNotification, focusMessage, openMediaViewer, openAudioPlayer,\n    markMessagesRead, cancelUploadMedia, sendPollVote, openForwardMenu,\n    openChatLanguageModal, openThread, openStoryViewer, searchChatMediaMessages,\n  } = getActions();\n\n  const {\n    id: messageId, forwardInfo, groupedId, content: { paidMedia, video, webPage },\n  } = message;\n\n  const {\n    replyToMsgId, replyToPeerId, replyToTopId, isQuote, quoteText,\n  } = getMessageReplyInfo(message) || {};\n\n  const handleSenderClick = useLastCallback(() => {\n    if (!senderPeer) {\n      showNotification({ message: lang('HidAccount') });\n\n      return;\n    }\n\n    if (asForwarded && forwardInfo?.channelPostId) {\n      focusMessage({ chatId: senderPeer.id, messageId: forwardInfo.channelPostId });\n    } else {\n      openChat({ id: senderPeer.id });\n    }\n  });\n\n  const handleViaBotClick = useLastCallback(() => {\n    if (!botSender) {\n      return;\n    }\n\n    openChat({ id: botSender.id });\n  });\n\n  const handleReplyClick = useLastCallback((): void => {\n    if (!replyToMsgId || isReplyPrivate) {\n      showNotification({\n        message: isQuote ? lang('QuotePrivate') : lang('ReplyPrivate'),\n      });\n      return;\n    }\n\n    if (isRepliesChat && replyToPeerId && replyToTopId) {\n      openThread({\n        isComments: true,\n        originChannelId: replyToPeerId,\n        originMessageId: replyToTopId,\n        focusMessageId: replyToMsgId,\n      });\n      return;\n    }\n\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: isRepliesChat ? replyToTopId : threadId, // Open comments from Replies bot, otherwise, keep current thread\n      messageId: replyToMsgId,\n      replyMessageId: replyToPeerId ? undefined : messageId,\n      noForumTopicPanel: !replyToPeerId, // Open topic panel for cross-chat replies\n      ...(isQuote && { quote: quoteText?.text }),\n    });\n  });\n\n  const handleDocumentClick = useLastCallback((): void => {\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n    });\n  });\n\n  const openMediaViewerWithPhotoOrVideo = useLastCallback((withDynamicLoading: boolean): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n    if (withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    }\n\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage.url);\n\n    const videoContent = video || webPage?.video;\n    const webpageTimestamp = parsedLink && 'timestamp' in parsedLink ? parsedLink.timestamp : undefined;\n\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledInline : MediaViewerOrigin.Inline,\n      timestamp: lastPlaybackTimestamp || videoContent?.timestamp || webpageTimestamp,\n      withDynamicLoading,\n    });\n  });\n  const handlePhotoMediaClick = useLastCallback((): void => {\n    const withDynamicLoading = !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n  const handleVideoMediaClick = useLastCallback(() => {\n    const isGif = message.content?.video?.isGif;\n    const withDynamicLoading = !isGif && !isScheduled && !paidMedia;\n    openMediaViewerWithPhotoOrVideo(withDynamicLoading);\n  });\n\n  const handleMediaClick = useLastCallback((): void => {\n    const photo = getMessagePhoto(message) || getMessageWebPagePhoto(message);\n    if (photo) {\n      handlePhotoMediaClick();\n    }\n\n    handleVideoMediaClick();\n  });\n\n  const handleAudioPlay = useLastCallback((): void => {\n    openAudioPlayer({ chatId, messageId });\n  });\n\n  const handleAlbumMediaClick = useLastCallback((albumMessageId: number, albumIndex?: number): void => {\n    if (paidMedia && !paidMedia.isBought) return;\n\n    searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: messageId });\n    openMediaViewer({\n      chatId,\n      threadId,\n      messageId: albumMessageId,\n      mediaIndex: albumIndex,\n      origin: isScheduled ? MediaViewerOrigin.ScheduledAlbum : MediaViewerOrigin.Album,\n      withDynamicLoading: !paidMedia,\n    });\n  });\n\n  const handleReadMedia = useLastCallback((): void => {\n    markMessagesRead({ messageIds: [messageId] });\n  });\n\n  const handleCancelUpload = useLastCallback(() => {\n    cancelUploadMedia({ chatId, messageId });\n  });\n\n  const handleVoteSend = useLastCallback((options: string[]) => {\n    sendPollVote({ chatId, messageId, options });\n  });\n\n  const handleGroupForward = useLastCallback(() => {\n    openForwardMenu({ fromChatId: chatId, groupedId });\n  });\n\n  const handleForward = useLastCallback(() => {\n    if (album && album.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: chatId, messageIds: [messageId] });\n    }\n  });\n\n  const handleFocus = useLastCallback(() => {\n    focusMessage({\n      chatId, threadId: MAIN_THREAD_ID, messageId,\n    });\n  });\n\n  const handleFocusForwarded = useLastCallback(() => {\n    const originalChatId = (isSavedMessages && forwardInfo!.savedFromPeerId) || forwardInfo!.fromChatId!;\n\n    if (isInDocumentGroup) {\n      focusMessage({\n        chatId: originalChatId, groupedId, groupedChatId: chatId, messageId: forwardInfo!.fromMessageId!,\n      });\n      return;\n    }\n\n    if (replyToPeerId && replyToTopId) {\n      if (isRepliesChat) {\n        openThread({\n          isComments: true,\n          originChannelId: replyToPeerId,\n          originMessageId: replyToTopId,\n          focusMessageId: forwardInfo!.fromMessageId!,\n        });\n      } else {\n        focusMessage({\n          chatId: replyToPeerId,\n          threadId: replyToTopId,\n          messageId: forwardInfo!.fromMessageId!,\n        });\n      }\n    } else {\n      focusMessage({\n        chatId: originalChatId, messageId: forwardInfo!.fromMessageId!,\n      });\n    }\n  });\n\n  const selectWithGroupedId = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    selectMessage(e, groupedId);\n  });\n\n  const handleTranslationClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    openChatLanguageModal({ chatId, messageId: !isTranslatingChat ? messageId : undefined });\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n  });\n\n  const handleTopicChipClick = useLastCallback(() => {\n    if (!messageTopic) return;\n    focusMessage({\n      chatId: replyToPeerId || chatId,\n      threadId: messageTopic.id,\n      messageId,\n    });\n  });\n\n  const handleStoryClick = useLastCallback(() => {\n    if (!story) return;\n    openStoryViewer({\n      peerId: story.peerId,\n      storyId: story.id,\n      isSingleStory: true,\n    });\n  });\n\n  return {\n    handleSenderClick,\n    handleViaBotClick,\n    handleReplyClick,\n    handleDocumentClick,\n    handleMediaClick,\n    handleAudioPlay,\n    handleAlbumMediaClick,\n    handlePhotoMediaClick,\n    handleVideoMediaClick,\n    handleMetaClick: selectWithGroupedId,\n    handleTranslationClick,\n    handleOpenThread,\n    handleReadMedia,\n    handleCancelUpload,\n    handleVoteSend,\n    handleGroupForward,\n    handleForward,\n    handleFocus,\n    handleFocusForwarded,\n    handleDocumentGroupSelectAll: selectWithGroupedId,\n    handleTopicChipClick,\n    handleStoryClick,\n  };\n}\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport { detectLanguage } from '../util/languageDetection';\n\nexport default function useTextLanguage(text?: string, isDisabled?: boolean, getIsReady?: Signal<boolean>) {\n  const [language, setLanguage] = useState<string | undefined>();\n\n  useEffect(() => {\n    if (isDisabled || (getIsReady && !getIsReady())) return;\n\n    if (text) {\n      detectLanguage(text).then(setLanguage);\n    } else {\n      setLanguage(undefined);\n    }\n  }, [isDisabled, text, getIsReady]);\n\n  return language;\n}\n","import type { ApiMessage, ApiPoll } from '../../../../api/types';\nimport type { IAlbum } from '../../../../types';\n\nimport { EMOJI_SIZES, MESSAGE_CONTENT_CLASS_NAME } from '../../../../config';\nimport { getMessageContent } from '../../../../global/helpers';\nimport getSingularPaidMedia from './getSingularPaidMedia';\n\nexport function buildContentClassName(\n  message: ApiMessage,\n  album?: IAlbum,\n  {\n    poll,\n    hasSubheader,\n    isCustomShape,\n    isLastInGroup,\n    asForwarded,\n    hasThread,\n    forceSenderName,\n    hasCommentCounter,\n    hasCommentButton,\n    hasActionButton,\n    hasReactions,\n    isGeoLiveActive,\n    withVoiceTranscription,\n    peerColorClass,\n    hasOutsideReactions,\n  }: {\n    poll?: ApiPoll;\n    hasSubheader?: boolean;\n    isCustomShape?: boolean | number;\n    isLastInGroup?: boolean;\n    asForwarded?: boolean;\n    hasThread?: boolean;\n    forceSenderName?: boolean;\n    hasCommentCounter?: boolean;\n    hasCommentButton?: boolean;\n    hasActionButton?: boolean;\n    hasReactions?: boolean;\n    isGeoLiveActive?: boolean;\n    withVoiceTranscription?: boolean;\n    peerColorClass?: string;\n    hasOutsideReactions?: boolean;\n  } = {},\n) {\n  const { paidMedia } = getMessageContent(message);\n  const { photo: paidMediaPhoto, video: paidMediaVideo } = getSingularPaidMedia(paidMedia);\n\n  const content = getMessageContent(message);\n  const {\n    photo = paidMediaPhoto, video = paidMediaVideo,\n    audio, voice, document, webPage, contact, location, invoice, storyData,\n    giveaway, giveawayResults,\n  } = content;\n  const text = album?.hasMultipleCaptions ? undefined : getMessageContent(album?.captionMessage || message).text;\n  const hasFactCheck = Boolean(message.factCheck?.text);\n\n  const isRoundVideo = video?.mediaType === 'video' && video.isRound;\n  const isInvertedMedia = message.isInvertedMedia;\n  const isInvertibleMedia = photo || (video && !isRoundVideo) || album || webPage;\n\n  const classNames = [MESSAGE_CONTENT_CLASS_NAME];\n  const isMedia = storyData || photo || video || location || invoice?.extendedMedia || paidMedia;\n  const hasText = text || location?.mediaType === 'venue' || isGeoLiveActive || hasFactCheck;\n  const isMediaWithNoText = isMedia && !hasText;\n  const hasInlineKeyboard = Boolean(message.inlineButtons);\n  const isViaBot = Boolean(message.viaBotId);\n\n  const hasFooter = (() => {\n    if (isInvertedMedia && isInvertibleMedia) {\n      if (hasReactions && !hasOutsideReactions) return true;\n      if (hasFactCheck) return true;\n      if (webPage && hasText) return true;\n      return false;\n    }\n    return hasText;\n  })();\n\n  if (peerColorClass) {\n    classNames.push(peerColorClass);\n  }\n\n  if (!isMedia && message.emojiOnlyCount) {\n    classNames.push('emoji-only');\n    if (message.emojiOnlyCount <= EMOJI_SIZES) {\n      classNames.push(`emoji-only-${message.emojiOnlyCount}`);\n    }\n  } else if (hasText) {\n    classNames.push('text');\n  } else {\n    classNames.push('no-text');\n  }\n\n  if (!Object.keys(content).length) {\n    classNames.push('unsupported');\n  }\n\n  if (hasActionButton) {\n    classNames.push('has-action-button');\n  }\n\n  if (isCustomShape) {\n    classNames.push('custom-shape');\n\n    if (isRoundVideo) {\n      classNames.push('round');\n    }\n\n    if (hasCommentCounter) {\n      classNames.push('has-comment-counter');\n    }\n  }\n  if (isMedia && !withVoiceTranscription) {\n    classNames.push('media');\n  } else if (video) {\n    classNames.push('video');\n  } else if (audio) {\n    classNames.push('audio');\n  } else if (voice) {\n    classNames.push('voice');\n    if (withVoiceTranscription) {\n      classNames.push('with-voice-transcription');\n    }\n  } else if (document) {\n    classNames.push('document');\n  } else if (contact) {\n    classNames.push('contact');\n  } else if (poll) {\n    classNames.push('poll');\n  } else if (giveaway || giveawayResults) {\n    classNames.push('giveaway');\n  } else if (webPage) {\n    classNames.push('web-page');\n\n    if (webPage.photo || webPage.video) {\n      classNames.push('media');\n    }\n\n    if (webPage.document) {\n      classNames.push('document');\n    }\n\n    if (webPage.gift) {\n      classNames.push('gift');\n    }\n  }\n\n  if (invoice && !invoice.extendedMedia) {\n    classNames.push('invoice');\n  }\n\n  if (storyData) {\n    classNames.push('story');\n  }\n\n  if (asForwarded) {\n    classNames.push('is-forwarded');\n  }\n\n  if (hasSubheader) {\n    classNames.push('has-subheader');\n  }\n\n  if (hasThread) {\n    classNames.push('has-replies');\n  }\n\n  if (hasReactions) {\n    classNames.push('has-reactions');\n  }\n\n  if (hasOutsideReactions) {\n    classNames.push('has-outside-reactions');\n  }\n\n  if (isViaBot) {\n    classNames.push('is-via-bot');\n  }\n\n  if (forceSenderName) {\n    classNames.push('force-sender-name');\n  }\n\n  if (!isCustomShape) {\n    classNames.push('has-shadow');\n\n    if (isMedia && hasThread) {\n      classNames.push('has-background');\n    }\n\n    if (hasSubheader || asForwarded || isViaBot || !isMediaWithNoText\n      || forceSenderName || hasFactCheck || withVoiceTranscription) {\n      classNames.push('has-solid-background');\n    }\n\n    if (hasFactCheck) {\n      classNames.push('has-fact-check');\n    }\n\n    if (isLastInGroup && !hasInlineKeyboard && (photo || !isMediaWithNoText || hasCommentButton)) {\n      classNames.push('has-appendix');\n    }\n  }\n\n  if (isInvertibleMedia && isInvertedMedia) {\n    classNames.push('is-inverted-media');\n  }\n\n  if (hasFooter) {\n    classNames.push('has-footer');\n  } else {\n    classNames.push('no-footer');\n  }\n\n  return classNames.join(' ');\n}\n","import React from '../../../lib/teact/teact';\n\ninterface OwnProps {\n  isOwn?: boolean;\n}\n\nfunction MessageAppendix({ isOwn } : OwnProps) {\n  const path = isOwn\n    ? 'M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z'\n    : 'M3 17h6V0c-.193 2.84-.876 5.767-2.05 8.782-.904 2.325-2.446 4.485-4.625 6.48A1 1 0 003 17z';\n  return (\n    <svg width=\"9\" height=\"20\" className=\"svg-appendix\">\n      <defs>\n        <filter x=\"-50%\" y=\"-14.7%\" width=\"200%\" height=\"141.2%\" filterUnits=\"objectBoundingBox\" id=\"messageAppendix\">\n          <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n          <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n          <feColorMatrix\n            values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n            in=\"shadowBlurOuter1\"\n          />\n        </filter>\n      </defs>\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path d={path} fill=\"#000\" filter=\"url(#messageAppendix)\" />\n        <path d={path} fill={isOwn ? '#EEFFDE' : 'FFF'} className=\"corner\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default MessageAppendix;\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n  const isMediaUnread = message.isMediaUnread;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && isActivated) {\n      onReadMedia();\n    }\n  }, [isActivated, isMediaUnread, onReadMedia]);\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div\n          className={buildClassName(\n            'message-media-duration', isMediaUnread && 'unread',\n          )}\n        >\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  lastPlaybackTimestamp?: number;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  lastPlaybackTimestamp,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n      {Boolean(lastPlaybackTimestamp) && (\n        <div\n          className=\"message-media-last-progress\"\n          style={`--_progress: ${Math.floor((lastPlaybackTimestamp / duration) * 100)}%`}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LaOdPURl\",\"backgroundWrapper\":\"zDnMa37m\",\"background\":\"EdXfeKWY\",\"stickerWrapper\":\"o_DYZEMV\"};","import React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiStarGiftUnique } from '../../../api/types';\n\nimport { getGiftAttributes } from '../../common/helpers/gifts';\n\nimport { type ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport StickerView from '../../common/StickerView';\n\nimport styles from './WebPageUniqueGift.module.scss';\n\ntype OwnProps = {\n  gift: ApiStarGiftUnique;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPageUniqueGift = ({\n  gift,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const stickerRef = useRef<HTMLDivElement>(null);\n  const {\n    backdrop, model, pattern,\n  } = getGiftAttributes(gift)!;\n\n  const backgroundColors = [backdrop!.centerColor, backdrop!.edgeColor];\n\n  return (\n    <div\n      className={styles.root}\n      onClick={onClick}\n    >\n      <div className={styles.backgroundWrapper}>\n        <RadialPatternBackground\n          className={styles.background}\n          backgroundColors={backgroundColors}\n          patternColor={backdrop!.patternColor}\n          patternIcon={pattern!.sticker}\n        />\n      </div>\n      <div ref={stickerRef} className={styles.stickerWrapper}>\n        <StickerView\n          containerRef={stickerRef}\n          sticker={model!.sticker}\n          size={STAR_GIFT_STICKER_SIZE}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n          observeIntersectionForLoading={observeIntersectionForLoading}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WebPageUniqueGift);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { tryParseDeepLink } from '../../../util/deepLinkParser';\nimport trimText from '../../../util/trimText';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\nimport WebPageUniqueGift from './WebPageUniqueGift';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  lastPlaybackTimestamp?: number;\n  isEditing?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onDocumentClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  lastPlaybackTimestamp,\n  isEditing,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onMediaClick,\n  onDocumentClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, undefined, !hasCustomColor);\n\n  const linkTimestamp = useMemo(() => {\n    const parsedLink = webPage?.url && tryParseDeepLink(webPage?.url);\n    if (!parsedLink || !('timestamp' in parsedLink)) return undefined;\n    return parsedLink.timestamp;\n  }, [webPage?.url]);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          <WebPageUniqueGift\n            gift={webPage.gift!}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            onClick={handleOpenTelegramLink}\n          />\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            lastPlaybackTimestamp={lastPlaybackTimestamp || linkTimestamp}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={onDocumentClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n\n            callbacks.delete(cb);\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n\n          callbacks.delete(cb);\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description' | 'emoticon'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: { text: action.payload },\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","_ref3","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","_ref","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","_ref2","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","arguments","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","_ref5","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","selection","getSelection","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","dispatchEvent","Event","bubbles","requestNextMutation","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","useDraft","resetComposer","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","_ref4","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","shouldPreserveInput","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","lastChild","textLength","range","createRange","setStart","setEnd","removeAllRanges","addRange","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","ComposerEmbeddedMessage","WebPagePreview","BotMenuButton","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","AttachMenu","BotKeyboardMenu","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","DEFAULT_TEXT","description","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","emojiStatusSlug","slug","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","openUniqueGiftBySlug","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","ProfilePhoto","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","Media","SafeLink","NBSP","EmbeddedMessage","forwardSender","noUserColors","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","PeerColorWrapper","emojiIconClassName","shouldReset","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","asPreview","emojiSize","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","getStickerMediaHash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","containerRef","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","dpr","useDevicePixelRatio","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","UserBirthday","Switcher","inactive","BusinessHours","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","ChatCallStatus","LastMessageMeta","hasMiniApp","DeleteChatModal","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","root","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","useResizeObserver","entry","borderBoxSize","blockSize","contentRect","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","handleKeyDown","IS_MAC_OS","metaKey","ctrlKey","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","container","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","UnconfirmedSession","Archive","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","EmptyFolder","ICON_SIZE","canManageTopics","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","GroupChatInfo","HeaderActions","canExpandActions","isForForum","GroupCallTopPane","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","Topic","renderTopics","GENERAL_TOPIC_ID","EmptyForum","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","opacity","ANIMATION_END_DELAY","ChatForumLastMessage","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","AttachBotIcon","shortName","isDisclaimerNeeded","withPortal","CustomSend","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","handleResize","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","DropTarget","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","customColor","useDynamicColorListener","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","customEmoji","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","isLottie","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","then","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onChange","onKeyDown","isComposing","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","preloadImage","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","parentNode","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterPeersByQuery","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","getSingularPaidMedia","extendedMedia","singularMedia","AlbumRectPart","Top","Bottom","accumulate","initValue","accumulator","calculateContainerSize","layout","dimensions","sides","calculateAlbumLayout","album","ratios","messages","isSingleMessage","paidMedia","getMessageContent","calculateMediaDimensions","getRatios","isPaidMedia","proportions","ratio","getProportions","averageRatio","getAverageRatio","albumCount","forceCalc","maxWidth","getAvailableWidth","params","minWidth","spacing","originalRatios","clamp","cropRatios","attempts","pushAttempt","lineCounts","heights","currentCount","multiHeight","attemptCount","sum","first","second","third","fourth","optimalAttempt","optimalDiff","lineCount","totalHeight","bad1","bad2","line","optimalCounts","optimalHeights","rowCount","colCount","lineHeight","col","layoutWithComplexLayouter","layoutTwoTopBottom","layoutTwoLeftRightEqual","minimalWidth","secondWidth","firstWidth","layoutTwoLeftRight","layoutTwo","firstHeight","thirdHeight","secondHeight","rightWidth","leftWidth","layoutThreeLeftAndOther","thirdWidth","layoutThreeTopAndOther","layoutThree","w","h0","h","w0","w2","w1","h1","layoutFourTopAndOther","h2","layoutFourLeftAndOther","layoutFour","containerStyle","worker","initializationDeferred","Deferred","IS_TRANSLATION_SUPPORTED","createConnector","Worker","CHAT_STATS","throttledMakeChatDecision","throttle","updateChatDetectedLanguage","chatStats","messagesChecked","translatableCount","detectableCount","languageOccurrences","isTranslatable","occurrences","QUICK_REACTION_AREA_WIDTH","QUICK_REACTION_AREA_HEIGHT","GROUP_MESSAGE_HOVER_ATTRIBUTE","useOuterHandlers","selectMessage","isInSelectMode","canReply","isContextMenuShown","quickReactionRef","shouldHandleMouseLeave","getIsMessageListReady","sendDefaultReaction","isQuickReactionVisible","markQuickReactionVisible","unmarkQuickReactionVisible","isSwiped","markSwiped","unmarkSwiped","doubleTapTimeoutRef","handleMouseMove","quickReactionContainer","quickReactionX","quickReactionWidth","quickReactionY","quickReactionHeight","isVisibleX","isVisibleY","excludedClosestSelector","preventMessageInputBlur","clearInterval","contains","getIsKeyboardVisible","handleTap","handleDoubleClick","handleContentDoubleClick","handleSendQuickReaction","lastGroupElement","getLastElementInDocumentGroup","handleDocumentGroupMouseLeave","handleDocumentGroupMouseEnter","nextElementSibling","isFullStory","isExpiredStory","isVideoStory","pictogramUrl","handleFastClick","peerColor","getTopicColorCssVariable","blankSrc","withSelectControl","WrappedComponent","ownProps","clickArg","noSelectControls","selectIsMessageSelected","toggleMessageSelection","handleMessageSelect","withShift","newProps","dims","PhotoWithSelect","Photo","VideoWithSelect","Video","activeDownloads","selectActiveDownloads","uploadsByKey","fileUploads","byMessageKey","hasCustomAppendix","albumLayout","cancelUploadMedia","mainMessage","mediaCount","handlePaidMediaClick","handleAlbumMessageClick","handleCancelUpload","containerWidth","containerHeight","renderingPaidMedia","paidPhotoOrPreview","paidVideoOrPreview","fileUpload","getMessageKey","selectCanAutoLoadMedia","canAutoPlay","selectCanAutoPlayMedia","shouldAffectAppendix","mediaType","getIsDownloading","useAnimatedEmoji","soundId","activeEmojiInteractions","preferredSize","interactWithAnimatedEmoji","sendEmojiInteraction","sendWatchingEmojiInteraction","audioRef","soundMediaData","buildStyle","IS_ELECTRON","interactions","startedInteractions","sendInteractionBunch","Audio","startSize","isReversed","performance","interactionMessageId","customEmojiId","selectAnimatedEmojiEffect","selectAnimatedEmojiSound","noPlay","getCustomEmojiSize","LIKE_STICKER_ID","isBig","withSharedAnimation","forceLoadPreview","quality","noLoad","forcePreview","isCustomShape","asActionButton","shouldRenderLoading","useAsyncRendering","originMessageId","recentReplierIds","originChannelId","isComments","recentRepliers","hasUnread","commentsText","getContactName","contact","firstName","lastName","openAddContactDialog","isRegistered","canAddContact","getCanAddContact","handleOpenChat","handleAddContact","ContextMenuContainer","COLOR","factCheck","isToggleDisabled","cutoutRef","isCollapsible","setIsCollapsed","useCollapsibleLines","countryLocalized","countryCode","canExpand","handleExpand","handleToggle","prev","Separator","canAutoLoadMedia","game","getGamePreviewPhotoHash","getGamePreviewVideoHash","videoBlobUrl","handleGameClick","inlineButtons","giveaway","channelIds","giftSticker","selectGiftStickerForDuration","months","isLoadingInfo","giveawayInfo","setGiveawayInfo","giveawayResults","isResults","untilDate","prizeDescription","stars","quantity","winnersCount","hasEnded","translatedNames","countries","isoToEmoji","handlePeerClick","channelId","handleShowInfoClick","callApi","handleCloseInfo","giveawayInfoTitle","AnimatedIconWithPreview","PartyPopper","winnerIds","PeerChip","withPeerColors","renderGiveawayResultsDescription","formatDateTimeToString","renderGiveawayDescription","isOnlyConfirm","isResultsInfo","isApiPeerChat","endDate","formatDateAtTime","otherChannelsCount","otherChannelsString","isSeveral","firstKey","giveawayDuration","firstParagraph","additionalPrizes","secondKey","secondParagraph","activatedCount","isRefunded","isWinner","lastParagraph","disallowedCountry","adminDisallowedChatId","disallowedChat","disallowedChatTitle","joinedTooEarlyDate","isParticipating","renderGiveawayInfo","RE_TME_LINK","renderIcon","forcedWidth","invoice","getMessageInvoice","amount","currency","isTest","photoUrl","getWebDocumentHash","withBlurredBackground","useBlurredMediaThumbRef","prevShouldAffectAppendix","contentEl","MESSAGE_CONTENT_SELECTOR","getCustomAppendixBg","appendixBg","CUSTOM_APPENDIX_ATTRIBUTE","crossOrigin","forceAspectRatio","formatCurrency","openInvoice","loadExtendedMedia","refreshExtendedMedia","isExtendedMedia","spoiler","buy","lock","formatCurrencyAsString","TIMER_CIRCUMFERENCE","TIMER_RADIUS","PI","MOVE_THRESHOLD","PinSvg","cx","cy","countdownRef","location","getMessageLocation","serverTime","isGeoLiveExpired","secondsBeforeEnd","period","point","setPoint","shouldRenderText","prevMediaBlobUrl","mapBlobUrl","accuracyRadiusPx","accuracyRadius","lat","getMetersPerPixel","updateCountdown","countdownEl","svgEl","lastElementChild","timerEl","firstElementChild","timeLeft","strokeDashOffset","formatCountdownShort","long","pinClassName","heading","getVenueColor","venueType","iconSrc","getVenueIconUrl","mapPin","renderPin","renderOverlay","formatLastUpdated","editDate","renderInfo","signature","withReactionOffset","repliesThreadInfo","renderQuickReactionButton","noReplies","isTranslated","withFullDate","onTranslationClick","onEffectClick","onOpenThread","markActivated","handleImportedClick","dateTitle","createDateTime","timeFormat","editDateTime","isEdited","forwardedDateTime","savedDate","viewsTitle","viewsCount","pluralValue","forwardsCount","repliesTitle","time","isImported","isVideoProcessingPending","phoneCall","reason","isMissed","isCancelled","handleCall","formattedDuration","formatTimeDuration","timeFormatted","getCallMessageKey","children","isClickable","isBought","starsAmount","formatStarsAsIcon","getPercentage","total","toFixed","answer","voteResults","totalVoters","maxVotersCount","correctResults","option","correctAnswer","showIcon","isChosen","answerPercent","votersCount","finalPercent","setFinalPercent","lineWidth","isAnimationDoesNotStart","lineStyle","onSendVote","loadMessage","openPollResults","summary","isSubmitting","setIsSubmitting","chosenOptions","setChosenOptions","wasSubmitted","setWasSubmitted","closePeriod","setClosePeriod","closed","closeDate","timerCircleRef","hasVoted","canVote","canViewResult","isPublic","isMultiple","multipleChoice","recentVoterIds","isCorrect","answers","hidden","quiz","chosen","timer","recentVoters","handleRadioChange","handleCheckboxChange","handleVoteClick","handleViewResultsClick","showSolution","localId","solution","solutionEntities","question","getPollTypeString","CheckboxGroup","loadingOptions","isRound","RadioGroup","loadingOption","PollOption","getReadableVotersCount","withEffect","onStopEffect","effectRef","hasEffect","isMirrored","IS_WEBM_SUPPORTED","canLoad","mediaHashEffect","effectBlobUrl","isPlayingEffect","startPlayingEffect","stopPlayingEffect","handleEffectEnded","shouldRenderEffect","useOverlayPosition","anchorRef","overlayRef","openModal","isMemojiSticker","getStickerDimensions","fullMediaHash","fullMediaClassName","AnimatedSticker","onEnded","connectionState","BaseStory","lastReadId","selectPeerStories","targetUser","thumbUrl","QUICK_REACTION_SIZE","EXTRA_SPACE_FOR_REACTIONS","focusedMessage","activeReactions","loadingThread","withSenderName","isLastInDocumentGroup","isFirstInGroup","viaBotId","transcriptionId","viaBusinessBotId","isGroup","webPageStoryData","webPageStory","forceSenderName","isAnonymousOwnMessage","canShowSender","originSender","botSender","senderAdminMember","adminMembersById","isThreadTop","getMessageReplyInfo","storyReplyPeerId","storyReplyId","getStoryReplyInfo","shouldHideReply","replyMessage","selectReplyMessage","forwardHeader","replyMessageSender","selectSenderFromHeader","replyMessageForwardSender","replyMessageChat","isReplyPrivate","isChatPublic","replyStory","storySender","selectUploadProgress","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","isResizingContainer","quote","focusedQuote","scrollTargetPosition","middleSearch","selectCurrentMiddleSearch","highlight","isHashtag","getMessageSingleRegularEmoji","animatedCustomEmoji","getMessageSingleCustomEmoji","every","selectCanReplyToMessage","downloadableMedia","getMessageDownloadableMedia","commentsMessage","isInDocumentGroup","documentGroupFirstMessageId","selectMessageIdsByGroupId","reactionMessage","hasUnreadReaction","unreadReactions","hasTopicChip","messageTopic","selectChatTranslations","requestedTranslationLanguage","selectRequestedMessageTranslationLanguage","areTranslationsEnabled","hasActiveReactions","senderBoosts","boostsApplied","chatLevel","boostLevel","transcribeMinLevel","appConfig","groupTranscribeLevelMin","canTranscribeVoice","viaBusinessBot","selectPollFromMessage","maxTimestamp","selectMessageTimestampableDuration","lastPlaybackTimestamp","selectMessageLastPlaybackTimestamp","selectIsMessageProtected","isChatProtected","selectIsChatProtected","isGroupSelected","selectIsDocumentGroupSelected","isPinnedList","canAutoPlayMedia","shouldLoopStickers","selectShouldLoopStickers","defaultReaction","selectDefaultReaction","transcriptions","isPending","transcribedText","shouldDetectChatLanguage","selectShouldDetectChatLanguage","hasLinkedChat","linkedChatId","withAnimatedEffects","isLoadingComments","isCommentsInfo","loadingChatId","loadingMessageId","tags","savedReactionTags","observeIntersectionForBottom","noComments","appearanceOrder","isJustAdded","isLastInGroup","isFirstInDocumentGroup","isLastInList","memoFirstUnreadIdRef","onIntersectPinnedMessage","disableContextMenuHint","animateUnreadReaction","markMentionsRead","bottomMarkerRef","setTranscriptionHidden","isPlayingSnapAnimation","setIsPlayingSnapAnimation","isPlayingDeleteAnimation","setIsPlayingDeleteAnimation","requestEffect","hideEffect","contextMenuTarget","noAppearanceAnimation","markShown","MESSAGE_APPEARANCE_DELAY","useShowTransition","noMountTransition","viewportPinnedIdsToRemove","hasMessageReply","isReplyToMessage","paidMediaPhoto","paidMediaVideo","messageReplyInfo","storyReplyInfo","withVoiceTranscription","hasStoryReply","hasThread","getMessageCustomShape","hasAnimatedEmoji","hasReactions","areReactionsEmpty","asForwarded","isLinkedChannelPost","isMention","canShowSenderBoosts","isStoryMention","isAlbum","msg","isInDocumentGroupNotFirst","isInDocumentGroupNotLast","canShowActionButton","canForward","isForwardingAllowed","canFocus","fromMessageId","hasFactCheck","hasForwardedCustomShape","hasSubheader","childMessageIds","avatarPeer","messageColorPeer","senderPeer","handleSenderClick","handleViaBotClick","handleReplyClick","handleMediaClick","handleDocumentClick","handleAudioPlay","handleAlbumMediaClick","handlePhotoMediaClick","handleVideoMediaClick","handleMetaClick","handleTranslationClick","handleOpenThread","handleReadMedia","handleVoteSend","handleGroupForward","handleForward","handleFocus","handleFocusForwarded","handleDocumentGroupSelectAll","handleTopicChipClick","handleStoryClick","isTranslatingChat","openAudioPlayer","markMessagesRead","sendPollVote","openForwardMenu","searchChatMediaMessages","replyToTopId","channelPostId","focusMessageId","replyMessageId","ScheduledInline","openMediaViewerWithPhotoOrVideo","withDynamicLoading","currentMediaMessageId","videoContent","webpageTimestamp","albumMessageId","albumIndex","ScheduledAlbum","Album","originalChatId","savedFromPeerId","groupedChatId","selectWithGroupedId","useInnerHandlers","handleEffectClick","isPartialAlbumDelete","isDeleting","textMessage","hasMultipleCaptions","captionMessage","hasTextContent","hasMessageText","containerClassName","hasUnreadMention","getIsReady","setLanguage","threshold","promise","request","detectLanguage","useTextLanguage","LimitedMap","previousMetadata","processMessageMetadata","useDetectChatLanguage","isTranslationPending","previousTranslatedText","currentTranslatedText","isMediaWithCommentButton","withCommentButton","withQuickReactionButton","hasOutsideReactions","hasCommentCounter","hasCommentButton","hasActionButton","isGeoLiveActive","peerColorClass","isInvertibleMedia","classNames","MESSAGE_CONTENT_CLASS_NAME","isMedia","isMediaWithNoText","hasInlineKeyboard","isViaBot","hasFooter","emojiOnlyCount","EMOJI_SIZES","gift","buildContentClassName","withAppendix","metaPosition","reactionsPosition","quickReactionPosition","useFocusMessage","viaBusinessBotTitle","canShowPostAuthor","postAuthorTitle","useMessageResizeObserver","bottomMarker","isElementInViewport","unreadMentionIds","extraPadding","sizeCalculations","calculatedWidth","contentWidth","reactionsMaxWidth","noMediaCorners","previewWidth","previewHeight","calculateDimensionsForMessageMedia","fromOwnMessage","MIN_MEDIA_WIDTH_WITH_TEXT","getMinMediaWidth","renderMessageText","isForAnimation","MessageText","messageOrStory","canBeEmpty","ReactionStaticEmoji","renderReactionsAndMeta","meta","MessageMeta","Reactions","metaChildren","noRecentReactors","renderWebPage","backgroundEmojiId","onAudioPlay","onDocumentClick","onCancelMediaTransfer","renderInvertibleMediaContent","messageText","PaidMediaOverlay","shouldRenderSenderName","renderForwardTitle","renderSenderName","shouldSkipRenderForwardTitle","shouldSkipRenderAdminTitle","senderEmojiStatus","senderIsPremium","shouldRenderForwardAvatar","hasBotSenderUsername","senderColor","EMOJI_STATUS_LOOP_LIMIT","fakeType","FakeIcon","forwardAuthor","onCopy","onDoubleClick","onMouseMove","textContentClass","shouldReadMedia","TopicChip","EmbeddedStory","Sticker","AnimatedCustomEmoji","AnimatedEmoji","MessagePhoneCall","RoundVideo","Document","Story","StoryMention","Contact","Poll","Giveaway","Game","InvoiceMediaPreview","footerClass","hasContentAfterText","isMetaInText","FactCheck","renderInvertedMediaContent","Invoice","Location","CommentButton","MessageAppendix","InlineButtons","isOutside","targetHref","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","isForMessageEffect","effectClassName","isInWebPage","isPaidPreview","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","isSmall","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","stopPrevious","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","SponsoredMessageContextMenu","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","previewMediaHash","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","stickerRef","backdrop","model","pattern","getGiftAttributes","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","openUrl","openTelegramLink","stickersRef","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","linkTimestamp","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","EmojiIconBackground","emojiDocumentId","WebPageUniqueGift","shouldSkipModal","isEmoji","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","selectCurrentChat","deleteChatMember","handleDeleteChatMember","textParts","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","integerUsdPart","decimalUsdPart","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","change","isChangeNegative","renderOverviewItemValue","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","drawImage","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","isArray","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","effectSize","shouldPause","restrictedEmoji","selectRestrictedEmoji","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","handleMediaAreaClick","MediaAreaSuggestedReaction","MediaAreaWeather","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","adminId","selectCanInviteToActiveGroupCall","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","DEFAULT_THRESHOLD","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","_len","_key","postMessageOnTickEnd","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","parseMessageKey","splitTrackId","messageKey","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","LUMA_THRESHOLD","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","fillRect","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","globalCompositeOperation","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","providerUrl","cos","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setStartAfter","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","cloneContents","caretRange","endContainer","endOffset","Node","TEXT_NODE","removeAllSelections","fileSelector","accept","noMultiple","onchange"],"sourceRoot":""}