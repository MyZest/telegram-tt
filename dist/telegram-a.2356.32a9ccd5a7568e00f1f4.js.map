{"version":3,"file":"telegram-a.2356.32a9ccd5a7568e00f1f4.js","mappings":"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","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/middle/message/helpers/getSelectionAsFormattedText.ts","webpack://telegram-t/./src/components/common/PinMessageModal.async.tsx","webpack://telegram-t/./src/components/middle/message/helpers/copyOptions.ts","webpack://telegram-t/./src/components/middle/message/TimeMenuItem.module.scss?e6ff","webpack://telegram-t/./src/components/middle/message/LastEditTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/ReadTimeMenuItem.tsx","webpack://telegram-t/./src/components/middle/message/MessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/helpers/isSelectionRangeInsideMessage.ts","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useCustomBackground.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/scrollLock.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle } from '../../global/helpers';\nimport { isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart, ThreadId } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  asPreview,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n  threadId,\n  maxTimestamp,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  asPreview?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n  threadId?: ThreadId;\n  maxTimestamp?: number;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message)?.text;\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    asPreview,\n    isProtected,\n    forcePlayback,\n    messageId: 'id' in message ? message.id : undefined,\n    chatId: message.chatId,\n    threadId,\n    maxTimestamp,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, asPreview: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps<CategoryType extends string> = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CategoryType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CategoryType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps<CategoryType extends string> = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CategoryType[];\n  onSelectedCategoriesChange?: (categories: CategoryType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps<CategoryType extends string> = {\n  className?: string;\n  categories?: UniqueCustomPeer<CategoryType>[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withPeerUsernames?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps<CategoryType> | MultipleModeProps<CategoryType>);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = <CategoryType extends string = CustomPeerType>({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withPeerUsernames,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps<CategoryType>) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (!peer) return undefined;\n\n      if (withPeerUsernames) {\n        const username = peer.usernames?.[0]?.username;\n        if (username) {\n          return [`@${username}`];\n        }\n      }\n\n      if (withStatus) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n\n      if (withPeerTypes) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus, withPeerUsernames,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatusType, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatusType;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { ApiFormattedText } from '../../../../api/types';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\nconst ALLOWED_QUOTE_ENTITIES = new Set([\n  ApiMessageEntityTypes.Bold,\n  ApiMessageEntityTypes.Italic,\n  ApiMessageEntityTypes.Underline,\n  ApiMessageEntityTypes.Strike,\n  ApiMessageEntityTypes.Spoiler,\n  ApiMessageEntityTypes.CustomEmoji,\n]);\n\nexport function getSelectionAsFormattedText(range: Range) {\n  const html = getSelectionAsHtml(range);\n  const formattedText = parseHtmlAsFormattedText(html, false, true);\n\n  return stripEntitiesForQuote(formattedText);\n}\n\nfunction getSelectionAsHtml(range: Range) {\n  const clonedSelection = range.cloneContents();\n  div.appendChild(clonedSelection);\n\n  const html = wrapHtmlWithMarkupTags(range, div.innerHTML);\n  div.innerHTML = '';\n\n  return html\n    .replace(/<br\\s*\\/?>/gi, '\\n')\n    .replace(/&nbsp;/gi, ' ') // Convert nbsp's to spaces\n    .replace(/\\u00a0/gi, ' ');\n}\n\nfunction stripEntitiesForQuote(text: ApiFormattedText): ApiFormattedText {\n  if (!text.entities) return text;\n\n  const entities = text.entities.filter((entity) => ALLOWED_QUOTE_ENTITIES.has(entity.type as ApiMessageEntityTypes));\n  return { ...text, entities: entities.length ? entities : undefined };\n}\n\nfunction wrapHtmlWithMarkupTags(range: Range, html: string) {\n  const container = range.commonAncestorContainer;\n  if (container.nodeType === Node.ELEMENT_NODE && (container as Element).classList.contains('text-content')) {\n    return html;\n  }\n  let currentElement = range.commonAncestorContainer.parentElement;\n  while (currentElement && !currentElement.classList.contains('text-content')) {\n    const tag = currentElement.tagName.toLowerCase();\n    const entityType = currentElement.dataset.entityType;\n    html = `<${tag} ${entityType ? `data-entity-type=\"${entityType}\"` : ''}>${html}</${tag}>`;\n    currentElement = currentElement.parentElement;\n  }\n\n  return html;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './PinMessageModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst PinMessageModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PinMessageModal = useModuleLoader(Bundles.Extra, 'PinMessageModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PinMessageModal ? <PinMessageModal {...props} /> : undefined;\n};\n\nexport default PinMessageModalAsync;\n","import type { ApiMessage, StatefulMediaContent } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\nimport { ApiMediaFormat } from '../../../../api/types';\n\nimport {\n  getMessageContact,\n  getMessageHtmlId,\n  getMessagePhoto,\n  getMessageText,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n  getPhotoMediaHash,\n  hasMediaLocalBlobUrl,\n} from '../../../../global/helpers';\nimport { getMessageTextWithSpoilers } from '../../../../global/helpers/messageSummary';\nimport {\n  CLIPBOARD_ITEM_SUPPORTED,\n  copyHtmlToClipboard,\n  copyImageToClipboard,\n  copyTextToClipboard,\n} from '../../../../util/clipboard';\nimport getMessageIdsForSelectedText from '../../../../util/getMessageIdsForSelectedText';\nimport * as mediaLoader from '../../../../util/mediaLoader';\nimport { IS_SAFARI } from '../../../../util/windowEnvironment';\nimport { renderMessageText } from '../../../common/helpers/renderMessageText';\n\ntype ICopyOptions = {\n  label: string;\n  icon: IconName;\n  handler: () => void;\n}[];\n\nexport function getMessageCopyOptions(\n  message: ApiMessage,\n  statefulContent: StatefulMediaContent | undefined,\n  href?: string,\n  canCopy?: boolean,\n  afterEffect?: () => void,\n  onCopyLink?: () => void,\n  onCopyMessages?: (messageIds: number[]) => void,\n  onCopyNumber?: () => void,\n): ICopyOptions {\n  const options: ICopyOptions = [];\n  const text = getMessageText(message);\n  const photo = getMessagePhoto(message)\n    || (!getMessageWebPageVideo(message) ? getMessageWebPagePhoto(message) : undefined);\n  const contact = getMessageContact(message);\n  const mediaHash = photo ? getPhotoMediaHash(photo, 'full') : undefined;\n  const canImageBeCopied = canCopy && photo && (mediaHash || hasMediaLocalBlobUrl(photo))\n    && CLIPBOARD_ITEM_SUPPORTED && !IS_SAFARI;\n  const selection = window.getSelection();\n\n  if (canImageBeCopied) {\n    options.push({\n      label: 'lng_context_copy_image',\n      icon: 'copy-media',\n      handler: () => {\n        Promise.resolve(mediaHash ? mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl) : photo!.blobUrl)\n          .then(copyImageToClipboard);\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (canCopy && href) {\n    options.push({\n      label: 'lng_context_copy_link',\n      icon: 'copy',\n      handler: () => {\n        copyTextToClipboard(href);\n\n        afterEffect?.();\n      },\n    });\n  } else if (canCopy && text) {\n    // Detect if the user has selection in the current message\n    const hasSelection = Boolean((\n      selection?.anchorNode?.parentNode\n      && (selection.anchorNode.parentNode as HTMLElement).closest('.Message .content-inner')\n      && selection.toString().replace(/(?:\\r\\n|\\r|\\n)/g, '') !== ''\n      && checkMessageHasSelection(message)\n    ));\n\n    options.push({\n      label: getCopyLabel(hasSelection),\n      icon: 'copy',\n      handler: () => {\n        const messageIds = getMessageIdsForSelectedText();\n        if (messageIds?.length && onCopyMessages) {\n          onCopyMessages(messageIds);\n        } else if (hasSelection) {\n          document.execCommand('copy');\n        } else {\n          const clipboardText = renderMessageText(\n            { message, shouldRenderAsHtml: true },\n          );\n          if (clipboardText) {\n            copyHtmlToClipboard(\n              clipboardText.join(''),\n              getMessageTextWithSpoilers(message, statefulContent)!,\n            );\n          }\n        }\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  if (onCopyLink) {\n    options.push({\n      label: 'lng_context_copy_message_link',\n      icon: 'link',\n      handler: onCopyLink,\n    });\n  }\n\n  if (contact && onCopyNumber) {\n    options.push({\n      label: 'lng_profile_copy_phone',\n      icon: 'copy',\n      handler: () => {\n        onCopyNumber();\n\n        afterEffect?.();\n      },\n    });\n  }\n\n  return options;\n}\nfunction checkMessageHasSelection(message: ApiMessage): boolean {\n  const selection = window.getSelection();\n  const selectionParentNode = (selection?.anchorNode?.parentNode as HTMLElement);\n  const selectedMessageElement = selectionParentNode?.closest<HTMLDivElement>('.Message.message-list-item');\n  return getMessageHtmlId(message.id) === selectedMessageElement?.id;\n}\nfunction getCopyLabel(hasSelection: boolean): string {\n  if (hasSelection) {\n    return 'lng_context_copy_selected';\n  }\n  return 'lng_context_copy_text';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"C3LVl_JT\",\"get\":\"bmxij_dk\",\"skeleton\":\"cd1ZZeSy\",\"transition\":\"mg4sBQ9n\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n};\n\nfunction LastEditTimeMenuItem({\n  message,\n}: OwnProps) {\n  const lang = useOldLang();\n  const { editDate } = message;\n  const shouldRenderSkeleton = !editDate;\n\n  return (\n    <MenuItem icon=\"clock-edit\" className={styles.item}>\n      {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : Boolean(editDate)\n        && lang('Chat.PrivateMessageEditTimestamp.Date', formatDateAtTime(lang, editDate * 1000))}\n    </MenuItem>\n  );\n}\n\nexport default memo(LastEditTimeMenuItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport MenuItem from '../../ui/MenuItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Transition from '../../ui/Transition';\n\nimport styles from './TimeMenuItem.module.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  closeContextMenu: NoneToVoidFunction;\n};\n\nfunction ReadTimeMenuItem({\n  message, shouldRenderShowWhen, canLoadReadDate, closeContextMenu,\n}: OwnProps) {\n  const { openPrivacySettingsNoticeModal } = getActions();\n  const lang = useOldLang();\n  const { readDate } = message;\n  const shouldRenderSkeleton = canLoadReadDate && !readDate && !shouldRenderShowWhen;\n\n  const handleOpenModal = () => {\n    closeContextMenu();\n    openPrivacySettingsNoticeModal({ chatId: message.chatId, isReadDate: true });\n  };\n\n  return (\n    <MenuItem icon=\"message-read\" className={styles.item}>\n      <Transition name=\"fade\" activeKey={shouldRenderSkeleton ? 1 : 2} className={styles.transition}>\n        {shouldRenderSkeleton ? <Skeleton className={styles.skeleton} /> : (\n          <>\n            {Boolean(readDate) && lang('PmReadAt', formatDateAtTime(lang, readDate * 1000))}\n            {!readDate && shouldRenderShowWhen && (\n              <div>\n                {lang('PmRead')}\n                <span className={styles.get} onClick={handleOpenModal}>\n                  {lang('PmReadShowWhen')}\n                </span>\n              </div>\n            )}\n          </>\n        )}\n      </Transition>\n    </MenuItem>\n  );\n}\n\nexport default memo(ReadTimeMenuItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPeer,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiThreadInfo,\n  ApiTypeStory,\n  ApiUser,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport {\n  getUserFullName,\n  groupStatefulContent,\n  isUserId,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { disableScrolling } from '../../../util/scrollLock';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { getMessageCopyOptions } from './helpers/copyOptions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport LastEditTimeMenuItem from './LastEditTimeMenuItem';\nimport ReactionSelector from './reactions/ReactionSelector';\nimport ReadTimeMenuItem from './ReadTimeMenuItem';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isReactionPickerOpen?: boolean;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  message: ApiMessage;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  canSendNow?: boolean;\n  enabledReactions?: ApiChatReactions;\n  isWithPaidReaction?: boolean;\n  reactionsLimit?: number;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canQuote?: boolean;\n  repliesThreadInfo?: ApiThreadInfo;\n  canPin?: boolean;\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canShowReactionsCount?: boolean;\n  canShowReactionList?: boolean;\n  canBuyPremium?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  isDownloading?: boolean;\n  canShowSeenBy?: boolean;\n  seenByRecentPeers?: ApiPeer[];\n  noReplies?: boolean;\n  hasCustomEmoji?: boolean;\n  customEmojiSets?: ApiStickerSet[];\n  canPlayAnimatedEmojis?: boolean;\n  isInSavedMessages?: boolean;\n  shouldRenderShowWhen?: boolean;\n  canLoadReadDate?: boolean;\n  onReply?: NoneToVoidFunction;\n  onOpenThread?: VoidFunction;\n  onEdit?: NoneToVoidFunction;\n  onPin?: NoneToVoidFunction;\n  onUnpin?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onDelete?: NoneToVoidFunction;\n  onFaveSticker?: NoneToVoidFunction;\n  onReport?: NoneToVoidFunction;\n  onUnfaveSticker?: NoneToVoidFunction;\n  onSelect?: NoneToVoidFunction;\n  onSend?: NoneToVoidFunction;\n  onReschedule?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onCopyLink?: NoneToVoidFunction;\n  onCopyMessages?: (messageIds: number[]) => void;\n  onCopyNumber?: NoneToVoidFunction;\n  onDownload?: NoneToVoidFunction;\n  onSaveGif?: NoneToVoidFunction;\n  onCancelVote?: NoneToVoidFunction;\n  onClosePoll?: NoneToVoidFunction;\n  onShowSeenBy?: NoneToVoidFunction;\n  onShowReactors?: NoneToVoidFunction;\n  onTranslate?: NoneToVoidFunction;\n  onShowOriginal?: NoneToVoidFunction;\n  onSelectLanguage?: NoneToVoidFunction;\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onReactionPickerOpen?: (position: IAnchorPosition) => void;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst SCROLLBAR_WIDTH = 10;\nconst REACTION_SELECTOR_WIDTH_REM = 19.25;\nconst ANIMATION_DURATION = 200;\n\nconst MessageContextMenu: FC<OwnProps> = ({\n  isReactionPickerOpen,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  message,\n  poll,\n  story,\n  isPrivate,\n  isCurrentUserPremium,\n  enabledReactions,\n  isWithPaidReaction,\n  reactionsLimit,\n  anchor,\n  targetHref,\n  canSendNow,\n  canReschedule,\n  canBuyPremium,\n  canReply,\n  canQuote,\n  canEdit,\n  noReplies,\n  canPin,\n  canUnpin,\n  canDelete,\n  canForward,\n  canReport,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canTranslate,\n  canShowOriginal,\n  canSelectLanguage,\n  isDownloading,\n  repliesThreadInfo,\n  canShowSeenBy,\n  canShowReactionsCount,\n  canShowReactionList,\n  seenByRecentPeers,\n  hasCustomEmoji,\n  customEmojiSets,\n  canPlayAnimatedEmojis,\n  isInSavedMessages,\n  shouldRenderShowWhen,\n  canLoadReadDate,\n  onReply,\n  onOpenThread,\n  onEdit,\n  onPin,\n  onUnpin,\n  onForward,\n  onDelete,\n  onFaveSticker,\n  onReport,\n  onUnfaveSticker,\n  onSelect,\n  onSend,\n  onReschedule,\n  onClose,\n  onCloseAnimationEnd,\n  onCopyLink,\n  onCopyNumber,\n  onDownload,\n  onSaveGif,\n  onCancelVote,\n  onClosePoll,\n  onShowSeenBy,\n  onShowReactors,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onCopyMessages,\n  onReactionPickerOpen,\n  onTranslate,\n  onShowOriginal,\n  onSelectLanguage,\n  userFullName,\n  canGift,\n}) => {\n  const {\n    showNotification, openStickerSet, openCustomEmojiSets, loadStickers, openGiftModal,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollableRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const noReactions = !isPrivate && !enabledReactions;\n  const areReactionsPossible = message.areReactionsPossible;\n  const withReactions = (canShowReactionList && !noReactions) || areReactionsPossible;\n  const isEdited = ('isEdited' in message) && message.isEdited;\n  const seenByDates = message.seenByDates;\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const shouldShowGiftButton = isUserId(message.chatId)\n    && canGift && (isPremiumGift || isGiftCode || isStarGift || isStarGiftUnique);\n\n  const [areItemsHidden, hideItems] = useFlag();\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n  const { isMobile, isDesktop } = useAppLayout();\n  const seenByDatesCount = useMemo(() => (seenByDates ? Object.keys(seenByDates).length : 0), [seenByDates]);\n\n  const handleAfterCopy = useLastCallback(() => {\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    onClose();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: message.chatId });\n    onClose();\n  });\n\n  useEffect(() => {\n    if (isOpen && areItemsHidden && !isReactionPickerOpen) {\n      onClose();\n    }\n  }, [onClose, isOpen, isReactionPickerOpen, areItemsHidden]);\n\n  useEffect(() => {\n    if (customEmojiSets?.length) {\n      customEmojiSets.map((customEmojiSet) => {\n        return loadStickers({\n          stickerSetInfo: {\n            id: customEmojiSet.id,\n            accessHash: customEmojiSet.accessHash,\n          },\n        });\n      });\n    }\n  }, [customEmojiSets, openCustomEmojiSets]);\n\n  const handleOpenCustomEmojiSets = useLastCallback(() => {\n    if (!customEmojiSets) return;\n    if (customEmojiSets.length === 1) {\n      openStickerSet({\n        stickerSetInfo: {\n          shortName: customEmojiSets[0].shortName,\n        },\n      });\n    } else {\n      openCustomEmojiSets({\n        setIds: customEmojiSets.map((set) => set.id),\n      });\n    }\n    onClose();\n  });\n\n  const copyOptions = getMessageCopyOptions(\n    message,\n    groupStatefulContent({ poll, story }),\n    targetHref,\n    canCopy,\n    handleAfterCopy,\n    canCopyLink ? onCopyLink : undefined,\n    onCopyMessages,\n    onCopyNumber,\n  );\n\n  const getTriggerElement = useLastCallback(() => {\n    return document.querySelector(`.Transition_slide-active > .MessageList div[data-message-id=\"${message.id}\"]`);\n  });\n\n  const getRootElement = useLastCallback(() => document.querySelector('.Transition_slide-active > .MessageList'));\n\n  const getMenuElement = useLastCallback(() => document.querySelector('.MessageContextMenu .bubble'));\n\n  const getLayout = useLastCallback(() => {\n    const extraHeightAudioPlayer = (isMobile\n      && (document.querySelector<HTMLElement>('.AudioPlayer-content'))?.offsetHeight) || 0;\n    const middleColumn = document.getElementById('MiddleColumn')!;\n    const middleColumnComputedStyle = getComputedStyle(middleColumn);\n    const headerToolsHeight = parseFloat(middleColumnComputedStyle.getPropertyValue('--middle-header-panes-height'));\n    const extraHeightPinned = headerToolsHeight || 0;\n\n    return {\n      extraPaddingX: SCROLLBAR_WIDTH,\n      extraTopPadding: (document.querySelector<HTMLElement>('.MiddleHeader')!).offsetHeight,\n      extraMarginTop: extraHeightPinned + extraHeightAudioPlayer,\n      shouldAvoidNegativePosition: !isDesktop,\n      menuElMinWidth: withReactions && isMobile ? REACTION_SELECTOR_WIDTH_REM * REM : undefined,\n    };\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  useEffect(() => {\n    return disableScrolling(scrollableRef.current, '.ReactionPicker');\n  }, [isOpen]);\n\n  const handleOpenMessageReactionPicker = useLastCallback((position: IAnchorPosition) => {\n    onReactionPickerOpen!(position);\n    hideItems();\n  });\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      withMaxHeight\n      className={buildClassName(\n        'MessageContextMenu', 'fluid', withReactions && 'with-reactions',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {withReactions && (\n        <ReactionSelector\n          enabledReactions={enabledReactions}\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          defaultTagReactions={defaultTagReactions}\n          currentReactions={message.reactions?.results}\n          reactionsLimit={reactionsLimit}\n          onToggleReaction={onToggleReaction!}\n          onSendPaidReaction={onSendPaidReaction}\n          onShowPaidReactionModal={onShowPaidReactionModal}\n          isWithPaidReaction={isWithPaidReaction}\n          isPrivate={isPrivate}\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageReactionPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        ref={scrollableRef}\n        className={buildClassName(\n          'MessageContextMenu_items scrollable-content custom-scroll',\n          areItemsHidden && 'MessageContextMenu_items-hidden',\n        )}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowGiftButton\n          && (\n            <MenuItem icon=\"gift\" onClick={handleGiftClick}>\n              {message?.isOutgoing ? lang('SendAnotherGift')\n                : lang('Conversation.ContextMenuSendGiftTo', userFullName)}\n            </MenuItem>\n          )}\n        {canSendNow && <MenuItem icon=\"send-outline\" onClick={onSend}>{lang('MessageScheduleSend')}</MenuItem>}\n        {canReschedule && (\n          <MenuItem icon=\"schedule\" onClick={onReschedule}>{lang('MessageScheduleEditTime')}</MenuItem>\n        )}\n        {canReply && (\n          <MenuItem icon=\"reply\" onClick={onReply}>\n            {lang(canQuote ? 'lng_context_quote_and_reply' : 'Reply')}\n          </MenuItem>\n        )}\n        {!noReplies && Boolean(repliesThreadInfo?.messagesCount) && (\n          <MenuItem icon=\"replies\" onClick={onOpenThread}>\n            {lang('Conversation.ContextViewReplies', repliesThreadInfo!.messagesCount, 'i')}\n          </MenuItem>\n        )}\n        {canEdit && <MenuItem icon=\"edit\" onClick={onEdit}>{lang('Edit')}</MenuItem>}\n        {canFaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onFaveSticker}>{lang('AddToFavorites')}</MenuItem>\n        )}\n        {canUnfaveSticker && (\n          <MenuItem icon=\"favorite\" onClick={onUnfaveSticker}>{lang('Stickers.RemoveFromFavorites')}</MenuItem>\n        )}\n        {canTranslate && <MenuItem icon=\"language\" onClick={onTranslate}>{lang('TranslateMessage')}</MenuItem>}\n        {canShowOriginal && <MenuItem icon=\"language\" onClick={onShowOriginal}>{lang('ShowOriginalButton')}</MenuItem>}\n        {canSelectLanguage && (\n          <MenuItem icon=\"web\" onClick={onSelectLanguage}>{lang('lng_settings_change_lang')}</MenuItem>\n        )}\n        {copyOptions.map((option) => (\n          <MenuItem\n            key={option.label}\n            icon={option.icon}\n            onClick={option.handler}\n            withPreventDefaultOnMouseDown\n          >{lang(option.label)}\n          </MenuItem>\n        ))}\n        {canPin && <MenuItem icon=\"pin\" onClick={onPin}>{lang('DialogPin')}</MenuItem>}\n        {canUnpin && <MenuItem icon=\"unpin\" onClick={onUnpin}>{lang('DialogUnpin')}</MenuItem>}\n        {canSaveGif && <MenuItem icon=\"gifs\" onClick={onSaveGif}>{lang('lng_context_save_gif')}</MenuItem>}\n        {canRevote && <MenuItem icon=\"revote\" onClick={onCancelVote}>{lang('lng_polls_retract')}</MenuItem>}\n        {canClosePoll && <MenuItem icon=\"stop\" onClick={onClosePoll}>{lang('lng_polls_stop')}</MenuItem>}\n        {canDownload && (\n          <MenuItem icon=\"download\" onClick={onDownload}>\n            {isDownloading ? lang('lng_context_cancel_download') : lang('lng_media_download')}\n          </MenuItem>\n        )}\n        {canForward && <MenuItem icon=\"forward\" onClick={onForward}>{lang('Forward')}</MenuItem>}\n        {canSelect && <MenuItem icon=\"select\" onClick={onSelect}>{lang('Common.Select')}</MenuItem>}\n        {canReport && <MenuItem icon=\"flag\" onClick={onReport}>{lang('lng_context_report_msg')}</MenuItem>}\n        {canDelete && <MenuItem destructive icon=\"delete\" onClick={onDelete}>{lang('Delete')}</MenuItem>}\n        {hasCustomEmoji && (\n          <>\n            <MenuSeparator size=\"thick\" />\n            {!customEmojiSets && (\n              <>\n                <Skeleton inline className=\"menu-loading-row\" />\n                <Skeleton inline className=\"menu-loading-row\" />\n              </>\n            )}\n            {customEmojiSets && customEmojiSets.length === 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPack', customEmojiSets[0].title), ['simple_markdown', 'emoji'])}\n              </MenuItem>\n            )}\n            {customEmojiSets && customEmojiSets.length > 1 && (\n              <MenuItem withWrap onClick={handleOpenCustomEmojiSets} className=\"menu-custom-emoji-sets\">\n                {renderText(lang('MessageContainsEmojiPacks', customEmojiSets.length), ['simple_markdown'])}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {(canShowSeenBy || canShowReactionsCount) && (\n          <>\n            <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n            <MenuItem\n              icon={canShowReactionsCount ? 'heart-outline' : 'group'}\n              onClick={canShowReactionsCount ? onShowReactors : onShowSeenBy}\n              disabled={!canShowReactionsCount && !seenByDatesCount}\n            >\n              <span className=\"MessageContextMenu--seen-by-label-wrapper\">\n                <span className=\"MessageContextMenu--seen-by-label\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {canShowReactionsCount && message.reactors?.count ? (\n                    canShowSeenBy && seenByDatesCount\n                      ? lang(\n                        'Chat.OutgoingContextMixedReactionCount',\n                        [message.reactors.count, seenByDatesCount],\n                      )\n                      : lang('Chat.ContextReactionCount', message.reactors.count, 'i')\n                  ) : (\n                    seenByDatesCount === 1 && seenByRecentPeers\n                      ? renderText(\n                        isUserId(seenByRecentPeers[0].id)\n                          ? getUserFullName(seenByRecentPeers[0] as ApiUser)!\n                          : (seenByRecentPeers[0] as ApiChat).title,\n                      ) : (\n                        seenByDatesCount\n                          ? lang('Conversation.ContextMenuSeen', seenByDatesCount, 'i')\n                          : lang('Conversation.ContextMenuNoViews')\n                      )\n                  )}\n                </span>\n              </span>\n              <AvatarList className=\"avatars\" size=\"micro\" peers={seenByRecentPeers} />\n            </MenuItem>\n          </>\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen || isEdited) && (\n          <MenuSeparator size={hasCustomEmoji ? 'thin' : 'thick'} />\n        )}\n        {(canLoadReadDate || shouldRenderShowWhen) && (\n          <ReadTimeMenuItem\n            canLoadReadDate={canLoadReadDate}\n            shouldRenderShowWhen={shouldRenderShowWhen}\n            message={message}\n            closeContextMenu={onClose}\n          />\n        )}\n        {isEdited && (\n          <LastEditTimeMenuItem\n            message={message}\n          />\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(MessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChat,\n  ApiChatReactions,\n  ApiMessage,\n  ApiPoll,\n  ApiReaction,\n  ApiStickerSet,\n  ApiStickerSetInfo,\n  ApiThreadInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type {\n  ActiveDownloads,\n  IAlbum,\n  IAnchorPosition,\n  MessageListType,\n  ThreadId,\n} from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { PREVIEW_AVATAR_COUNT, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  areReactionsEmpty,\n  getCanPostInChat,\n  getIsDownloading,\n  getMessageDownloadableMedia,\n  getMessageVideo,\n  getUserFullName,\n  hasMessageTtl,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageLocal,\n  isOwnMessage,\n  isUserId,\n  isUserRightBanned,\n} from '../../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow,\n  selectBot,\n  selectCanForwardMessage,\n  selectCanGift,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectCanTranslateMessage,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsMessageProtected,\n  selectIsMessageUnread,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectMessageCustomEmojiSets,\n  selectMessageTranslations,\n  selectPeerStory,\n  selectPollFromMessage,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getSelectionAsFormattedText } from './helpers/getSelectionAsFormattedText';\nimport { isSelectionRangeInsideMessage } from './helpers/isSelectionRangeInsideMessage';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSchedule from '../../../hooks/useSchedule';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport PinMessageModal from '../../common/PinMessageModal.async';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport MessageContextMenu from './MessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiMessage;\n  album?: IAlbum;\n  anchor: IAnchorPosition;\n  targetHref?: string;\n  messageListType: MessageListType;\n  noReplies?: boolean;\n  detectedLanguage?: string;\n  repliesThreadInfo?: ApiThreadInfo;\n  className?: string;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  threadId?: ThreadId;\n  poll?: ApiPoll;\n  story?: ApiTypeStory;\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  noOptions?: boolean;\n  canSendNow?: boolean;\n  canReschedule?: boolean;\n  canReply?: boolean;\n  canPin?: boolean;\n  canShowReactionsCount?: boolean;\n  canBuyPremium?: boolean;\n  canShowReactionList?: boolean;\n  customEmojiSetsInfo?: ApiStickerSetInfo[];\n  customEmojiSets?: ApiStickerSet[];\n  canUnpin?: boolean;\n  canDelete?: boolean;\n  canReport?: boolean;\n  canEdit?: boolean;\n  canForward?: boolean;\n  canFaveSticker?: boolean;\n  canUnfaveSticker?: boolean;\n  canCopy?: boolean;\n  canTranslate?: boolean;\n  canShowOriginal?: boolean;\n  isMessageTranslated?: boolean;\n  canSelectLanguage?: boolean;\n  isPrivate?: boolean;\n  isCurrentUserPremium?: boolean;\n  hasFullInfo?: boolean;\n  canCopyLink?: boolean;\n  canSelect?: boolean;\n  canDownload?: boolean;\n  canSaveGif?: boolean;\n  canRevote?: boolean;\n  canClosePoll?: boolean;\n  canLoadReadDate?: boolean;\n  shouldRenderShowWhen?: boolean;\n  activeDownloads: ActiveDownloads;\n  canShowSeenBy?: boolean;\n  enabledReactions?: ApiChatReactions;\n  canScheduleUntilOnline?: boolean;\n  reactionsLimit?: number;\n  canPlayAnimatedEmojis?: boolean;\n  isReactionPickerOpen?: boolean;\n  isInSavedMessages?: boolean;\n  isChannel?: boolean;\n  canReplyInChat?: boolean;\n  isWithPaidReaction?: boolean;\n  userFullName?: string;\n  canGift?: boolean;\n};\n\nconst selection = window.getSelection();\n\nconst ContextMenuContainer: FC<OwnProps & StateProps> = ({\n  threadId,\n  availableReactions,\n  topReactions,\n  defaultTagReactions,\n  isOpen,\n  messageListType,\n  message,\n  customEmojiSetsInfo,\n  customEmojiSets,\n  album,\n  poll,\n  story,\n  anchor,\n  targetHref,\n  noOptions,\n  canSendNow,\n  hasFullInfo,\n  canReschedule,\n  canReply,\n  canPin,\n  repliesThreadInfo,\n  canUnpin,\n  canDelete,\n  canShowReactionsCount,\n  chat,\n  canReport,\n  canShowReactionList,\n  canEdit,\n  enabledReactions,\n  reactionsLimit,\n  isPrivate,\n  isCurrentUserPremium,\n  canForward,\n  canBuyPremium,\n  canFaveSticker,\n  canUnfaveSticker,\n  canCopy,\n  canCopyLink,\n  canSelect,\n  canDownload,\n  canSaveGif,\n  canRevote,\n  canClosePoll,\n  canPlayAnimatedEmojis,\n  canLoadReadDate,\n  shouldRenderShowWhen,\n  activeDownloads,\n  noReplies,\n  canShowSeenBy,\n  canScheduleUntilOnline,\n  canTranslate,\n  isMessageTranslated,\n  canShowOriginal,\n  canSelectLanguage,\n  isReactionPickerOpen,\n  isInSavedMessages,\n  canReplyInChat,\n  isWithPaidReaction,\n  userFullName,\n  canGift,\n  className,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openThread,\n    updateDraftReplyInfo,\n    setEditingId,\n    pinMessage,\n    openForwardMenu,\n    openReplyMenu,\n    faveSticker,\n    unfaveSticker,\n    toggleMessageSelection,\n    sendScheduledMessages,\n    rescheduleMessage,\n    downloadMedia,\n    cancelMediaDownload,\n    loadSeenBy,\n    openSeenByModal,\n    openReactorListModal,\n    loadFullChat,\n    loadReactors,\n    copyMessagesByIds,\n    saveGif,\n    loadStickers,\n    cancelPollVote,\n    closePoll,\n    toggleReaction,\n    requestMessageTranslation,\n    showOriginalMessage,\n    openChatLanguageModal,\n    openMessageReactionPicker,\n    openPremiumModal,\n    loadOutboxReadDate,\n    copyMessageLink,\n    openDeleteMessageModal,\n    addLocalPaidReaction,\n    openPaidReactionModal,\n    reportMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { ref: containerRef } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    className: false,\n  });\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [isPinModalOpen, setIsPinModalOpen] = useState(false);\n  const [isClosePollDialogOpen, openClosePollDialog, closeClosePollDialog] = useFlag();\n  const [canQuoteSelection, setCanQuoteSelection] = useState(false);\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline, onClose, message.date);\n\n  // `undefined` indicates that emoji are present and loading\n  const hasCustomEmoji = customEmojiSetsInfo === undefined || Boolean(customEmojiSetsInfo.length);\n\n  useEffect(() => {\n    if (canShowSeenBy && isOpen) {\n      loadSeenBy({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [loadSeenBy, isOpen, message.chatId, message.id, canShowSeenBy]);\n\n  useEffect(() => {\n    if (canLoadReadDate && isOpen) {\n      loadOutboxReadDate({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canLoadReadDate, isOpen, message.chatId, message.id, message.readDate]);\n\n  useEffect(() => {\n    if (canShowReactionsCount && isOpen) {\n      loadReactors({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [canShowReactionsCount, isOpen, loadReactors, message.chatId, message.id]);\n\n  useEffect(() => {\n    if (customEmojiSetsInfo?.length && customEmojiSets?.length !== customEmojiSetsInfo.length) {\n      customEmojiSetsInfo.forEach((set) => {\n        loadStickers({ stickerSetInfo: set });\n      });\n    }\n  }, [customEmojiSetsInfo, customEmojiSets, loadStickers]);\n\n  useEffect(() => {\n    if (!hasFullInfo && !isPrivate && isOpen) {\n      loadFullChat({ chatId: message.chatId });\n    }\n  }, [hasFullInfo, isOpen, isPrivate, loadFullChat, message.chatId]);\n\n  const seenByRecentPeers = useMemo(() => {\n    // No need for expensive global updates on chats or users, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n    if (message.reactions?.recentReactions?.length) {\n      const uniqueReactors = new Set(message.reactions?.recentReactions?.map(\n        ({ peerId }) => usersById[peerId] || chatsById[peerId],\n      ));\n\n      return Array.from(uniqueReactors).filter(Boolean).slice(0, PREVIEW_AVATAR_COUNT);\n    }\n\n    if (!message.seenByDates) {\n      return undefined;\n    }\n\n    return Object.keys(message.seenByDates).slice(0, PREVIEW_AVATAR_COUNT)\n      .map((id) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [message.reactions?.recentReactions, message.seenByDates]);\n\n  const isDownloading = useMemo(() => {\n    if (album) {\n      return album.messages.some((msg) => {\n        const downloadableMedia = getMessageDownloadableMedia(msg);\n        if (!downloadableMedia) return false;\n        return getIsDownloading(activeDownloads, downloadableMedia);\n      });\n    }\n\n    const downloadableMedia = getMessageDownloadableMedia(message);\n    if (!downloadableMedia) return false;\n    return getIsDownloading(activeDownloads, downloadableMedia);\n  }, [activeDownloads, album, message]);\n\n  const selectionRange = canReply && selection?.rangeCount ? selection.getRangeAt(0) : undefined;\n\n  useEffect(() => {\n    if (isMessageTranslated) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const isMessageTextSelected = selectionRange\n      && !selectionRange.collapsed\n      && Boolean(message.content.text?.text)\n      && isSelectionRangeInsideMessage(selectionRange);\n\n    if (!isMessageTextSelected) {\n      setCanQuoteSelection(false);\n      return;\n    }\n\n    const selectionText = getSelectionAsFormattedText(selectionRange);\n\n    const messageText = message.content.text!.text!.replace(/\\u00A0/g, ' ');\n\n    setCanQuoteSelection(\n      selectionText.text.trim().length > 0\n      && messageText.includes(selectionText.text),\n    );\n  }, [\n    selectionRange, selectionRange?.collapsed, selectionRange?.startOffset, selectionRange?.endOffset,\n    isMessageTranslated, message.content.text,\n  ]);\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    closeMenu();\n    const messageIds = album?.messages\n      ? album.messages.map(({ id }) => id)\n      : [message.id];\n    openDeleteMessageModal({\n      chatId: message.chatId,\n      messageIds,\n      isSchedule: messageListType === 'scheduled',\n    });\n  });\n\n  const closePinModal = useLastCallback(() => {\n    setIsPinModalOpen(false);\n    onClose();\n  });\n\n  const handleReply = useLastCallback(() => {\n    const quoteText = canQuoteSelection && selectionRange ? getSelectionAsFormattedText(selectionRange) : undefined;\n    if (!canReplyInChat) {\n      openReplyMenu({ fromChatId: message.chatId, messageId: message.id, quoteText });\n    } else {\n      updateDraftReplyInfo({\n        replyToMsgId: message.id,\n        quoteText,\n        replyToPeerId: undefined,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleOpenThread = useLastCallback(() => {\n    openThread({\n      chatId: message.chatId,\n      threadId: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleEdit = useLastCallback(() => {\n    setEditingId({ messageId: message.id });\n    closeMenu();\n  });\n\n  const handlePin = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsPinModalOpen(true);\n  });\n\n  const handleUnpin = useLastCallback(() => {\n    pinMessage({ chatId: message.chatId, messageId: message.id, isUnpin: true });\n    closeMenu();\n  });\n\n  const handleForward = useLastCallback(() => {\n    closeMenu();\n    if (album?.messages) {\n      const messageIds = album.messages.map(({ id }) => id);\n      openForwardMenu({ fromChatId: message.chatId, messageIds });\n    } else {\n      openForwardMenu({ fromChatId: message.chatId, messageIds: [message.id] });\n    }\n  });\n\n  const handleFaveSticker = useLastCallback(() => {\n    closeMenu();\n    faveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleUnfaveSticker = useLastCallback(() => {\n    closeMenu();\n    unfaveSticker({ sticker: message.content.sticker! });\n  });\n\n  const handleCancelVote = useLastCallback(() => {\n    closeMenu();\n    cancelPollVote({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handlePollClose = useLastCallback(() => {\n    closeMenu();\n    closePoll({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleSelectMessage = useLastCallback(() => {\n    const params = album?.messages\n      ? {\n        messageId: message.id,\n        childMessageIds: album.messages.map(({ id }) => id),\n        withShift: false,\n      }\n      : { messageId: message.id, withShift: false };\n\n    toggleMessageSelection(params);\n    closeMenu();\n  });\n\n  const handleScheduledMessageSend = useLastCallback(() => {\n    sendScheduledMessages({ chatId: message.chatId, id: message.id });\n    closeMenu();\n  });\n\n  const handleRescheduleMessage = useLastCallback((scheduledAt: number) => {\n    rescheduleMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      scheduledAt,\n    });\n    onClose();\n  });\n\n  const handleOpenCalendar = useLastCallback(() => {\n    setIsMenuOpen(false);\n    requestCalendar(handleRescheduleMessage);\n  });\n\n  const handleOpenSeenByModal = useLastCallback(() => {\n    closeMenu();\n    openSeenByModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleOpenReactorListModal = useLastCallback(() => {\n    closeMenu();\n    openReactorListModal({ chatId: message.chatId, messageId: message.id });\n  });\n\n  const handleCopyMessages = useLastCallback((messageIds: number[]) => {\n    copyMessagesByIds({ messageIds });\n    closeMenu();\n  });\n\n  const handleCopyLink = useLastCallback(() => {\n    copyMessageLink({\n      chatId: message.chatId,\n      messageId: message.id,\n      shouldIncludeThread: threadId !== MAIN_THREAD_ID,\n      shouldIncludeGrouped: true, // TODO: Provide correct value when ability to target specific message is added\n    });\n    closeMenu();\n  });\n\n  const handleCopyNumber = useLastCallback(() => {\n    copyTextToClipboard(message.content.contact!.phoneNumber);\n    closeMenu();\n  });\n\n  const handleDownloadClick = useLastCallback(() => {\n    (album?.messages || [message]).forEach((msg) => {\n      const downloadableMedia = getMessageDownloadableMedia(msg);\n      if (!downloadableMedia) return;\n\n      if (isDownloading) {\n        cancelMediaDownload({ media: downloadableMedia });\n      } else {\n        downloadMedia({ media: downloadableMedia, originMessage: msg });\n      }\n    });\n    closeMenu();\n  });\n\n  const handleSaveGif = useLastCallback(() => {\n    const video = getMessageVideo(message);\n    saveGif({ gif: video! });\n    closeMenu();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    if (isInSavedMessages && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n    } else {\n      toggleReaction({\n        chatId: message.chatId, messageId: message.id, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleSendPaidReaction = useLastCallback(() => {\n    addLocalPaidReaction({\n      chatId: message.chatId, messageId: message.id, count: 1,\n    });\n    closeMenu();\n  });\n\n  const handlePaidReactionModalOpen = useLastCallback(() => {\n    openPaidReactionModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n\n    closeMenu();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openMessageReactionPicker({ chatId: message.chatId, messageId: message.id, position });\n  });\n\n  const handleTranslate = useLastCallback(() => {\n    requestMessageTranslation({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleShowOriginal = useLastCallback(() => {\n    showOriginalMessage({\n      chatId: message.chatId,\n      id: message.id,\n    });\n    closeMenu();\n  });\n\n  const handleSelectLanguage = useLastCallback(() => {\n    openChatLanguageModal({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n    closeMenu();\n  });\n\n  const reportMessageIds = useMemo(() => (album ? album.messages : [message]).map(({ id }) => id), [album, message]);\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    setIsMenuOpen(false);\n    onClose();\n    reportMessages({\n      chatId: chat.id, messageIds: reportMessageIds,\n    });\n  });\n\n  if (noOptions) {\n    closeMenu();\n\n    return undefined;\n  }\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  return (\n    <div ref={containerRef} className={buildClassName('ContextMenuContainer', className)}>\n      <MessageContextMenu\n        isReactionPickerOpen={isReactionPickerOpen}\n        availableReactions={availableReactions}\n        topReactions={topReactions}\n        defaultTagReactions={defaultTagReactions}\n        isWithPaidReaction={isWithPaidReaction}\n        message={message}\n        isPrivate={isPrivate}\n        isCurrentUserPremium={isCurrentUserPremium}\n        canBuyPremium={canBuyPremium}\n        isOpen={isMenuOpen}\n        enabledReactions={enabledReactions}\n        reactionsLimit={reactionsLimit}\n        anchor={anchor}\n        targetHref={targetHref}\n        canShowReactionsCount={canShowReactionsCount}\n        canShowReactionList={canShowReactionList}\n        canSendNow={canSendNow}\n        canReschedule={canReschedule}\n        canReply={canReply}\n        canQuote={canQuoteSelection}\n        canDelete={canDelete}\n        canPin={canPin}\n        canReport={canReport}\n        repliesThreadInfo={repliesThreadInfo}\n        canUnpin={canUnpin}\n        canEdit={canEdit}\n        canForward={canForward}\n        canFaveSticker={canFaveSticker}\n        canUnfaveSticker={canUnfaveSticker}\n        canCopy={canCopy}\n        canCopyLink={canCopyLink}\n        canSelect={canSelect}\n        canDownload={canDownload}\n        canSaveGif={canSaveGif}\n        canRevote={canRevote}\n        canClosePoll={canClosePoll}\n        canShowSeenBy={canShowSeenBy}\n        canTranslate={canTranslate}\n        canShowOriginal={canShowOriginal}\n        canSelectLanguage={canSelectLanguage}\n        canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        shouldRenderShowWhen={shouldRenderShowWhen}\n        canLoadReadDate={canLoadReadDate}\n        hasCustomEmoji={hasCustomEmoji}\n        customEmojiSets={customEmojiSets}\n        isDownloading={isDownloading}\n        seenByRecentPeers={seenByRecentPeers}\n        isInSavedMessages={isInSavedMessages}\n        noReplies={noReplies}\n        poll={poll}\n        story={story}\n        onOpenThread={handleOpenThread}\n        onReply={handleReply}\n        onEdit={handleEdit}\n        onPin={handlePin}\n        onUnpin={handleUnpin}\n        onForward={handleForward}\n        onDelete={handleDelete}\n        onReport={handleReport}\n        onFaveSticker={handleFaveSticker}\n        onUnfaveSticker={handleUnfaveSticker}\n        onSelect={handleSelectMessage}\n        onSend={handleScheduledMessageSend}\n        onReschedule={handleOpenCalendar}\n        onClose={closeMenu}\n        onCopyLink={handleCopyLink}\n        onCopyMessages={handleCopyMessages}\n        onCopyNumber={handleCopyNumber}\n        onDownload={handleDownloadClick}\n        onSaveGif={handleSaveGif}\n        onCancelVote={handleCancelVote}\n        onClosePoll={openClosePollDialog}\n        onShowSeenBy={handleOpenSeenByModal}\n        onToggleReaction={handleToggleReaction}\n        onSendPaidReaction={handleSendPaidReaction}\n        onShowPaidReactionModal={handlePaidReactionModalOpen}\n        onShowReactors={handleOpenReactorListModal}\n        onReactionPickerOpen={handleReactionPickerOpen}\n        onTranslate={handleTranslate}\n        onShowOriginal={handleShowOriginal}\n        onSelectLanguage={handleSelectLanguage}\n        userFullName={userFullName}\n        canGift={canGift}\n      />\n      <PinMessageModal\n        isOpen={isPinModalOpen}\n        messageId={message.id}\n        chatId={message.chatId}\n        onClose={closePinModal}\n      />\n      <ConfirmDialog\n        isOpen={isClosePollDialogOpen}\n        onClose={closeClosePollDialog}\n        text={lang('lng_polls_stop_warning')}\n        confirmLabel={lang('lng_polls_stop_sure')}\n        confirmHandler={handlePollClose}\n      />\n      {canReschedule && calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, messageListType, detectedLanguage }): StateProps => {\n    const { threadId } = selectCurrentMessageList(global) || {};\n\n    const { defaultTags, topReactions, availableReactions } = global.reactions;\n\n    const activeDownloads = selectActiveDownloads(global);\n    const chat = selectChat(global, message.chatId);\n    const isPrivate = chat && isUserId(chat.id);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, message.chatId) : undefined;\n    const user = selectUser(global, message.chatId);\n    const userFullName = user && getUserFullName(user);\n\n    const {\n      seenByExpiresAt, seenByMaxChatMembers, maxUniqueReactions, readDateExpiresAt,\n    } = global.appConfig || {};\n\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n\n    const {\n      noOptions,\n      canReplyGlobally,\n      canPin,\n      canUnpin,\n      canDelete,\n      canReport,\n      canEdit,\n      canFaveSticker,\n      canUnfaveSticker,\n      canCopy,\n      canCopyLink,\n      canSelect,\n      canDownload,\n      canSaveGif,\n      canRevote,\n      canClosePoll,\n    } = (threadId && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const canForward = selectCanForwardMessage(global, message);\n\n    const userStatus = isPrivate ? selectUserStatus(global, chat.id) : undefined;\n    const isOwn = isOwnMessage(message);\n    const chatBot = chat && selectBot(global, chat.id);\n    const isBot = Boolean(chatBot);\n    const isMessageUnread = selectIsMessageUnread(global, message);\n    const canLoadReadDate = Boolean(\n      isPrivate\n      && isOwn\n      && !isBot\n      && !isMessageUnread\n      && readDateExpiresAt\n      && message.date > Date.now() / 1000 - readDateExpiresAt\n      && !userStatus?.isReadDateRestricted\n      && messageListType !== 'scheduled',\n    );\n    const shouldRenderShowWhen = Boolean(\n      canLoadReadDate && isPrivate && selectUserStatus(global, chat.id)?.isReadDateRestrictedByMe,\n    );\n    const isPinned = messageListType === 'pinned';\n    const isScheduled = messageListType === 'scheduled';\n    const isChannel = chat && isChatChannel(chat);\n\n    const threadInfo = threadId && selectThreadInfo(global, message.chatId, threadId);\n    const isMessageThread = Boolean(threadInfo && !threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = threadId ? selectTopic(global, message.chatId, threadId) : undefined;\n\n    const canSendText = chat && !isUserRightBanned(chat, 'sendPlain', chatFullInfo);\n\n    const canReplyInChat = chat && threadId ? getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n     && canSendText : false;\n\n    const isLocal = isMessageLocal(message);\n    const hasTtl = hasMessageTtl(message);\n    const canShowSeenBy = Boolean(!isLocal\n      && chat\n      && !isMessageUnread\n      && seenByMaxChatMembers\n      && seenByExpiresAt\n      && isChatGroup(chat)\n      && isOwn\n      && !isScheduled\n      && chat.membersCount\n      && chat.membersCount <= seenByMaxChatMembers\n      && message.date > Date.now() / 1000 - seenByExpiresAt);\n    const isAction = isActionMessage(message);\n    const canShowReactionsCount = !isLocal && !isChannel && !isScheduled && !isAction && !isPrivate && message.reactions\n      && !areReactionsEmpty(message.reactions) && message.reactions.canSeeList;\n    const isProtected = selectIsMessageProtected(global, message);\n    const canCopyNumber = Boolean(message.content.contact);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const customEmojiSetsInfo = selectMessageCustomEmojiSets(global, message);\n    const customEmojiSetsNotFiltered = customEmojiSetsInfo?.map((set) => selectStickerSet(global, set));\n    const customEmojiSets = customEmojiSetsNotFiltered?.every<ApiStickerSet>(Boolean)\n      ? customEmojiSetsNotFiltered : undefined;\n\n    const translationRequestLanguage = selectRequestedMessageTranslationLanguage(global, message.chatId, message.id);\n    const hasTranslation = translationRequestLanguage\n      ? Boolean(selectMessageTranslations(global, message.chatId, translationRequestLanguage)[message.id]?.text)\n      : undefined;\n    const canTranslate = !hasTranslation && selectCanTranslateMessage(global, message, detectedLanguage);\n    const isChatTranslated = selectRequestedChatTranslationLanguage(global, message.chatId);\n\n    const isInSavedMessages = selectIsChatWithSelf(global, message.chatId);\n\n    const poll = selectPollFromMessage(global, message);\n    const storyData = message.content.storyData;\n    const story = storyData ? selectPeerStory(global, storyData.peerId, storyData.id) : undefined;\n\n    const canGift = selectCanGift(global, message.chatId);\n\n    return {\n      threadId,\n      chat,\n      availableReactions,\n      topReactions,\n      defaultTagReactions: defaultTags,\n      noOptions,\n      canReport,\n      canSendNow: isScheduled,\n      canReschedule: isScheduled,\n      canReply: !isPinned && !isScheduled && canReplyGlobally,\n      canPin: !isScheduled && canPin,\n      canUnpin: !isScheduled && canUnpin,\n      canDelete,\n      canEdit: !isPinned && canEdit,\n      canForward: !isScheduled && canForward,\n      canFaveSticker: !isScheduled && canFaveSticker,\n      canUnfaveSticker: !isScheduled && canUnfaveSticker,\n      canCopy: (canCopyNumber || (!isProtected && canCopy)),\n      canCopyLink: !isScheduled && canCopyLink,\n      canSelect,\n      canDownload: !isProtected && canDownload,\n      canSaveGif: !isProtected && canSaveGif,\n      canRevote,\n      canClosePoll: !isScheduled && canClosePoll,\n      activeDownloads,\n      canShowSeenBy,\n      canLoadReadDate,\n      shouldRenderShowWhen,\n      enabledReactions: chat?.isForbidden ? undefined : chatFullInfo?.enabledReactions,\n      reactionsLimit,\n      isPrivate,\n      isCurrentUserPremium,\n      hasFullInfo: Boolean(chatFullInfo),\n      canShowReactionsCount,\n      canShowReactionList: !isLocal && !isAction\n        && !isScheduled && chat?.id !== SERVICE_NOTIFICATIONS_USER_ID && !hasTtl,\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      customEmojiSetsInfo,\n      customEmojiSets,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, message.chatId),\n      canTranslate,\n      canShowOriginal: hasTranslation && !isChatTranslated,\n      canSelectLanguage: hasTranslation && !isChatTranslated,\n      isMessageTranslated: hasTranslation,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      isInSavedMessages,\n      isChannel,\n      canReplyInChat,\n      isWithPaidReaction: chatFullInfo?.isPaidReactionAvailable,\n      poll,\n      story,\n      userFullName,\n      canGift,\n    };\n  },\n)(ContextMenuContainer));\n","export function isSelectionRangeInsideMessage(range: Range) {\n  const ancestor = range.commonAncestorContainer;\n  const el = ancestor.nodeType === Node.TEXT_NODE\n    ? ancestor.parentNode! as Element\n    : ancestor as Element;\n\n  return Boolean(el.closest('.message-content-wrapper .text-content'))\n    && !(Boolean(el.closest('.EmbeddedMessage')) || Boolean(el.closest('.WebPage')));\n}\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  isOutside?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  isOutside,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isOutside && styles.outside,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            isOutside={isOutside}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftTransfer') {\n    const { inputSavedGift, recipientId } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    const peer = selectPeer(global, recipientId);\n    if (!savedGift || !peer) return undefined;\n\n    return {\n      type: 'stargiftTransfer',\n      inputSavedGift: savedGift,\n      recipient: peer,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, boostPeerId } = action;\n\n  return {\n    id: transactionId,\n    stars: {\n      amount: stars,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: boostPeerId,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\nimport { getTranslationFn } from '../../util/localization';\nimport { prepareSearchWordsForNeedle } from '../../util/searchWords';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\nimport { getGlobal } from '..';\nimport { getChatTitle } from './chats';\nimport { getPeerFullTitle } from './messages';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function filterPeersByQuery({\n  ids,\n  query,\n  type = 'peer',\n} : {\n  ids: string[];\n  query: string | undefined;\n  type?: 'chat' | 'user' | 'peer';\n}) {\n  if (!query) {\n    return ids;\n  }\n  const global = getGlobal();\n  const lang = getTranslationFn();\n\n  const searchWords = prepareSearchWordsForNeedle(query);\n\n  const selectorFn = type === 'chat' ? selectChat : type === 'user' ? selectUser : selectPeer;\n\n  return ids.filter((id) => {\n    const peer = selectorFn(global, id);\n    if (!peer) {\n      return false;\n    }\n\n    const localizedTitle = isApiPeerChat(peer)\n      ? getChatTitle(lang, peer)\n      : id === global.currentUserId ? lang('SavedMessages') : undefined;\n    const isFoundInLocalized = localizedTitle ? searchWords(localizedTitle) : undefined;\n\n    const name = getPeerFullTitle(lang, peer);\n\n    return isFoundInLocalized\n      || (name && searchWords(name))\n      || Boolean(peer.usernames?.find(({ username }) => searchWords(username)));\n  });\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useEffect, useState } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ThemeKey } from '../types';\n\nimport { CUSTOM_BG_CACHE_NAME, DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../config';\nimport * as cacheApi from '../util/cacheApi';\nimport { preloadImage } from '../util/files';\n\nconst useCustomBackground = (theme: ThemeKey, settingValue?: string) => {\n  const { setThemeSettings } = getActions();\n  const [value, setValue] = useState(settingValue);\n\n  useEffect(() => {\n    if (!settingValue) {\n      return;\n    }\n\n    if (settingValue.startsWith('#')) {\n      setValue(settingValue);\n    } else {\n      cacheApi.fetch(CUSTOM_BG_CACHE_NAME, theme, cacheApi.Type.Blob)\n        .then((blob) => {\n          const url = URL.createObjectURL(blob);\n          preloadImage(url)\n            .then(() => {\n              setValue(`url(${url})`);\n            });\n        })\n        .catch(() => {\n          setThemeSettings({\n            theme,\n            background: undefined,\n            backgroundColor: undefined,\n            isBlurred: true,\n            patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n          });\n        });\n    }\n  }, [settingValue, theme]);\n\n  return settingValue ? value : undefined;\n};\n\nexport default useCustomBackground;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current!;\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      function cleanup() {\n        container.style.scrollSnapType = '';\n        delete container.dataset.scrollId;\n        stopById.delete(id);\n      }\n\n      animate(() => {\n        if (isStopped) {\n          cleanup();\n          return false;\n        }\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          cleanup();\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n// https://stackoverflow.com/a/64090995\nexport function hsl2rgb([h, s, l]: [number, number, number]): [number, number, number] {\n  let a = s * Math.min(l, 1 - l);\n  let f = (n: number, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  const rgb = hsl2rgb([hue * 360, saturation, value]);\n  const hex = rgb2hex(rgb.map((c) => Math.floor(c * 255)) as [number, number, number]);\n  return `#${hex}66`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const numberToHexColor = (color: number): string => {\n  return `#${color.toString(16).padStart(6, '0')}`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html\n    : withMarkdownLinks ? parseMarkdown(parseMarkdownLinks(html)) : parseMarkdown(html);\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  parsedHtml = parsedHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  return parsedHtml;\n}\n\nfunction parseMarkdownLinks(html: string) {\n  return html.replace(new RegExp(`\\\\[([^\\\\]]+?)]\\\\((${RE_LINK_TEMPLATE}+?)\\\\)`, 'g'), (_, text, link) => {\n    const url = link.includes('://') ? link : link.includes('@') ? `mailto:${link}` : `https://${link}`;\n    return `<a href=\"${url}\">${text}</a>`;\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Timestamp) {\n    const timestamp = Number((node as HTMLElement).dataset.timestamp);\n    if (Number.isNaN(timestamp)) {\n      return {\n        index,\n        entity: undefined,\n      };\n    }\n\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        timestamp,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","let scrollLockEl: HTMLElement | null | undefined;\nlet excludedClosestSelector: string | undefined;\n\nconst IGNORED_KEYS: Record<string, boolean> = {\n  Down: true,\n  ArrowDown: true,\n  Up: true,\n  ArrowUp: true,\n  Left: true,\n  ArrowLeft: true,\n  Right: true,\n  ArrowRight: true,\n  ' ': true,\n  PageUp: true,\n  PageDown: true,\n  End: true,\n  Home: true,\n  Tab: true,\n};\n\nfunction isTextBox(target: EventTarget | null) {\n  if (!target || !(target instanceof HTMLElement)) return false;\n  const element = target;\n  const tagName = element.tagName.toLowerCase();\n  if (tagName === 'textarea') return true;\n  if (tagName !== 'input') return false;\n  const type = element.getAttribute('type');\n  if (!type) return false;\n  const inputTypes = [\n    'text', 'password', 'number', 'email', 'tel', 'url',\n    'search', 'date', 'datetime', 'datetime-local', 'time', 'month', 'week',\n  ];\n  return inputTypes.indexOf(type.toLowerCase()) > -1;\n}\n\nexport const getTouchY = (e: WheelEvent | TouchEvent | React.WheelEvent | React.TouchEvent) => {\n  return ('changedTouches' in e ? e.changedTouches[0].clientY : 0);\n};\n\nconst preventDefault = (e: WheelEvent | TouchEvent) => {\n  const deltaY = 'deltaY' in e ? e.deltaY : getTouchY(e);\n\n  if (\n    !scrollLockEl\n    // Allow overlay scrolling\n    || !scrollLockEl.contains(e.target as HTMLElement)\n    // Prevent top overscroll\n    || (scrollLockEl.scrollTop <= 0 && deltaY <= 0)\n    // Prevent bottom overscroll\n    || (scrollLockEl.scrollTop >= (scrollLockEl.scrollHeight - scrollLockEl.offsetHeight) && deltaY >= 0)\n  ) {\n    if (excludedClosestSelector && (e.target as HTMLElement).closest(excludedClosestSelector)) return;\n    e.preventDefault();\n  }\n};\n\nfunction preventDefaultForScrollKeys(e: KeyboardEvent) {\n  if (IGNORED_KEYS[e.key] && !isTextBox(e.target)) {\n    e.preventDefault();\n  }\n}\n\nexport function disableScrolling(el?: HTMLElement | null, _excludedClosestSelector?: string) {\n  scrollLockEl = el;\n  excludedClosestSelector = _excludedClosestSelector;\n  // Disable scrolling in Chrome\n  document.addEventListener('wheel', preventDefault, { passive: false });\n  document.addEventListener('touchmove', preventDefault, { passive: false });\n  document.onkeydown = preventDefaultForScrollKeys;\n\n  return enableScrolling;\n}\n\nexport function enableScrolling() {\n  scrollLockEl = undefined;\n  excludedClosestSelector = undefined;\n  document.removeEventListener('wheel', preventDefault); // Enable scrolling in Chrome\n  document.removeEventListener('touchmove', preventDefault);\n  // eslint-disable-next-line no-null/no-null\n  document.onkeydown = null;\n}\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"outside\":\"Hqw10FGl\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","_ref","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","getStickerMediaHash","previewBlobUrl","useMedia","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","DEFAULT_LIMIT","peers","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","peer","Avatar","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","onClick","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","select","action","event","preventDefault","stopEvent","autoComplete","type","id","tabIndex","value","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","title","Icon","name","Button","ripple","disabled","withGlobal","global","_ref2","peerId","forceShowSelf","selectPeer","user","selectUser","isSavedMessages","isSelf","icon","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","withPeerColors","withEmojiStatus","itemClassName","apiPeer","anyPeer","chat","isApiPeerChat","iconElement","titleElement","titleText","getPeerTitle","FullNameTitle","fullClassName","isForum","isAvatarSquare","getPeerColorClass","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","getStickerFromGift","gift","attributes","find","attr","getTotalGiftAvailability","availabilityTotal","totalCount","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","renderMessageText","message","highlight","emojiSize","asPreview","truncateLength","isProtected","forcePlayback","shouldRenderAsHtml","isForMediaViewer","threadId","maxTimestamp","entities","content","contentNotSupportedText","getMessageText","trimText","messageKey","getMessageKey","renderTextWithEntities","containerId","messageId","chatId","renderMessageSummary","noEmoji","arguments","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","some","ApiMessageEntityTypes","Spoiler","hasCustomEmoji","CustomEmoji","getMessageSummaryText","renderText","emoji","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","Array","isArray","filter","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","currentUserId","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","date","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withPeerUsernames","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","requestMeasure","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","useCallback","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","username","usernames","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","header","PeerChip","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","RippleEffect","IS_IOS","backgroundColors","patternColor","patternIcon","clearBottomSector","containerRef","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","floor","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","random","entry","contentRect","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","documentId","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","from","generateRandomDropPath","path","withSharedAnimation","onAnimationEnd","alt","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","effectSize","withEffectOnly","shouldPause","shouldLoop","loopLimit","observeIntersection","stopActiveReaction","getActions","isCustom","availableReaction","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","effectId","stickers","isIntersecting","useIsIntersecting","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","root","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","observeIntersectionForPlaying","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","Fragment","effect","CustomEmojiEffect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","div","document","ALLOWED_QUOTE_ENTITIES","Bold","Italic","Underline","Strike","getSelectionAsFormattedText","range","html","clonedSelection","cloneContents","appendChild","commonAncestorContainer","nodeType","Node","ELEMENT_NODE","classList","contains","currentElement","parentElement","tag","tagName","toLowerCase","entityType","dataset","wrapHtmlWithMarkupTags","innerHTML","replace","getSelectionAsHtml","entity","stripEntitiesForQuote","parseHtmlAsFormattedText","isOpen","PinMessageModal","useModuleLoader","Bundles","Extra","getCopyLabel","hasSelection","editDate","shouldRenderSkeleton","MenuItem","Skeleton","formatDateAtTime","shouldRenderShowWhen","canLoadReadDate","closeContextMenu","openPrivacySettingsNoticeModal","readDate","Transition","activeKey","handleOpenModal","isReadDate","isReactionPickerOpen","topReactions","defaultTagReactions","poll","story","isPrivate","isCurrentUserPremium","enabledReactions","isWithPaidReaction","reactionsLimit","anchor","targetHref","canSendNow","canReschedule","canBuyPremium","canReply","canQuote","canEdit","noReplies","canPin","canUnpin","canDelete","canForward","canReport","canFaveSticker","canUnfaveSticker","canCopy","canCopyLink","canSelect","canDownload","canSaveGif","canRevote","canClosePoll","canTranslate","canShowOriginal","canSelectLanguage","isDownloading","repliesThreadInfo","canShowSeenBy","canShowReactionsCount","canShowReactionList","seenByRecentPeers","customEmojiSets","canPlayAnimatedEmojis","isInSavedMessages","onReply","onOpenThread","onEdit","onPin","onUnpin","onForward","onDelete","onFaveSticker","onReport","onUnfaveSticker","onSelect","onSend","onReschedule","onClose","onCloseAnimationEnd","onCopyLink","onCopyNumber","onDownload","onSaveGif","onCancelVote","onClosePoll","onShowSeenBy","onShowReactors","onToggleReaction","onSendPaidReaction","onShowPaidReactionModal","onCopyMessages","onReactionPickerOpen","onTranslate","onShowOriginal","onSelectLanguage","userFullName","canGift","showNotification","openStickerSet","openCustomEmojiSets","loadStickers","openGiftModal","menuRef","scrollableRef","noReactions","areReactionsPossible","withReactions","isEdited","seenByDates","isPremiumGift","isGiftCode","isStarGift","isStarGiftUnique","shouldShowGiftButton","isUserId","areItemsHidden","hideItems","isReady","markIsReady","unmarkIsReady","isDesktop","seenByDatesCount","Object","keys","handleAfterCopy","handleGiftClick","forUserId","customEmojiSet","stickerSetInfo","accessHash","handleOpenCustomEmojiSets","shortName","setIds","set","copyOptions","href","afterEffect","options","photo","getMessagePhoto","getMessageWebPageVideo","getMessageWebPagePhoto","contact","getMessageContact","getPhotoMediaHash","canImageBeCopied","hasMediaLocalBlobUrl","CLIPBOARD_ITEM_SUPPORTED","IS_SAFARI","selection","getSelection","label","handler","Promise","resolve","mediaLoader","blobUrl","copyImageToClipboard","copyTextToClipboard","anchorNode","parentNode","closest","toString","selectionParentNode","selectedMessageElement","getMessageHtmlId","checkMessageHasSelection","messageIds","getMessageIdsForSelectedText","execCommand","clipboardText","copyHtmlToClipboard","join","getMessageTextWithSpoilers","getMessageCopyOptions","groupStatefulContent","getTriggerElement","querySelector","getRootElement","getMenuElement","getLayout","extraHeightAudioPlayer","offsetHeight","middleColumn","getElementById","middleColumnComputedStyle","getComputedStyle","extraHeightPinned","parseFloat","getPropertyValue","extraPaddingX","extraTopPadding","extraMarginTop","shouldAvoidNegativePosition","menuElMinWidth","disableScrolling","handleOpenMessageReactionPicker","position","Menu","withMaxHeight","ReactionSelector","allAvailableReactions","currentReactions","results","onShowMore","isOutgoing","messagesCount","option","withPreventDefaultOnMouseDown","destructive","MenuSeparator","inline","withWrap","reactors","count","getUserFullName","AvatarList","ReadTimeMenuItem","LastEditTimeMenuItem","_ref7","messageListType","detectedLanguage","selectCurrentMessageList","defaultTags","activeDownloads","selectActiveDownloads","chatFullInfo","selectChatFullInfo","seenByExpiresAt","seenByMaxChatMembers","maxUniqueReactions","readDateExpiresAt","appConfig","noOptions","canReplyGlobally","selectAllowedMessageActionsSlow","selectCanForwardMessage","isOwn","isOwnMessage","chatBot","selectBot","isBot","isMessageUnread","selectIsMessageUnread","isReadDateRestricted","isReadDateRestrictedByMe","isPinned","isScheduled","isChannel","isChatChannel","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","topic","selectTopic","canSendText","isUserRightBanned","canReplyInChat","getCanPostInChat","isLocal","isMessageLocal","hasTtl","hasMessageTtl","isChatGroup","membersCount","isAction","isActionMessage","areReactionsEmpty","canSeeList","selectIsMessageProtected","canCopyNumber","selectIsCurrentUserPremium","customEmojiSetsInfo","selectMessageCustomEmojiSets","customEmojiSetsNotFiltered","selectStickerSet","every","translationRequestLanguage","selectRequestedMessageTranslationLanguage","hasTranslation","selectMessageTranslations","selectCanTranslateMessage","isChatTranslated","selectRequestedChatTranslationLanguage","selectIsChatWithSelf","selectPollFromMessage","storyData","selectPeerStory","selectCanGift","isForbidden","hasFullInfo","SERVICE_NOTIFICATIONS_USER_ID","selectIsPremiumPurchaseBlocked","canScheduleUntilOnline","selectCanScheduleUntilOnline","isMessageTranslated","selectCanPlayAnimatedEmojis","selectIsReactionPickerOpen","isPaidReactionAvailable","album","openThread","updateDraftReplyInfo","setEditingId","pinMessage","openForwardMenu","openReplyMenu","faveSticker","unfaveSticker","toggleMessageSelection","sendScheduledMessages","rescheduleMessage","downloadMedia","cancelMediaDownload","loadSeenBy","openSeenByModal","openReactorListModal","loadFullChat","loadReactors","copyMessagesByIds","saveGif","cancelPollVote","closePoll","toggleReaction","requestMessageTranslation","showOriginalMessage","openChatLanguageModal","openMessageReactionPicker","openPremiumModal","loadOutboxReadDate","copyMessageLink","openDeleteMessageModal","addLocalPaidReaction","openPaidReactionModal","reportMessages","useShowTransition","isMenuOpen","setIsMenuOpen","isPinModalOpen","setIsPinModalOpen","isClosePollDialogOpen","openClosePollDialog","closeClosePollDialog","canQuoteSelection","setCanQuoteSelection","requestCalendar","calendar","useSchedule","chatsById","chats","byId","usersById","users","recentReactions","uniqueReactors","PREVIEW_AVATAR_COUNT","messages","msg","downloadableMedia","getMessageDownloadableMedia","getIsDownloading","selectionRange","rangeCount","getRangeAt","collapsed","ancestor","TEXT_NODE","isSelectionRangeInsideMessage","selectionText","messageText","trim","startOffset","endOffset","closeMenu","handleDelete","_ref3","isSchedule","closePinModal","handleReply","quoteText","replyToMsgId","replyToPeerId","fromChatId","handleOpenThread","handleEdit","handlePin","handleUnpin","isUnpin","handleForward","_ref4","handleFaveSticker","handleUnfaveSticker","handleCancelVote","handlePollClose","handleSelectMessage","params","childMessageIds","_ref5","withShift","handleScheduledMessageSend","handleRescheduleMessage","scheduledAt","handleOpenCalendar","handleOpenSeenByModal","handleOpenReactorListModal","handleCopyMessages","handleCopyLink","shouldIncludeThread","MAIN_THREAD_ID","shouldIncludeGrouped","handleCopyNumber","phoneNumber","handleDownloadClick","media","originMessage","handleSaveGif","video","getMessageVideo","gif","handleToggleReaction","initialSection","shouldAddToRecent","handleSendPaidReaction","handlePaidReactionModalOpen","handleReactionPickerOpen","handleTranslate","handleShowOriginal","handleSelectLanguage","reportMessageIds","_ref6","handleReport","scheduledMaxDate","setFullYear","getFullYear","MessageContextMenu","ConfirmDialog","confirmLabel","confirmHandler","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","useFocusMessage","elementRef","isFocused","focusDirection","noFocusHighlight","isResizingContainer","isJustAdded","isQuote","scrollTargetPosition","isRelocatedRef","useLayoutEffect","isRelocated","messagesContainer","isToBottom","scrollPosition","exec","maxDistance","result","animateScroll","element","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","addExtraClass","requestForcedReflow","REACTION_SIZE","chosen","noAppearAnimation","isContextMenuOpen","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","onMouseDown","onContextMenu","LOCAL_TGS_URLS","StarReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","isFirstPlay","unmarkIsFirstPlay","isActivated","activate","deactivate","onMouseEnter","cn","createClassNameBuilder","isInStoryViewer","isForEffects","effectReactions","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","handleOpenPremiumModal","hintText","parts","split","Link","ReactionSelectorReaction","getReactionKey","ReactionSelectorCustomReaction","color","MAX_EFFECT_COUNT","IS_ANDROID","QUALITY","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","noMountTransition","withShouldRender","newEffectsIds","teactFastList","StarIcon","StarReactionEffect","nonInteractive","quality","selectStarsState","stars","recentReactors","chosenClassName","isOutside","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","stopPropagation","prevReaction","amount","button","balance","originReaction","startX","startY","currentScale","Number","scale","cancel","animate","offset","duration","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","outside","isReactionChosen","Sparkles","preset","PaidReactionEmoji","animatedEmoji","AnimatedCounter","formatIntegerCompact","paidCounter","ReactionAnimatedEmoji","counter","maxWidth","metaChildren","noRecentReactors","tags","updateMiddleSearch","performMiddleSearch","areTags","withServiceReactions","reduce","acc","recentReactorsByReactionKey","recentReaction","reactionKey","shouldHideRecentReactors","isChosen","update","savedTag","paidLocalCount","localId","actionText","cacheBreaker","payload","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","ReactionButton","submitText","initialValue","setText","handleTextChange","handleSubmit","Modal","isSlim","teactExperimentControlled","isText","withCount","editSavedReactionTag","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","contextMenuAnchor","body","withPortal","tagText","tail","tailFill","PromptDialog","autoClose","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","userId","currency","purpose","hash","userIds","boostChannelId","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","recipientId","recipient","inputGift","savedId","buildStarsTransactionCustomPeer","avatarIcon","isCustomPeer","titleKey","subtitleKey","peerColorId","customPeerAvatarColor","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","number","abs","formatStarsAmount","getStarsTransactionFromGift","transactionId","senderId","isGift","isMyGift","getPrizeStarsTransactionFromGiveaway","boostPeerId","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","isApiPeerUser","filterPeersByQuery","ids","query","getTranslationFn","searchWords","prepareSearchWordsForNeedle","selectorFn","localizedTitle","getChatTitle","isFoundInLocalized","getPeerFullTitle","isSupport","isContact","callback","delay","savedCallback","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","fastBlur","onload","useCustomBackground","theme","settingValue","setThemeSettings","setValue","startsWith","cacheApi","CUSTOM_BG_CACHE_NAME","Blob","blob","url","URL","createObjectURL","catch","background","backgroundColor","isBlurred","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","useEnsureMessage","replyOriginForId","loadMessage","useFolderManagerForOrderedIds","folderId","addOrderedIdsCallback","getOrderedIds","useFolderManagerForUnreadCounters","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","shouldPreventDefault","handleScroll","deltaX","scrollLeft","deltaY","addEventListener","passive","removeEventListener","prevRef","lastRef","shouldFocusOnResize","focusLastMessage","messageHeightRef","handleResize","lastHeight","newHeight","isAnimatingScroll","beginHeavyAnimation","resizeDiff","scrollHeight","scrollTop","round","throttledResize","useThrottledCallback","useRunDebounced","ms","noFirst","noLast","deps","useDebouncedCallback","cb","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","handleMessageSchedule","isWhenOnline","getTime","getServerTimeOffset","handleMessageScheduleUntilOnline","SCHEDULED_WHEN_ONLINE","handleCloseCalendar","whenScheduled","scheduledDefaultDate","setSeconds","setMilliseconds","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSecondButtonClick","DEFAULT_DURATION","stopById","Map","animateHorizontalScroll","getAttribute","containerWidth","scrollWidth","scrollId","remainingPath","get","isStopped","scrollSnapType","startAt","cleanup","delete","t","currentPath","transition","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","newScrollTop","cancelScrollBlockingAnimation","hex2rgb","param","parseInt","substring","rgb2hex","p0","p1","p2","rgb2hsb","g","b","h","s","v","hsb2rgb","f","p","q","async","getAverageColor","defaultRGB","data","rgb","context","image","naturalHeight","naturalWidth","getImageData","blockSize","getColorLuma","rgbColor","getPatternColor","hue","saturation","l","a","n","k","hsl2rgb","c","convertToRGBA","getTextColor","selectedFragments","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","children","node","querySelectorAll","messageEl","firstChild","removeChild","pop","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","ENTITY_CLASS_BY_NODE_NAME","B","STRONG","I","EM","INS","U","S","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","MAX_TAG_DEEPNESS","withMarkdownLinks","skipMarkdown","fragment","parsedHtml","IS_EMOJI_SUPPORTED","parseMarkdown","RegExp","RE_LINK_TEMPLATE","_","link","parseMarkdownLinks","fixImageContent","innerText","textIndex","recursionDeepness","addEntity","COMMENT_NODE","index","rawText","HTMLElement","nodeName","MentionName","Url","Email","Phone","textContent","TextUrl","getEntityTypeFromNode","rawIndex","language","Timestamp","timestamp","isNaN","getEntityDataFromNode","hasChildNodes","childNodes","replaceWith","scrollLockEl","excludedClosestSelector","IGNORED_KEYS","ArrowDown","ArrowUp","Left","ArrowLeft","Right","ArrowRight","PageUp","PageDown","End","Home","Tab","changedTouches","getTouchY","preventDefaultForScrollKeys","isTextBox","_excludedClosestSelector","onkeydown","enableScrolling","offsetTop","offsetLeft","offsetParent","isElementInViewport","display","windowHeight","windowSize"],"sourceRoot":""}