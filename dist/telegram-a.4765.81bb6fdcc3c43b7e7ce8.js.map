{"version":3,"file":"telegram-a.4765.81bb6fdcc3c43b7e7ce8.js","mappings":"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","sources":["webpack://telegram-t/./src/components/ui/AvatarEditable.tsx","webpack://telegram-t/./src/components/ui/Badge.module.scss?a5a8","webpack://telegram-t/./src/components/ui/Badge.tsx","webpack://telegram-t/./src/components/ui/CheckboxGroup.tsx","webpack://telegram-t/./src/components/ui/ConfirmDialog.tsx","webpack://telegram-t/./src/components/ui/CropModal.tsx","webpack://telegram-t/./src/components/ui/Draggable.module.scss?804f","webpack://telegram-t/./src/components/ui/Draggable.tsx","webpack://telegram-t/./src/components/ui/FloatingActionButton.tsx","webpack://telegram-t/./src/components/ui/InfiniteScroll.tsx","webpack://telegram-t/./src/components/ui/ListItem.tsx","webpack://telegram-t/./src/components/ui/MenuSeparator.module.scss?43c3","webpack://telegram-t/./src/components/ui/MenuSeparator.tsx","webpack://telegram-t/./src/components/ui/Modal.tsx","webpack://telegram-t/./src/components/ui/RoundTimer.module.scss?7ffc","webpack://telegram-t/./src/components/ui/RoundTimer.tsx","webpack://telegram-t/./src/components/ui/Notification.tsx","webpack://telegram-t/./src/components/ui/ProgressSpinner.tsx","webpack://telegram-t/./src/components/ui/Radio.tsx","webpack://telegram-t/./src/components/ui/RadioGroup.tsx","webpack://telegram-t/./src/components/ui/RangeSlider.tsx","webpack://telegram-t/./src/components/ui/RangeSliderWithMarks.module.scss?5535","webpack://telegram-t/./src/components/ui/RangeSliderWithMarks.tsx","webpack://telegram-t/./src/components/ui/ResponsiveHoverButton.tsx","webpack://telegram-t/./src/components/ui/SearchInput.tsx","webpack://telegram-t/./src/components/ui/Select.tsx","webpack://telegram-t/./src/components/ui/SelectAvatar.module.scss?3384","webpack://telegram-t/./src/components/ui/SelectAvatar.tsx","webpack://telegram-t/./src/components/ui/Separator.module.scss?e4cd","webpack://telegram-t/./src/components/ui/Separator.tsx","webpack://telegram-t/./src/components/ui/ShowMoreButton.tsx","webpack://telegram-t/./src/components/ui/ShowTransition.tsx","webpack://telegram-t/./src/components/ui/Switcher.tsx","webpack://telegram-t/./src/components/ui/Tab.tsx","webpack://telegram-t/./src/components/ui/TabList.tsx","webpack://telegram-t/./src/components/ui/TextArea.tsx","webpack://telegram-t/./src/components/ui/TextTimer.tsx","webpack://telegram-t/./src/components/ui/Toggle.module.scss?0590","webpack://telegram-t/./src/components/ui/Toggle.tsx","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.module.scss?3a84","webpack://telegram-t/./src/components/ui/placeholder/PlaceholderChatInfo.tsx","webpack://telegram-t/./src/components/ui/placeholder/Skeleton.tsx"],"sourcesContent":["import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Icon from '../common/icons/Icon';\nimport CropModal from './CropModal';\n\nimport './AvatarEditable.scss';\n\ninterface OwnProps {\n  title?: string;\n  disabled?: boolean;\n  isForForum?: boolean;\n  currentAvatarBlobUrl?: string;\n  onChange: (file: File) => void;\n}\n\nconst AvatarEditable: FC<OwnProps> = ({\n  title = 'Change your profile picture',\n  disabled,\n  isForForum,\n  currentAvatarBlobUrl,\n  onChange,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n  const [croppedBlobUrl, setCroppedBlobUrl] = useState<string | undefined>(currentAvatarBlobUrl);\n\n  useEffect(() => {\n    setCroppedBlobUrl(currentAvatarBlobUrl);\n  }, [currentAvatarBlobUrl]);\n\n  function handleSelectFile(event: ChangeEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n\n    if (!target?.files?.[0]) {\n      return;\n    }\n\n    setSelectedFile(target.files[0]);\n    target.value = '';\n  }\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n\n    if (croppedBlobUrl && croppedBlobUrl !== currentAvatarBlobUrl) {\n      URL.revokeObjectURL(croppedBlobUrl);\n    }\n    setCroppedBlobUrl(URL.createObjectURL(croppedImg));\n  }, [croppedBlobUrl, currentAvatarBlobUrl, onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const labelClassName = buildClassName(\n    croppedBlobUrl && 'filled',\n    disabled && 'disabled',\n    isForForum && 'rounded-square',\n  );\n\n  return (\n    <div className=\"AvatarEditable\">\n      <label\n        className={labelClassName}\n        role=\"button\"\n        tabIndex={0}\n        title={title}\n      >\n        <input\n          type=\"file\"\n          onChange={handleSelectFile}\n          accept=\"image/png, image/jpeg\"\n        />\n        <Icon name=\"camera-add\" />\n        {croppedBlobUrl && <img src={croppedBlobUrl} draggable={false} alt=\"Avatar\" />}\n      </label>\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </div>\n  );\n};\n\nexport default memo(AvatarEditable);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Y3ZoW17O\",\"default\":\"DWjOG2Ze\",\"alternate\":\"Lq67O2D2\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\nimport ShowTransition from './ShowTransition';\n\nimport styles from './Badge.module.scss';\n\ntype OwnProps = {\n  text?: string;\n  className?: string;\n  isAlternateColor?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({\n  text,\n  className,\n  isAlternateColor,\n}) => {\n  return (\n    <ShowTransition\n      className={buildClassName(styles.root, isAlternateColor ? styles.alternate : styles.default, className)}\n      isOpen={Boolean(text)}\n    >\n      {text && <AnimatedCounter text={text} />}\n    </ShowTransition>\n  );\n};\n\nexport default memo(Badge);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\n\nimport type { ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Checkbox from './Checkbox';\n\nexport type IRadioOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  value: string;\n  nestedOptions?: IRadioOption[];\n  user?: ApiUser;\n};\n\ntype OwnProps = {\n  id?: string;\n  options: IRadioOption[];\n  selected?: string[];\n  disabled?: boolean;\n  nestedCheckbox?: boolean;\n  loadingOptions?: string[];\n  isRound?: boolean;\n  onChange: (value: string[]) => void;\n  className?: string;\n};\n\nconst CheckboxGroup: FC<OwnProps> = ({\n  id,\n  options,\n  selected = [],\n  disabled,\n  nestedCheckbox,\n  loadingOptions,\n  isRound,\n  onChange,\n  className,\n}) => {\n  const [values, setValues] = useState<string[]>(selected || []);\n\n  const handleChange = useLastCallback((event: ChangeEvent<HTMLInputElement>, nestedOptionList?: IRadioOption) => {\n    const { value, checked } = event.currentTarget;\n    let newValues: string[];\n\n    if (checked) {\n      newValues = [...values, value];\n      if (nestedOptionList && value) {\n        newValues.push(nestedOptionList.value);\n      }\n      if (nestedOptionList && value === nestedOptionList.value) {\n        nestedOptionList.nestedOptions?.forEach((nestedOption) => {\n          if (!newValues.includes(nestedOption.value)) {\n            newValues.push(nestedOption.value);\n          }\n        });\n      }\n    } else {\n      newValues = values.filter((v) => v !== value);\n      if (nestedOptionList && value === nestedOptionList.value) {\n        nestedOptionList.nestedOptions?.forEach((nestedOption) => {\n          newValues = newValues.filter((v) => v !== nestedOption.value);\n        });\n      } else if (nestedOptionList) {\n        const nestedOptionValues = nestedOptionList.nestedOptions?.map((nestedOption) => nestedOption.value) || [];\n        const hasOtherNestedValuesChecked = nestedOptionValues.some((nestedValue) => newValues.includes(nestedValue));\n        if (!hasOtherNestedValuesChecked) {\n          newValues = newValues.filter((v) => v !== nestedOptionList.value);\n        }\n      }\n    }\n\n    setValues(newValues);\n    onChange(newValues);\n  });\n  const getCheckedNestedCount = useLastCallback((nestedOptions: IRadioOption[]) => {\n    const checkedCount = nestedOptions?.filter((nestedOption) => values.includes(nestedOption.value)).length;\n    return checkedCount > 0 ? checkedCount : nestedOptions.length;\n  });\n\n  return (\n    <div id={id} className={buildClassName('radio-group', className)}>\n      {options.map((option) => {\n        return (\n          <Checkbox\n            label={option.label}\n            subLabel={option.subLabel}\n            value={option.value}\n            checked={selected.indexOf(option.value) !== -1}\n            disabled={option.disabled || disabled}\n            isLoading={loadingOptions ? loadingOptions.indexOf(option.value) !== -1 : undefined}\n            onChange={handleChange}\n            nestedCheckbox={nestedCheckbox}\n            nestedCheckboxCount={getCheckedNestedCount(option.nestedOptions ?? [])}\n            nestedOptionList={option}\n            values={values}\n            isRound={isRound}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CheckboxGroup);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\nimport Modal from './Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n  title?: string;\n  noDefaultTitle?: boolean;\n  header?: TeactNode;\n  textParts?: TextPart;\n  text?: string;\n  confirmLabel?: TeactNode;\n  confirmIsDestructive?: boolean;\n  isConfirmDisabled?: boolean;\n  isOnlyConfirm?: boolean;\n  areButtonsInColumn?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  confirmHandler: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  title,\n  noDefaultTitle,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmIsDestructive,\n  isConfirmDisabled,\n  isOnlyConfirm,\n  areButtonsInColumn,\n  className,\n  children,\n  confirmHandler,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm', className)}\n      title={(title || (!noDefaultTitle ? lang('Telegram') : undefined))}\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts || children}\n      <div\n        className={areButtonsInColumn ? 'dialog-buttons-column' : 'dialog-buttons mt-2'}\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n          disabled={isConfirmDisabled}\n        >\n          {confirmLabel}\n        </Button>\n        {!isOnlyConfirm && <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\n\nimport { DEBUG } from '../../config';\nimport { blobToDataUri, blobToFile } from '../../util/files';\n\nimport useLang from '../../hooks/useLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Modal from './Modal';\n\nimport './CropModal.scss';\n\n// Change to 'base64' to get base64-encoded string\nconst cropperResultOptions: Croppie.ResultOptions & { type: 'blob' } = {\n  type: 'blob',\n  quality: 1,\n  format: 'jpeg',\n  circle: false,\n  size: { width: 1024, height: 1024 },\n};\n\ntype ICroppie = typeof import('croppie');\nlet Croppie: ICroppie;\nlet croppiePromise: Promise<{ default: ICroppie }>;\n\nasync function ensureCroppie() {\n  if (!croppiePromise) {\n    croppiePromise = import('../../lib/croppie') as unknown as Promise<{ default: ICroppie }>;\n    Croppie = (await croppiePromise).default;\n  }\n\n  return croppiePromise;\n}\n\nlet cropper: Croppie;\n\nasync function initCropper(imgFile: Blob) {\n  try {\n    const cropContainer = document.getElementById('avatar-crop');\n    if (!cropContainer) {\n      return;\n    }\n\n    const { offsetWidth, offsetHeight } = cropContainer;\n\n    cropper = new Croppie(cropContainer, {\n      enableZoom: true,\n      boundary: {\n        width: offsetWidth,\n        height: offsetHeight,\n      },\n      viewport: {\n        width: offsetWidth - 16,\n        height: offsetHeight - 16,\n        type: 'circle',\n      },\n    });\n\n    const dataUri = await blobToDataUri(imgFile);\n    await cropper.bind({ url: dataUri });\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\ntype OwnProps = {\n  file?: Blob;\n  onChange: (file: File) => void;\n  onClose: () => void;\n};\n\nconst CropModal: FC<OwnProps> = ({ file, onChange, onClose }: OwnProps) => {\n  const [isCroppieReady, setIsCroppieReady] = useState(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    if (!isCroppieReady) {\n      ensureCroppie().then(() => setIsCroppieReady(true));\n\n      return;\n    }\n\n    initCropper(file);\n  }, [file, isCroppieReady]);\n\n  const handleCropClick = useCallback(async () => {\n    if (!cropper) {\n      return;\n    }\n\n    const result: Blob | string = await cropper.result(cropperResultOptions);\n    const croppedImg = typeof result === 'string' ? result : blobToFile(result, 'avatar.jpg');\n\n    onChange(croppedImg);\n  }, [onChange]);\n\n  return (\n    <Modal\n      isOpen={Boolean(file)}\n      onClose={onClose}\n      title={lang('CropperTitle')}\n      className=\"CropModal\"\n      hasCloseButton\n    >\n      {isCroppieReady ? (\n        <div id=\"avatar-crop\" />\n      ) : (\n        <Loading />\n      )}\n      <Button\n        className=\"confirm-button\"\n        round\n        color=\"primary\"\n        onClick={handleCropClick}\n        ariaLabel={lang('CropperApply')}\n      >\n        <Icon name=\"check\" />\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(CropModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kWQHzIMD\",\"isDragging\":\"k0c5WDAy\",\"knob\":\"UpzQzcvs\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\n\nimport styles from './Draggable.module.scss';\n\ntype TPoint = {\n  x: number;\n  y: number;\n};\n\ntype DraggableState = {\n  isDragging: boolean;\n  origin: TPoint;\n  translation: TPoint;\n  width?: number;\n  height?: number;\n};\n\ntype OwnProps = {\n  children: React.ReactNode;\n  onDrag: (translation: TPoint, id: number | string) => void;\n  onDragEnd: NoneToVoidFunction;\n  id: number | string;\n  style?: string;\n  knobStyle?: string;\n  isDisabled?: boolean;\n};\n\nconst ZERO_POINT: TPoint = { x: 0, y: 0 };\n\nconst Draggable: FC<OwnProps> = ({\n  children,\n  id,\n  onDrag,\n  onDragEnd,\n  style: externalStyle,\n  knobStyle,\n  isDisabled,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [state, setState] = useState<DraggableState>({\n    isDragging: false,\n    origin: ZERO_POINT,\n    translation: ZERO_POINT,\n  });\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    const { x, y } = getClientCoordinate(e);\n\n    setState({\n      ...state,\n      isDragging: true,\n      origin: { x, y },\n      width: ref.current?.offsetWidth,\n      height: ref.current?.offsetHeight,\n    });\n  };\n\n  const handleMouseMove = useCallback((e: MouseEvent | TouchEvent) => {\n    const { x, y } = getClientCoordinate(e);\n\n    const translation = {\n      x: x - state.origin.x,\n      y: y - state.origin.y,\n    };\n\n    setState((current) => ({\n      ...current,\n      translation,\n    }));\n\n    onDrag(translation, id);\n  }, [id, onDrag, state.origin.x, state.origin.y]);\n\n  const handleMouseUp = useCallback(() => {\n    setState((current) => ({\n      ...current,\n      isDragging: false,\n      width: undefined,\n      height: undefined,\n    }));\n\n    onDragEnd();\n  }, [onDragEnd]);\n\n  useEffect(() => {\n    if (state.isDragging && isDisabled) {\n      setState((current) => ({\n        ...current,\n        isDragging: false,\n        width: undefined,\n        height: undefined,\n      }));\n    }\n  }, [isDisabled, state.isDragging]);\n\n  useEffect(() => {\n    if (state.isDragging) {\n      window.addEventListener('touchmove', handleMouseMove);\n      window.addEventListener('mousemove', handleMouseMove);\n      window.addEventListener('touchend', handleMouseUp);\n      window.addEventListener('touchcancel', handleMouseUp);\n      window.addEventListener('mouseup', handleMouseUp);\n    } else {\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n      window.removeEventListener('touchcancel', handleMouseUp);\n      window.removeEventListener('mouseup', handleMouseUp);\n\n      setState((current) => ({\n        ...current,\n        translation: ZERO_POINT,\n      }));\n    }\n\n    return () => {\n      if (state.isDragging) {\n        window.removeEventListener('touchmove', handleMouseMove);\n        window.removeEventListener('mousemove', handleMouseMove);\n        window.removeEventListener('touchend', handleMouseUp);\n        window.removeEventListener('touchcancel', handleMouseUp);\n        window.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n  }, [handleMouseMove, handleMouseUp, state.isDragging]);\n\n  const fullClassName = buildClassName(styles.container, state.isDragging && styles.isDragging);\n\n  const cssStyles = useMemo(() => {\n    return buildStyle(\n      state.isDragging && `transform: translate(${state.translation.x}px, ${state.translation.y}px)`,\n      state.width ? `width: ${state.width}px` : undefined,\n      state.height ? `height: ${state.height}px` : undefined,\n      externalStyle,\n    );\n  }, [externalStyle, state.height, state.isDragging, state.translation.x, state.translation.y, state.width]);\n\n  return (\n    <div style={cssStyles} className={fullClassName} ref={ref}>\n      {children}\n\n      {!isDisabled && (\n        <div\n          aria-label={lang('i18n_dragToSort')}\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.knob, 'div-button', 'draggable-knob')}\n          onMouseDown={handleMouseDown}\n          onTouchStart={handleMouseDown}\n          style={knobStyle}\n        >\n          <Icon name=\"sort\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Draggable);\n\nfunction getClientCoordinate(e: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent) {\n  let x;\n  let y;\n\n  if ('touches' in e) {\n    x = e.touches[0].clientX;\n    y = e.touches[0].clientY;\n  } else {\n    x = e.clientX;\n    y = e.clientY;\n  }\n\n  return { x, y };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from './Button';\n\nimport './FloatingActionButton.scss';\n\ntype OwnProps = {\n  isShown: boolean;\n  className?: string;\n  color?: ButtonProps['color'];\n  ariaLabel?: ButtonProps['ariaLabel'];\n  disabled?: boolean;\n  onClick: () => void;\n  children: React.ReactNode;\n};\n\nconst FloatingActionButton: FC<OwnProps> = ({\n  isShown,\n  className,\n  color = 'primary',\n  ariaLabel,\n  disabled,\n  onClick,\n  children,\n}) => {\n  const lang = useOldLang();\n\n  const buttonClassName = buildClassName(\n    'FloatingActionButton',\n    isShown && 'revealed',\n    className,\n  );\n\n  return (\n    <Button\n      className={buttonClassName}\n      color={color}\n      round\n      disabled={disabled}\n      onClick={isShown && !disabled ? onClick : undefined}\n      ariaLabel={ariaLabel}\n      tabIndex={-1}\n      isRtl={lang.isRtl}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default FloatingActionButton;\n","import type { RefObject, UIEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { LoadMoreDirection } from '../../types';\n\nimport { requestForcedReflow } from '../../lib/fasterdom/fasterdom';\nimport buildStyle from '../../util/buildStyle';\nimport resetScroll from '../../util/resetScroll';\nimport { debounce } from '../../util/schedulers';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  style?: string;\n  className?: string;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  withAbsolutePositioning?: boolean;\n  maxHeight?: number;\n  noScrollRestore?: boolean;\n  noScrollRestoreOnTop?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  beforeChildren?: React.ReactNode;\n  scrollContainerClosest?: string;\n  children: React.ReactNode;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection; noScroll?: boolean }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  onWheel?: (e: React.WheelEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onDragOver?: (e: React.DragEvent<HTMLDivElement>) => void;\n  onDragLeave?: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  style,\n  className,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  withAbsolutePositioning,\n  maxHeight,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  noScrollRestore = false,\n  noScrollRestoreOnTop = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  beforeChildren,\n  children,\n  scrollContainerClosest,\n  onLoadMore,\n  onScroll,\n  onWheel,\n  onClick,\n  onKeyDown,\n  onDragOver,\n  onDragLeave,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements?: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated?: boolean;\n    currentAnchor?: HTMLDivElement | undefined;\n    currentAnchorTop?: number;\n  }>({});\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce((noScroll = false) => {\n        onLoadMore({ direction: LoadMoreDirection.Backwards, noScroll });\n      }, 1000, true, false),\n      debounce(() => {\n        onLoadMore({ direction: LoadMoreDirection.Forwards });\n      }, 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!loadMoreBackwards || !scrollContainer) {\n      return;\n    }\n\n    if (preloadBackwards > 0 && (!items || items.length < preloadBackwards)) {\n      loadMoreBackwards(true);\n      return;\n    }\n\n    const { scrollHeight, clientHeight } = scrollContainer;\n    if (clientHeight && scrollHeight < clientHeight) {\n      loadMoreBackwards();\n    }\n  }, [items, loadMoreBackwards, preloadBackwards, scrollContainerClosest]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n\n    const container = containerRef.current!;\n\n    requestForcedReflow(() => {\n      const state = stateRef.current;\n\n      state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n      let newScrollTop: number;\n\n      if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n        const { scrollTop } = scrollContainer;\n        const newAnchorTop = state.currentAnchor!.getBoundingClientRect().top;\n        newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop!);\n      } else {\n        const nextAnchor = state.listItemElements[0];\n        if (nextAnchor) {\n          state.currentAnchor = nextAnchor;\n          state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n        }\n      }\n\n      if (withAbsolutePositioning || noScrollRestore) {\n        return undefined;\n      }\n\n      const { scrollTop } = scrollContainer;\n      if (noScrollRestoreOnTop && scrollTop === 0) {\n        return undefined;\n      }\n\n      return () => {\n        resetScroll(scrollContainer, newScrollTop);\n\n        state.isScrollTopJustUpdated = true;\n      };\n    });\n  }, [\n    items, itemSelector, noScrollRestore, noScrollRestoreOnTop, cacheBuster, withAbsolutePositioning,\n    scrollContainerClosest,\n  ]);\n\n  const handleScroll = useLastCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n      const listItemElements = stateRef.current.listItemElements!;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const scrollContainer = scrollContainerClosest\n        ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n        : containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = scrollContainer;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor?.offsetParent && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor?.offsetParent) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  });\n\n  useLayoutEffect(() => {\n    const scrollContainer = scrollContainerClosest\n      ? containerRef.current!.closest<HTMLDivElement>(scrollContainerClosest)!\n      : containerRef.current!;\n    if (!scrollContainer) return undefined;\n\n    const handleNativeScroll = (e: Event) => handleScroll(e as unknown as UIEvent<HTMLDivElement>);\n\n    scrollContainer.addEventListener('scroll', handleNativeScroll);\n\n    return () => {\n      scrollContainer.removeEventListener('scroll', handleNativeScroll);\n    };\n  }, [handleScroll, scrollContainerClosest]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onWheel={onWheel}\n      teactFastList={!noFastList && !withAbsolutePositioning}\n      onKeyDown={onKeyDown}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onClick={onClick}\n      style={style}\n    >\n      {beforeChildren}\n      {withAbsolutePositioning && items?.length ? (\n        <div\n          teactFastList={!noFastList}\n          style={buildStyle('position: relative', IS_ANDROID && `height: ${maxHeight}px`)}\n        >\n          {children}\n        </div>\n      ) : children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import type { RefObject } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport { requestMeasure } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV, MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\nimport RippleEffect from './RippleEffect';\n\nimport './ListItem.scss';\n\ntype MenuItemContextActionItem = {\n  title: string;\n  icon: IconName;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype MenuItemContextActionSeparator = {\n  isSeparator: true;\n  key?: string;\n};\n\nexport type MenuItemContextAction =\n  MenuItemContextActionItem\n  | MenuItemContextActionSeparator;\n\ninterface OwnProps {\n  ref?: RefObject<HTMLDivElement>;\n  buttonRef?: RefObject<HTMLDivElement | HTMLAnchorElement>;\n  icon?: IconName;\n  iconClassName?: string;\n  leftElement?: TeactNode;\n  secondaryIcon?: IconName;\n  secondaryIconClassName?: string;\n  rightElement?: TeactNode;\n  buttonClassName?: string;\n  className?: string;\n  style?: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n  allowDisabledClick?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  multiline?: boolean;\n  isStatic?: boolean;\n  allowSelection?: boolean;\n  withColorTransition?: boolean;\n  contextActions?: MenuItemContextAction[];\n  withPortalForMenu?: boolean;\n  menuBubbleClassName?: string;\n  href?: string;\n  onMouseDown?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onClick?: (e: React.MouseEvent<HTMLElement>, arg?: any) => void;\n  onContextMenu?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickArg?: any;\n  onSecondaryIconClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDragEnter?: (e: React.DragEvent<HTMLDivElement>) => void;\n  nonInteractive?: boolean;\n}\n\nconst ListItem: FC<OwnProps> = ({\n  ref,\n  buttonRef,\n  icon,\n  iconClassName,\n  leftElement,\n  buttonClassName,\n  menuBubbleClassName,\n  secondaryIcon,\n  secondaryIconClassName,\n  rightElement,\n  className,\n  style,\n  children,\n  disabled,\n  allowDisabledClick,\n  ripple,\n  narrow,\n  inactive,\n  focus,\n  destructive,\n  multiline,\n  isStatic,\n  allowSelection,\n  withColorTransition,\n  contextActions,\n  withPortalForMenu,\n  href,\n  onMouseDown,\n  onClick,\n  onContextMenu,\n  clickArg,\n  onSecondaryIconClick,\n  onDragEnter,\n  nonInteractive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n  const [isTouched, markIsTouched, unmarkIsTouched] = useFlag();\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useLastCallback(() => containerRef.current);\n  const getRootElement = useLastCallback(() => containerRef.current!.closest('.custom-scroll'));\n  const getMenuElement = useLastCallback(() => {\n    return (withPortalForMenu ? document.querySelector('#portals') : containerRef.current)!\n      .querySelector('.ListItem-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: withPortalForMenu }));\n\n  const handleClickEvent = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n    if (!hasModifierKey && e.button === MouseButton.Main) {\n      e.preventDefault();\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if ((disabled && !allowDisabledClick) || !onClick) {\n      return;\n    }\n\n    if (href) {\n      // Allow default behavior for opening links in new tab\n      const hasModifierKey = e.ctrlKey || e.metaKey || e.shiftKey;\n      if ((hasModifierKey && e.button === MouseButton.Main) || e.button === MouseButton.Auxiliary) {\n        return;\n      }\n\n      e.preventDefault();\n    }\n\n    onClick(e, clickArg);\n\n    if (IS_TOUCH_ENV && !ripple) {\n      markIsTouched();\n      requestMeasure(unmarkIsTouched);\n    }\n  });\n\n  const {\n    handleClick: handleSecondaryIconClick,\n    handleMouseDown: handleSecondaryIconMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLButtonElement>) => {\n    if ((disabled && !allowDisabledClick) || e.button !== 0 || (!onSecondaryIconClick && !contextActions)) return;\n\n    e.stopPropagation();\n\n    if (onSecondaryIconClick) {\n      onSecondaryIconClick(e);\n    } else {\n      handleContextMenu(e);\n    }\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === MouseButton.Main) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  });\n\n  const lang = useOldLang();\n\n  const fullClassName = buildClassName(\n    'ListItem',\n    className,\n    allowSelection && 'allow-selection',\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    allowDisabledClick && 'click-allowed',\n    inactive && 'inactive',\n    contextMenuAnchor && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n    multiline && 'multiline',\n    isStatic && 'is-static',\n    withColorTransition && 'with-color-transition',\n  );\n\n  const ButtonElementTag = href ? 'a' : 'div';\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={style}\n      onMouseDown={onMouseDown}\n      onDragEnter={onDragEnter}\n    >\n      <ButtonElementTag\n        className={buildClassName('ListItem-button', isTouched && 'active', buttonClassName)}\n        role={!isStatic ? 'button' : undefined}\n        href={href}\n        ref={buttonRef as any /* TS requires specific types for refs */}\n        tabIndex={!isStatic ? 0 : undefined}\n        onClick={(!inactive && IS_TOUCH_ENV) ? handleClick : handleClickEvent}\n        onMouseDown={handleMouseDown}\n        onContextMenu={onContextMenu || ((!inactive && contextActions) ? handleContextMenu : undefined)}\n      >\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n        {leftElement}\n        {icon && (\n          <Icon name={icon} className={buildClassName('ListItem-main-icon', iconClassName)} />\n        )}\n        {multiline && (<div className=\"multiline-item\">{children}</div>)}\n        {!multiline && children}\n        {secondaryIcon && (\n          <Button\n            nonInteractive={nonInteractive}\n            className={buildClassName('secondary-icon', secondaryIconClassName)}\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            onClick={handleSecondaryIconClick}\n            onMouseDown={handleSecondaryIconMouseDown}\n          >\n            <Icon name={secondaryIcon} />\n          </Button>\n        )}\n        {rightElement}\n      </ButtonElementTag>\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"ListItem-context-menu with-menu-transitions\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal={withPortalForMenu}\n          bubbleClassName={menuBubbleClassName}\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                <span className=\"list-item-ellipsis\">\n                  {renderText(action.title)}\n                </span>\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"h039vb1K\",\"thin\":\"NGKaFgra\",\"thick\":\"_BdnjPEa\"};","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './MenuSeparator.module.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'thin' | 'thick';\n};\n\nconst MenuSeparator: FC<OwnProps> = ({ className, size = 'thin' }) => {\n  return (\n    <div className={buildClassName(styles.root, styles[size], className)} />\n  );\n};\n\nexport default MenuSeparator;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { beginHeavyAnimation, useEffect } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport freezeWhenClosed from '../../util/hoc/freezeWhenClosed';\nimport trapFocus from '../../util/trapFocus';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../hooks/useLayoutEffectWithPrevDeps';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport Icon from '../common/icons/Icon';\nimport Button, { type OwnProps as ButtonProps } from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nexport const ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  title?: string | TextPart[];\n  className?: string;\n  contentClassName?: string;\n  headerClassName?: string;\n  isOpen?: boolean;\n  header?: TeactNode;\n  isSlim?: boolean;\n  hasCloseButton?: boolean;\n  hasAbsoluteCloseButton?: boolean;\n  absoluteCloseButtonColor?: ButtonProps['color'];\n  noBackdrop?: boolean;\n  noBackdropClose?: boolean;\n  children: React.ReactNode;\n  style?: string;\n  dialogStyle?: string;\n  dialogRef?: React.RefObject<HTMLDivElement>;\n  isLowStackPriority?: boolean;\n  dialogContent?: React.ReactNode;\n  ignoreFreeze?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n};\n\nconst Modal: FC<OwnProps> = ({\n  dialogRef,\n  title,\n  className,\n  contentClassName,\n  headerClassName,\n  isOpen,\n  isSlim,\n  header,\n  hasCloseButton,\n  hasAbsoluteCloseButton,\n  absoluteCloseButtonColor = 'translucent',\n  noBackdrop,\n  noBackdropClose,\n  children,\n  style,\n  dialogStyle,\n  isLowStackPriority,\n  dialogContent,\n  onClose,\n  onCloseAnimationEnd,\n  onEnter,\n}) => {\n  const {\n    ref: modalRef,\n    shouldRender,\n  } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n    withShouldRender: true,\n  });\n\n  const withCloseButton = hasCloseButton || hasAbsoluteCloseButton;\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n\n    return enableDirectTextInput;\n  }, [isOpen]);\n\n  const handleEnter = useLastCallback((e: KeyboardEvent) => {\n    if (!onEnter) {\n      return false;\n    }\n\n    e.preventDefault();\n    onEnter();\n    return true;\n  });\n\n  useEffect(() => (\n    isOpen ? captureKeyboardListeners({ onEsc: onClose, onEnter: handleEnter }) : undefined\n  ), [isOpen, onClose, handleEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen, modalRef]);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n  });\n\n  useLayoutEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', Boolean(isOpen));\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      beginHeavyAnimation(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useOldLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title && !withCloseButton) return undefined;\n    const closeButton = (\n      <Button\n        className={buildClassName(hasAbsoluteCloseButton && 'modal-absolute-close-button')}\n        round\n        color={absoluteCloseButtonColor}\n        size=\"smaller\"\n        ariaLabel={lang('Close')}\n        onClick={onClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n    );\n\n    if (hasAbsoluteCloseButton) {\n      return closeButton;\n    }\n\n    return (\n      <div className={buildClassName('modal-header', headerClassName)}>\n        {withCloseButton && closeButton}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    noBackdrop && 'transparent-backdrop',\n    isSlim && 'slim',\n    isLowStackPriority && 'low-priority',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={!noBackdropClose ? onClose : undefined} />\n          <div className=\"modal-dialog\" ref={dialogRef} style={dialogStyle}>\n            {renderHeader()}\n            {dialogContent}\n            <div className={buildClassName('modal-content custom-scroll', contentClassName)} style={style}>\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default freezeWhenClosed(Modal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eldglPwL\",\"svg\":\"xhUfxjkV\",\"circle\":\"hsaty2zA\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatCountdownShort } from '../../util/dates/dateFormat';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AnimatedCounter from '../common/AnimatedCounter';\n\nimport styles from './RoundTimer.module.scss';\n\ntype OwnProps = {\n  duration: number;\n  className?: string;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 1000;\nconst TIMER_RADIUS = 14;\n\nconst RoundTimer = ({ duration, className, onEnd }: OwnProps) => {\n  const [timeLeft, setTimeLeft] = useState(duration);\n  const lang = useOldLang();\n\n  useInterval(\n    () => setTimeLeft((prev) => prev - 1),\n    timeLeft > 0 ? UPDATE_FREQUENCY : undefined,\n  );\n\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      onEnd?.();\n    }\n  }, [timeLeft, onEnd]);\n\n  useEffect(() => {\n    setTimeLeft(duration);\n  }, [duration]);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.svg} width=\"32px\" height=\"32px\">\n        <circle\n          cx=\"16\"\n          cy=\"16\"\n          r={TIMER_RADIUS}\n          transform=\"rotate(-90, 16, 16)\"\n          pathLength=\"100\"\n          stroke-dasharray=\"100\"\n          stroke-dashoffset={100 - ((timeLeft - 1) / duration) * 100} // Show it one step further due to animation\n          className={styles.circle}\n        />\n      </svg>\n      <AnimatedCounter className={styles.text} text={formatCountdownShort(lang, timeLeft * 1000)} />\n    </div>\n  );\n};\n\nexport default memo(RoundTimer);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\nimport { isLangFnParam } from '../../util/localization/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { REM } from '../common/helpers/mediaDimensions';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmoji from '../common/CustomEmoji';\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Portal from './Portal';\nimport RoundTimer from './RoundTimer';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  notification: ApiNotification;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\nconst CUSTOM_EMOJI_SIZE = 1.75 * REM;\n\nconst Notification: FC<OwnProps> = ({\n  notification,\n}) => {\n  const actions = getActions();\n\n  const lang = useLang();\n\n  const {\n    localId,\n    message,\n    action,\n    actionText,\n    cacheBreaker,\n    className,\n    disableClickDismiss,\n    dismissAction,\n    duration = DEFAULT_DURATION,\n    icon,\n    customEmojiIconId,\n    shouldShowTimer,\n    title,\n    containerSelector,\n  } = notification;\n\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n  const { transitionClassNames } = useShowTransitionDeprecated(isOpen);\n\n  const handleDismiss = useLastCallback(() => {\n    actions.dismissNotification({ localId });\n  });\n\n  const closeAndDismiss = useLastCallback((force?: boolean) => {\n    if (!force && disableClickDismiss) return;\n    setIsOpen(false);\n    setTimeout(handleDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    if (dismissAction) {\n      // @ts-ignore\n      actions[dismissAction.action](dismissAction.payload);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (action) {\n      if (Array.isArray(action)) {\n        // @ts-ignore\n        action.forEach((cb) => actions[cb.action](cb.payload));\n      } else {\n        // @ts-ignore\n        actions[action.action](action.payload);\n      }\n    }\n    closeAndDismiss();\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(() => closeAndDismiss(true), duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, cacheBreaker]); // Reset timer if `cacheBreaker` changes\n\n  const handleMouseEnter = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    if (disableClickDismiss) return;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  });\n\n  const renderedTitle = useMemo(() => {\n    if (!title) return undefined;\n    if (isLangFnParam(title)) {\n      return lang.with(title);\n    }\n\n    return renderText(title, ['simple_markdown', 'emoji', 'br', 'links']);\n  }, [lang, title]);\n\n  const renderedMessage = useMemo(() => {\n    if (isLangFnParam(message)) {\n      return lang.with(message);\n    }\n\n    if (typeof message === 'string') {\n      return renderText(message, ['simple_markdown', 'emoji', 'br', 'links']);\n    }\n\n    return message;\n  }, [lang, message]);\n\n  const renderedActionText = useMemo(() => {\n    if (!actionText) return undefined;\n    if (isLangFnParam(actionText)) {\n      return lang.with(actionText);\n    }\n\n    return actionText;\n  }, [lang, actionText]);\n\n  return (\n    <Portal className=\"Notification-container\" containerSelector={containerSelector}>\n      <div\n        className={buildClassName('Notification', transitionClassNames, className)}\n        onClick={handleClick}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        {customEmojiIconId ? (\n          <CustomEmoji\n            className=\"notification-emoji-icon\"\n            forceAlways\n            size={CUSTOM_EMOJI_SIZE}\n            documentId={customEmojiIconId}\n          />\n        ) : (\n          <Icon name={icon || 'info-filled'} className=\"notification-icon\" />\n        )}\n        <div className=\"content\">\n          {renderedTitle && (\n            <div className=\"notification-title\">{renderedTitle}</div>\n          )}\n          {renderedMessage}\n        </div>\n        {action && renderedActionText && (\n          <Button\n            color=\"translucent-white\"\n            onClick={handleClick}\n            className=\"notification-button\"\n          >\n            {renderedActionText}\n          </Button>\n        )}\n        {shouldShowTimer && (\n          <RoundTimer className=\"notification-timer\" key={cacheBreaker} duration={Math.ceil(duration / 1000)} />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default Notification;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { animate, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useDevicePixelRatio from '../../hooks/window/useDevicePixelRatio';\n\nimport Icon from '../common/icons/Icon';\n\nimport './ProgressSpinner.scss';\n\nconst SIZES = {\n  s: 42, m: 48, l: 54, xl: 52,\n};\nconst STROKE_WIDTH = 2;\nconst STROKE_WIDTH_XL = 3;\nconst PADDING = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\nconst GROW_DURATION = 600; // 0.6 s\nconst ROTATE_DURATION = 2000; // 2 s\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  rotationOffset?: number;\n  withColor?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  rotationOffset,\n  withColor,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const width = SIZES[size];\n  const progressRef = useStateRef(progress);\n\n  const dpr = useDevicePixelRatio();\n\n  const color = useDynamicColorListener(canvasRef, undefined, !withColor);\n\n  useEffect(() => {\n    let isFirst = true;\n    let growFrom = MIN_PROGRESS;\n    let growStartedAt: number | undefined;\n    let prevProgress: number | undefined;\n\n    animate(() => {\n      if (!canvasRef.current) {\n        return false;\n      }\n\n      if (progressRef.current !== prevProgress) {\n        growFrom = Math.min(Math.max(MIN_PROGRESS, prevProgress || 0), MAX_PROGRESS);\n        growStartedAt = Date.now();\n        prevProgress = progressRef.current;\n      }\n\n      const targetProgress = Math.min(Math.max(MIN_PROGRESS, progressRef.current), MAX_PROGRESS);\n      const t = Math.min(1, (Date.now() - growStartedAt!) / GROW_DURATION);\n      const animationFactor = timingFunctions.easeOutQuad(t);\n      const currentProgress = growFrom + (targetProgress - growFrom) * animationFactor;\n\n      drawSpinnerArc(\n        canvasRef.current,\n        width * dpr,\n        (size === 'xl' ? STROKE_WIDTH_XL : STROKE_WIDTH) * dpr,\n        color ?? 'white',\n        currentProgress,\n        dpr,\n        isFirst,\n        rotationOffset,\n      );\n\n      isFirst = false;\n\n      return currentProgress < 1;\n    }, requestMutation);\n  }, [progressRef, size, width, dpr, rotationOffset, color]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      className={className}\n      onClick={onClick}\n    >\n      {!noCross && <Icon name=\"close\" />}\n      <canvas ref={canvasRef} className=\"ProgressSpinner_canvas\" style={`width: ${width}; height: ${width}px;`} />\n    </div>\n  );\n};\n\nfunction drawSpinnerArc(\n  canvas: HTMLCanvasElement,\n  size: number,\n  strokeWidth: number,\n  color: string,\n  progress: number,\n  dpr: number,\n  shouldInit = false,\n  rotationOffset?: number,\n) {\n  const centerCoordinate = size / 2;\n  const radius = (size - strokeWidth) / 2 - PADDING * dpr;\n  const offset = rotationOffset ?? (Date.now() % ROTATE_DURATION) / ROTATE_DURATION;\n  const startAngle = (2 * Math.PI) * offset;\n  const endAngle = startAngle + (2 * Math.PI) * progress;\n  const ctx = canvas.getContext('2d')!;\n\n  if (shouldInit) {\n    canvas.width = size;\n    canvas.height = size;\n\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = strokeWidth;\n  }\n\n  ctx.clearRect(0, 0, size, size);\n  ctx.beginPath();\n  ctx.arc(centerCoordinate, centerCoordinate, radius, startAngle, endAngle);\n  ctx.stroke();\n}\n\nexport default memo(ProgressSpinner);\n","import type { ChangeEvent, MouseEventHandler } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  label?: TeactNode;\n  subLabel?: TeactNode;\n  value?: string;\n  checked?: boolean;\n  disabled?: boolean;\n  isLink?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  withIcon?: boolean;\n  className?: string;\n  onlyInput?: boolean;\n  subLabelClassName?: string;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onSubLabelClick?: MouseEventHandler<HTMLSpanElement> | undefined;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  subLabelClassName,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  className,\n  onlyInput,\n  withIcon,\n  isLink,\n  onChange,\n  onSubLabelClick,\n}) => {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    'Radio',\n    className,\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    withIcon && 'with-icon',\n    isLoading && 'loading',\n    onlyInput && 'onlyInput',\n    Boolean(subLabel) && 'withSubLabel',\n  );\n\n  return (\n    <label className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\" dir={lang.isRtl ? 'auto' : undefined}>{label}</span>\n        {subLabel\n          && (\n            <span\n              className={buildClassName(subLabelClassName, 'subLabel', isLink ? 'subLabelLink' : undefined)}\n              dir={lang.isRtl ? 'auto' : undefined}\n              onClick={isLink ? onSubLabelClick : undefined}\n            >\n              {subLabel}\n            </span>\n          )}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import type { ChangeEvent } from 'react';\nimport type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Radio from './Radio';\n\nexport type IRadioOption<T = string> = {\n  label: TeactNode;\n  subLabel?: TeactNode;\n  value: T;\n  hidden?: boolean;\n  className?: string;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string, event: ChangeEvent<HTMLInputElement>) => void;\n  onClickAction?: (value: string) => void;\n  isLink?: boolean;\n  withIcon?: boolean;\n  subLabelClassName?: string;\n  subLabel?: TeactNode;\n  className?: string;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n  onClickAction,\n  subLabelClassName,\n  isLink,\n  withIcon,\n  subLabel,\n  className,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value, event);\n  }, [onChange]);\n\n  const onSubLabelClick = useLastCallback((value: string) => () => {\n    onClickAction?.(value);\n  });\n\n  return (\n    <div id={id} className={buildClassName('radio-group', className)}>\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={subLabel || option.subLabel}\n          subLabelClassName={subLabelClassName}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          withIcon={withIcon}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          className={option.className}\n          onChange={handleChange}\n          onSubLabelClick={onSubLabelClick(option.value)}\n          isLink={isLink}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './RangeSlider.scss';\n\ntype OwnProps = {\n  options?: string[];\n  min?: number;\n  max?: number;\n  step?: number;\n  label?: string;\n  value: number;\n  disabled?: boolean;\n  bold?: boolean;\n  className?: string;\n  renderValue?: (value: number) => string;\n  onChange: (value: number) => void;\n  isCenteredLayout?: boolean;\n};\n\nconst RangeSlider: FC<OwnProps> = ({\n  options,\n  min = 0,\n  max = options ? options.length - 1 : 100,\n  step = 1,\n  label,\n  value,\n  disabled,\n  bold,\n  className,\n  renderValue,\n  onChange,\n  isCenteredLayout,\n}) => {\n  const lang = useOldLang();\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    onChange(Number(event.currentTarget.value));\n  }, [onChange]);\n\n  const mainClassName = buildClassName(\n    className,\n    'RangeSlider',\n    disabled && 'disabled',\n    bold && 'bold',\n  );\n\n  const trackWidth = useMemo(() => {\n    if (options) {\n      return (value / (options.length - 1)) * 100;\n    } else {\n      const possibleValuesLength = (max - min) / step;\n      return ((value - min) / possibleValuesLength) * 100;\n    }\n  }, [options, value, max, min, step]);\n\n  function renderTopRow() {\n    if (isCenteredLayout) {\n      return (\n        <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {!options && (\n            <>\n              <span className=\"value-min\" dir=\"auto\">{min}</span>\n              <span className=\"label\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n              <span className=\"value-max\" dir=\"auto\">{max}</span>\n            </>\n          )}\n        </div>\n      );\n    }\n\n    if (!label) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"slider-top-row\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"label\" dir=\"auto\">{label}</span>\n        {!options && (\n          <span className=\"value\" dir=\"auto\">{renderValue ? renderValue(value) : value}</span>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={mainClassName}>\n      {renderTopRow()}\n      <div className=\"slider-main\">\n        <div\n          className=\"slider-fill-track\"\n          style={`width: ${trackWidth}%`}\n        />\n        <input\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          type=\"range\"\n          className=\"RangeSlider__input\"\n          onChange={handleChange}\n        />\n        {options && (\n          <div className=\"slider-options\">\n            {options.map((option, index) => (\n              <div\n                className={buildClassName('slider-option', index === value && 'active')}\n                onClick={() => onChange(index)}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(RangeSlider);\n","// extracted by mini-css-extract-plugin\nexport default {\"dotWrapper\":\"s8NMMSES\",\"sliderContainer\":\"i_wrxmyh\",\"marksContainer\":\"bVlnaLCI\",\"mark\":\"AFFaq4eZ\",\"active\":\"cuogxYPG\",\"slider\":\"H_rMZrqn\",\"tickMarks\":\"O7SI4r_Y\",\"tick\":\"b6UDc3zh\",\"filled\":\"VELPJsJ0\",\"tickUnfilled\":\"K8NtimIi\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './RangeSliderWithMarks.module.scss';\n\nexport type OwnProps = {\n  marks: number[];\n  onChange: (value: number) => void;\n  rangeCount: number;\n};\n\nconst RangeSliderWithMarks: FC<OwnProps> = ({ marks, onChange, rangeCount }) => {\n  // eslint-disable-next-line no-null/no-null\n  const sliderRef = useRef<HTMLInputElement | null>(null);\n\n  const fillPercentage = useMemo(() => {\n    return ((marks.indexOf(rangeCount) / (marks.length - 1)) * 100).toFixed(2);\n  }, [marks, rangeCount]);\n\n  const rangeCountIndex = useMemo(() => marks.indexOf(rangeCount), [marks, rangeCount]);\n\n  const rangeValue = useMemo(() => {\n    return marks.indexOf(rangeCount).toString();\n  }, [marks, rangeCount]);\n\n  useLayoutEffect(() => {\n    sliderRef.current!.style.setProperty('--fill-percentage', `${fillPercentage}%`);\n  }, [fillPercentage]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const index = parseInt(event.target.value, 10);\n    const newValue = marks[index];\n    onChange(newValue);\n  };\n\n  return (\n    <div className={styles.dotWrapper}>\n      <form>\n        <div className={styles.sliderContainer}>\n          <div className={styles.tickMarks}>\n            {marks.map((mark, index) => {\n              const isFilled = index <= rangeCountIndex;\n              return (\n                <div\n                  key={mark}\n                  className={buildClassName(\n                    styles.tick,\n                    isFilled ? styles.filled : styles.tickUnfilled,\n                  )}\n                />\n              );\n            })}\n          </div>\n          <div className={styles.marksContainer}>\n            {marks.map((mark) => (\n              <div\n                key={mark}\n                className={buildClassName(styles.mark, rangeCount === mark && styles.active)}\n              >\n                {mark}\n              </div>\n            ))}\n          </div>\n          <input\n            ref={sliderRef}\n            type=\"range\"\n            className={styles.slider}\n            min=\"0\"\n            max={marks.length - 1}\n            value={rangeValue}\n            onChange={handleChange}\n            step=\"1\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(RangeSliderWithMarks);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport type { OwnProps as ButtonProps } from './Button';\n\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Button from './Button';\n\ntype OwnProps = {\n  onActivate: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n} & Omit<ButtonProps, (\n  'onClick' | 'onMouseDown' |\n  'onMouseEnter' | 'onMouseLeave' |\n  'onFocus'\n)>;\n\nconst BUTTON_ACTIVATE_DELAY = 200;\nlet openTimeout: number | undefined;\nlet isFirstTimeActivation = true;\n\nconst ResponsiveHoverButton: FC<OwnProps> = ({ onActivate, ...buttonProps }) => {\n  const isMouseInside = useRef(false);\n\n  const handleMouseEnter = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n\n    // This is used to counter additional delay caused by asynchronous module loading\n    if (isFirstTimeActivation) {\n      isFirstTimeActivation = false;\n      onActivate(e);\n      return;\n    }\n\n    if (openTimeout) {\n      clearTimeout(openTimeout);\n      openTimeout = undefined;\n    }\n    openTimeout = window.setTimeout(() => {\n      if (isMouseInside.current) {\n        onActivate(e);\n      }\n    }, BUTTON_ACTIVATE_DELAY);\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    isMouseInside.current = true;\n    onActivate(e);\n  });\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...buttonProps}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      onClick={!IS_TOUCH_ENV ? onActivate : handleClick}\n    />\n  );\n};\n\nexport default ResponsiveHoverButton;\n","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInputFocusOnOpen from '../../hooks/useInputFocusOnOpen';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\nimport Loading from './Loading';\nimport Transition from './Transition';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: React.ReactNode;\n  resultsItemSelector?: string;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  spinnerColor?: 'yellow';\n  spinnerBackgroundColor?: 'light';\n  placeholder?: string;\n  disabled?: boolean;\n  autoComplete?: string;\n  canClose?: boolean;\n  autoFocusSearch?: boolean;\n  hasUpButton?: boolean;\n  hasDownButton?: boolean;\n  teactExperimentControlled?: boolean;\n  withBackIcon?: boolean;\n  onChange: (value: string) => void;\n  onStartBackspace?: NoneToVoidFunction;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n  onUpClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onDownClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  onSpinnerClick?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  resultsItemSelector,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading = false,\n  spinnerColor,\n  spinnerBackgroundColor,\n  placeholder,\n  disabled,\n  autoComplete,\n  canClose,\n  autoFocusSearch,\n  hasUpButton,\n  hasDownButton,\n  teactExperimentControlled,\n  withBackIcon,\n  onChange,\n  onStartBackspace,\n  onReset,\n  onFocus,\n  onBlur,\n  onClick,\n  onUpClick,\n  onDownClick,\n  onSpinnerClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useInputFocusOnOpen(inputRef, autoFocusSearch, unmarkInputFocused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n\n    if (!isInputFocused) {\n      handleFocus();\n    }\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    onFocus?.();\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    onBlur?.();\n  }\n\n  const handleKeyDown = useLastCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (!resultsItemSelector) return;\n    if (e.key === 'ArrowDown' || e.key === 'Enter') {\n      const element = document.querySelector(resultsItemSelector) as HTMLElement;\n      if (element) {\n        element.focus();\n      }\n    }\n\n    if (e.key === 'Backspace' && e.currentTarget.selectionStart === 0 && e.currentTarget.selectionEnd === 0) {\n      onStartBackspace?.();\n    }\n  });\n\n  return (\n    <div\n      className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}\n      onClick={onClick}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(!isLoading && !withBackIcon)}\n        className=\"icon-container-left\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {isLoading && !withBackIcon ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : withBackIcon ? (\n          <Icon name=\"arrow-left\" className=\"back-icon\" onClick={onReset} />\n        ) : (\n          <Icon name=\"search\" className=\"search-icon\" />\n        )}\n      </Transition>\n      <div>{children}</div>\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        dir=\"auto\"\n        placeholder={placeholder || oldLang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        autoComplete={autoComplete}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n        teactExperimentControlled={teactExperimentControlled}\n      />\n      {hasUpButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onUpClick}\n          disabled={!onUpClick}\n          ariaLabel={lang('AriaSearchOlderResult')}\n        >\n          <Icon name=\"up\" />\n        </Button>\n      )}\n      {hasDownButton && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onDownClick}\n          disabled={!onDownClick}\n          ariaLabel={lang('AriaSearchNewerResult')}\n        >\n          <Icon name=\"down\" />\n        </Button>\n      )}\n      <Transition\n        name=\"fade\"\n        shouldCleanup\n        activeKey={Number(isLoading)}\n        className=\"icon-container-right\"\n        slideClassName=\"icon-container-slide\"\n      >\n        {withBackIcon && isLoading ? (\n          <Loading color={spinnerColor} backgroundColor={spinnerBackgroundColor} onClick={onSpinnerClick} />\n        ) : (\n          (value || canClose) && onReset && (\n            <Button\n              round\n              size=\"tiny\"\n              color=\"translucent\"\n              onClick={onReset}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          )\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\ntype OwnProps = {\n  id?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  ref?: RefObject<HTMLSelectElement>;\n  hasArrow?: boolean;\n  tabIndex?: number;\n  onChange?: (e: ChangeEvent<HTMLSelectElement>) => void;\n  children: React.ReactNode;\n};\n\nconst Select: FC<OwnProps> = (props) => {\n  const {\n    id,\n    value,\n    label,\n    hasArrow,\n    error,\n    ref,\n    tabIndex,\n    onChange,\n    children,\n  } = props;\n  const labelText = error || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error && 'error',\n    labelText && 'with-label',\n    hasArrow && 'with-arrow',\n    'input-group',\n  );\n\n  return (\n    <div className={fullClassName}>\n      <select\n        className=\"form-control\"\n        id={id}\n        value={value || ''}\n        onChange={onChange}\n        tabIndex={tabIndex}\n        ref={ref}\n      >\n        {children}\n      </select>\n      {labelText && id && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Select);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"axfkbhWJ\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../lib/teact/teact';\n\nimport { openSystemFilesDialog } from '../../util/systemFilesDialog';\n\nimport CropModal from './CropModal';\n\nimport styles from './SelectAvatar.module.scss';\n\ntype OwnProps = {\n  onChange: (file: File) => void;\n  inputRef: RefObject<HTMLInputElement>;\n};\n\nconst SelectAvatar: FC<OwnProps> = ({\n  onChange,\n  inputRef,\n}) => {\n  const [selectedFile, setSelectedFile] = useState<File | undefined>();\n\n  const handleAvatarCrop = useCallback((croppedImg: File) => {\n    setSelectedFile(undefined);\n    onChange(croppedImg);\n  }, [onChange]);\n\n  const handleModalClose = useCallback(() => {\n    setSelectedFile(undefined);\n  }, []);\n\n  const handleClick = useCallback(() => {\n    openSystemFilesDialog('image/png, image/jpeg', ((event) => {\n      const target = event.target as HTMLInputElement;\n      if (!target?.files?.[0]) {\n        return;\n      }\n      setSelectedFile(target.files[0]);\n    }), true);\n  }, []);\n\n  return (\n    <>\n      <input ref={inputRef} className={styles.input} onClick={handleClick} />\n      <CropModal file={selectedFile} onClose={handleModalClose} onChange={handleAvatarCrop} />\n    </>\n  );\n};\n\nexport default memo(SelectAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"separator\":\"LxlpQKLr\"};","import React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport styles from './Separator.module.scss';\n\ntype OwnProps = {\n  children?: React.ReactNode;\n  className?: string;\n};\n\nfunction Separator({ children, className }: OwnProps) {\n  const lang = useOldLang();\n\n  return (\n    <div\n      dir={lang.isRtl ? 'rtl' : undefined}\n      className={buildClassName(styles.separator, className)}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Separator;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from './Button';\n\nimport './ShowMoreButton.scss';\n\ntype OwnProps = {\n  count: number;\n  itemName: string;\n  itemPluralName?: string;\n  isLoading?: boolean;\n  onClick: () => void;\n};\n\nconst ShowMoreButton: FC<OwnProps> = ({\n  count,\n  itemName,\n  itemPluralName,\n  isLoading,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Button\n      className=\"ShowMoreButton\"\n      color=\"translucent\"\n      size=\"smaller\"\n      isText\n      isLoading={isLoading}\n      isRtl={lang.isRtl}\n      onClick={onClick}\n    >\n      <Icon name=\"down\" />\n      Show {count} more {count > 1 ? itemPluralName || `${itemName}s` : itemName}\n    </Button>\n  );\n};\n\nexport default ShowMoreButton;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useRef } from '../../lib/teact/teact';\n\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../hooks/useShowTransition';\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  isHidden?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  noCloseTransition?: boolean;\n  shouldAnimateFirstRender?: boolean;\n  style?: string;\n  children: React.ReactNode;\n  ref?: React.RefObject<HTMLDivElement>;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen,\n  isHidden,\n  isCustom,\n  id,\n  className,\n  onClick,\n  children,\n  noCloseTransition,\n  shouldAnimateFirstRender,\n  style,\n  ref: externalRef,\n}) => {\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const prevChildren = usePreviousDeprecated(children);\n  const fromChildrenRef = useRef<React.ReactNode>();\n  const isFirstRender = prevIsOpen === undefined;\n\n  const { ref, shouldRender } = useShowTransition({\n    isOpen: isOpen && !isHidden,\n    ref: externalRef,\n    noMountTransition: isFirstRender && !shouldAnimateFirstRender,\n    className: isCustom ? false : undefined,\n    noCloseTransition,\n    withShouldRender: true,\n  });\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    (shouldRender || isHidden) && (\n      <div\n        id={id}\n        ref={ref}\n        className={className}\n        onClick={onClick}\n        style={style}\n      >\n        {isOpen ? children : fromChildrenRef.current!}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Switcher.scss';\n\ntype OwnProps = {\n  id?: string;\n  name?: string;\n  value?: string;\n  label: string;\n  checked?: boolean;\n  disabled?: boolean;\n  inactive?: boolean;\n  noAnimation?: boolean;\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  onCheck?: (isChecked: boolean) => void;\n};\n\nconst Switcher: FC<OwnProps> = ({\n  id,\n  name,\n  value,\n  label,\n  checked = false,\n  disabled,\n  inactive,\n  noAnimation,\n  onChange,\n  onCheck,\n}) => {\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onCheck) {\n      onCheck(e.currentTarget.checked);\n    }\n  }, [onChange, onCheck]);\n\n  const className = buildClassName(\n    'Switcher',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    noAnimation && 'no-animation',\n  );\n\n  return (\n    <label className={className} title={label}>\n      <input\n        type=\"checkbox\"\n        id={id}\n        name={name}\n        value={value}\n        checked={checked}\n        disabled={disabled}\n        onChange={handleChange}\n      />\n      <span className=\"widget\" />\n    </label>\n  );\n};\n\nexport default memo(Switcher);\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { useEffect, useLayoutEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport forceReflow from '../../util/forceReflow';\nimport { MouseButton } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Icon from '../common/icons/Icon';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\nimport MenuSeparator from './MenuSeparator';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: TeactNode;\n  isActive?: boolean;\n  isBlocked?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick?: (arg: number) => void;\n  clickArg?: number;\n  contextActions?: MenuItemContextAction[];\n  contextRootElementSelector?: string;\n};\n\nconst classNames = {\n  active: 'Tab--active',\n  badgeActive: 'Tab__badge--active',\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  isActive,\n  isBlocked,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n  contextActions,\n  contextRootElementSelector,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    // Set initial active state\n    if (isActive && previousActiveTab === undefined && tabRef.current) {\n      tabRef.current!.classList.add(classNames.active);\n    }\n  }, [isActive, previousActiveTab]);\n\n  useEffect(() => {\n    if (!isActive || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tabEl = tabRef.current!;\n    const prevTabEl = tabEl.parentElement!.children[previousActiveTab];\n    if (!prevTabEl) {\n      // The number of tabs in the parent component has decreased. It is necessary to add the active tab class name.\n      if (isActive && !tabEl.classList.contains(classNames.active)) {\n        requestMutation(() => {\n          tabEl.classList.add(classNames.active);\n        });\n      }\n      return;\n    }\n\n    const platformEl = tabEl.querySelector<HTMLElement>('.platform')!;\n    const prevPlatformEl = prevTabEl.querySelector<HTMLElement>('.platform')!;\n\n    // We move and resize the platform, so it repeats the position and size of the previous one\n    const shiftLeft = prevPlatformEl.parentElement!.offsetLeft - platformEl.parentElement!.offsetLeft;\n    const scaleFactor = prevPlatformEl.clientWidth / platformEl.clientWidth;\n\n    requestMutation(() => {\n      prevPlatformEl.classList.remove('animate');\n      platformEl.classList.remove('animate');\n      platformEl.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n      requestForcedReflow(() => {\n        forceReflow(platformEl);\n\n        return () => {\n          platformEl.classList.add('animate');\n          platformEl.style.transform = 'none';\n\n          prevTabEl.classList.remove(classNames.active);\n          tabEl.classList.add(classNames.active);\n        };\n      });\n    });\n  }, [isActive, previousActiveTab]);\n\n  const {\n    contextMenuAnchor, handleContextMenu, handleBeforeContextMenu, handleContextMenuClose,\n    handleContextMenuHide, isContextMenuOpen,\n  } = useContextMenuHandlers(tabRef, !contextActions);\n\n  const { handleClick, handleMouseDown } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (contextActions && (e.button === MouseButton.Secondary || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n\n    if (e.type === 'mousedown' && e.button !== MouseButton.Main) {\n      return;\n    }\n\n    onClick?.(clickArg!);\n  });\n\n  const getTriggerElement = useLastCallback(() => tabRef.current);\n  const getRootElement = useLastCallback(\n    () => (contextRootElementSelector ? tabRef.current!.closest(contextRootElementSelector) : document.body),\n  );\n  const getMenuElement = useLastCallback(\n    () => document.querySelector('#portals')!.querySelector('.Tab-context-menu .bubble'),\n  );\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <div\n      className={buildClassName('Tab', onClick && 'Tab--interactive', className)}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n      ref={tabRef}\n    >\n      <span className=\"Tab_inner\">\n        {typeof title === 'string' ? renderText(title) : title}\n        {Boolean(badgeCount) && (\n          <span className={buildClassName('badge', isBadgeActive && classNames.badgeActive)}>{badgeCount}</span>\n        )}\n        {isBlocked && <Icon name=\"lock-badge\" className=\"blocked\" />}\n        <i className=\"platform\" />\n      </span>\n\n      {contextActions && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"Tab-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          withPortal\n        >\n          {contextActions.map((action) => (\n            ('isSeparator' in action) ? (\n              <MenuSeparator key={action.key || 'separator'} />\n            ) : (\n              <MenuItem\n                key={action.title}\n                icon={action.icon}\n                destructive={action.destructive}\n                disabled={!action.handler}\n                onClick={action.handler}\n              >\n                {action.title}\n              </MenuItem>\n            )\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Tab;\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../lib/teact/teact';\n\nimport type { MenuItemContextAction } from './ListItem';\n\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\n\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  id?: number;\n  title: TeactNode;\n  badgeCount?: number;\n  isBlocked?: boolean;\n  isBadgeActive?: boolean;\n  contextActions?: MenuItemContextAction[];\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  className?: string;\n  tabClassName?: string;\n  onSwitchTab: (index: number) => void;\n  contextRootElementSelector?: string;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n// Should match duration from `--slide-transition` CSS variable\nconst SCROLL_DURATION = IS_IOS ? 450 : IS_ANDROID ? 400 : 300;\n\nconst TabList: FC<OwnProps> = ({\n  tabs, activeTab, onSwitchTab,\n  contextRootElementSelector, className, tabClassName,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePreviousDeprecated(activeTab);\n\n  useHorizontalScroll(containerRef, undefined, true);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    const { scrollWidth, offsetWidth, scrollLeft } = container;\n    if (scrollWidth <= offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.childNodes[activeTab] as HTMLElement | null;\n    if (!activeTabElement) {\n      return;\n    }\n\n    const { offsetLeft: activeTabOffsetLeft, offsetWidth: activeTabOffsetWidth } = activeTabElement;\n    const newLeft = activeTabOffsetLeft - (offsetWidth / 2) + (activeTabOffsetWidth / 2);\n\n    // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n    if (Math.abs(newLeft - scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n      return;\n    }\n\n    animateHorizontalScroll(container, newLeft, SCROLL_DURATION);\n  }, [activeTab]);\n\n  const lang = useOldLang();\n\n  return (\n    <div\n      className={buildClassName('TabList', 'no-scrollbar', className)}\n      ref={containerRef}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.id}\n          title={tab.title}\n          isActive={i === activeTab}\n          isBlocked={tab.isBlocked}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n          contextActions={tab.contextActions}\n          contextRootElementSelector={contextRootElementSelector}\n          className={tabClassName}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import type { ChangeEvent, FormEvent, RefObject } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport { requestForcedReflow, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLTextAreaElement>;\n  id?: string;\n  className?: string;\n  value?: string;\n  label?: string;\n  error?: string;\n  success?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  placeholder?: string;\n  autoComplete?: string;\n  maxLength?: number;\n  maxLengthIndicator?: string;\n  tabIndex?: number;\n  inputMode?: 'text' | 'none' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search';\n  onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n  onInput?: (e: FormEvent<HTMLTextAreaElement>) => void;\n  onKeyPress?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLTextAreaElement>) => void;\n  onBlur?: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n  onPaste?: (e: React.ClipboardEvent<HTMLTextAreaElement>) => void;\n  noReplaceNewlines?: boolean;\n};\n\nconst TextArea: FC<OwnProps> = ({\n  ref,\n  id,\n  className,\n  value,\n  label,\n  error,\n  success,\n  disabled,\n  readOnly,\n  placeholder,\n  autoComplete,\n  inputMode,\n  maxLength,\n  maxLengthIndicator,\n  tabIndex,\n  onChange,\n  onInput,\n  onKeyPress,\n  onKeyDown,\n  onBlur,\n  onPaste,\n  noReplaceNewlines,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let textareaRef = useRef<HTMLTextAreaElement>(null);\n  if (ref) {\n    textareaRef = ref;\n  }\n\n  const lang = useOldLang();\n  const labelText = error || success || label;\n  const fullClassName = buildClassName(\n    'input-group',\n    value && 'touched',\n    error ? 'error' : success && 'success',\n    disabled && 'disabled',\n    readOnly && 'disabled',\n    labelText && 'with-label',\n    className,\n  );\n\n  const resizeHeight = useLastCallback((element: HTMLTextAreaElement) => {\n    requestMutation(() => {\n      element.style.height = '0';\n      requestForcedReflow(() => {\n        const newHeight = element.scrollHeight;\n        return () => {\n          element.style.height = `${newHeight}px`;\n        };\n      });\n    });\n  });\n\n  useLayoutEffect(() => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n    resizeHeight(textarea);\n  }, []);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    const target = e.currentTarget;\n    if (!noReplaceNewlines) {\n      const previousSelectionEnd = target.selectionEnd;\n      // TDesktop replaces newlines with spaces as well\n      target.value = target.value.replace(/\\n/g, ' ');\n      target.selectionEnd = previousSelectionEnd;\n    }\n    resizeHeight(target);\n    onChange?.(e);\n  }, [noReplaceNewlines, onChange]);\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      <textarea\n        ref={textareaRef}\n        className=\"form-control\"\n        id={id}\n        dir=\"auto\"\n        value={value || ''}\n        tabIndex={tabIndex}\n        placeholder={placeholder}\n        maxLength={maxLength}\n        autoComplete={autoComplete}\n        inputMode={inputMode}\n        disabled={disabled}\n        readOnly={readOnly}\n        onChange={handleChange}\n        onInput={onInput}\n        onKeyPress={onKeyPress}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n        onPaste={onPaste}\n        aria-label={labelText}\n      />\n      {labelText && (\n        <label htmlFor={id}>{labelText}</label>\n      )}\n      {maxLengthIndicator && (\n        <div className=\"max-length-indicator\">{maxLengthIndicator}</div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(TextArea);\n","import React, { type FC, memo, useEffect } from '../../lib/teact/teact';\n\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useOldLang from '../../hooks/useOldLang';\n\ntype OwnProps = {\n  langKey: string;\n  endsAt: number;\n  onEnd?: NoneToVoidFunction;\n};\n\nconst UPDATE_FREQUENCY = 500; // Sometimes second gets skipped if using 1000\n\nconst TextTimer: FC<OwnProps> = ({ langKey, endsAt, onEnd }) => {\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  const serverTime = getServerTime();\n  const isActive = serverTime < endsAt;\n  useInterval(forceUpdate, isActive ? UPDATE_FREQUENCY : undefined);\n\n  useEffect(() => {\n    if (!isActive) {\n      onEnd?.();\n    }\n  }, [isActive, onEnd]);\n\n  if (!isActive) return undefined;\n\n  const timeLeft = endsAt - serverTime;\n  const formattedTime = formatMediaDuration(timeLeft);\n\n  return (\n    <span>\n      {lang(langKey, formattedTime)}\n    </span>\n  );\n};\n\nexport default memo(TextTimer);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eGD1rubd\",\"widget\":\"EXXsQxeq\",\"min\":\"C4vXj96y\",\"mid\":\"nRNm3LRD\",\"max\":\"LdztzMx0\",\"filler\":\"kudEBJOk\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport styles from './Toggle.module.scss';\n\ninterface OwnProps {\n  value: 'min' | 'mid' | 'max';\n}\n\nfunction Toggle({ value }: OwnProps) {\n  return (\n    <div className={buildClassName(styles.root, 'Toggle')} aria-hidden>\n      <i className={buildClassName(styles.filler, styles[value])} />\n      <i className={buildClassName(styles.widget, styles[value])} />\n    </div>\n  );\n}\n\nexport default memo(Toggle);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Oob7moh7\",\"avatar\":\"ao0o6F_1\",\"info\":\"e94nYlC4\",\"title\":\"ANs9RCJu\",\"subtitle\":\"RSn3O5Rx\",\"animated\":\"AtWkrIxV\",\"slide\":\"_iiRl0o2\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './PlaceholderChatInfo.module.scss';\n\nconst PlaceholderChatInfo = () => {\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.avatar, styles.animated)} />\n      <div className={styles.info}>\n        <div className={buildClassName(styles.title, styles.animated)} />\n        <div className={buildClassName(styles.subtitle, styles.animated)} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PlaceholderChatInfo);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport './Skeleton.scss';\n\ntype OwnProps = {\n  variant?: 'rectangular' | 'rounded-rect' | 'round';\n  animation?: 'wave' | 'pulse';\n  width?: number;\n  height?: number;\n  forceAspectRatio?: boolean;\n  inline?: boolean;\n  className?: string;\n};\n\nconst Skeleton: FC<OwnProps> = ({\n  variant = 'rectangular',\n  animation = 'wave',\n  width,\n  height,\n  forceAspectRatio,\n  inline,\n  className,\n}) => {\n  const classNames = buildClassName('Skeleton', variant, animation, className, inline && 'inline');\n  const aspectRatio = (width && height) ? `aspect-ratio: ${width}/${height}` : undefined;\n  const style = buildStyle(\n    forceAspectRatio && aspectRatio,\n    Boolean(width) && `width: ${width}px`,\n    !forceAspectRatio && Boolean(height) && `height: ${height}px`,\n  );\n  return (\n    <div className={classNames} style={style}>{inline && '\\u00A0'}</div>\n  );\n};\n\nexport default Skeleton;\n"],"names":["memo","_ref","title","disabled","isForForum","currentAvatarBlobUrl","onChange","selectedFile","setSelectedFile","useState","croppedBlobUrl","setCroppedBlobUrl","useEffect","handleAvatarCrop","useCallback","croppedImg","undefined","URL","revokeObjectURL","createObjectURL","handleModalClose","labelClassName","buildClassName","React","createElement","className","role","tabIndex","type","event","target","files","value","accept","Icon","name","src","draggable","alt","CropModal","file","onClose","text","isAlternateColor","ShowTransition","isOpen","Boolean","AnimatedCounter","id","options","selected","nestedCheckbox","loadingOptions","isRound","values","setValues","handleChange","useLastCallback","nestedOptionList","checked","currentTarget","newValues","push","nestedOptions","forEach","nestedOption","includes","filter","v","map","some","nestedValue","getCheckedNestedCount","checkedCount","length","option","Checkbox","label","subLabel","indexOf","isLoading","nestedCheckboxCount","noDefaultTitle","header","textParts","confirmLabel","confirmIsDestructive","isConfirmDisabled","isOnlyConfirm","areButtonsInColumn","children","confirmHandler","onCloseAnimationEnd","lang","useOldLang","containerRef","useRef","handleSelectWithEnter","index","handleKeyDown","useKeyboardListNavigation","Modal","split","textPart","ref","onKeyDown","Button","isText","onClick","color","cropperResultOptions","quality","format","circle","size","width","height","Croppie","croppiePromise","cropper","isCroppieReady","setIsCroppieReady","useLang","async","imgFile","cropContainer","document","getElementById","offsetWidth","offsetHeight","enableZoom","boundary","viewport","dataUri","blobToDataUri","bind","url","err","DEBUG","console","error","initCropper","default","ensureCroppie","then","handleCropClick","result","blobToFile","hasCloseButton","Loading","round","ariaLabel","ZERO_POINT","x","y","onDrag","onDragEnd","style","externalStyle","knobStyle","isDisabled","state","setState","isDragging","origin","translation","handleMouseDown","e","stopPropagation","preventDefault","getClientCoordinate","current","handleMouseMove","handleMouseUp","window","addEventListener","removeEventListener","fullClassName","cssStyles","useMemo","buildStyle","onMouseDown","onTouchStart","touches","clientX","clientY","isShown","buttonClassName","isRtl","DEFAULT_LIST_SELECTOR","DEFAULT_PRELOAD_BACKWARDS","DEFAULT_SENSITIVE_AREA","items","itemSelector","preloadBackwards","sensitiveArea","withAbsolutePositioning","maxHeight","noScrollRestore","noScrollRestoreOnTop","noFastList","cacheBuster","beforeChildren","scrollContainerClosest","onLoadMore","onScroll","onWheel","onDragOver","onDragLeave","stateRef","loadMoreBackwards","loadMoreForwards","debounce","noScroll","arguments","direction","LoadMoreDirection","Backwards","Forwards","scrollContainer","closest","scrollHeight","clientHeight","useLayoutEffect","container","requestForcedReflow","newScrollTop","listItemElements","querySelectorAll","currentAnchor","Array","from","scrollTop","newAnchorTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","offsetParent","handleNativeScroll","teactFastList","IS_ANDROID","buttonRef","icon","iconClassName","leftElement","menuBubbleClassName","secondaryIcon","secondaryIconClassName","rightElement","allowDisabledClick","ripple","narrow","inactive","focus","destructive","multiline","isStatic","allowSelection","withColorTransition","contextActions","withPortalForMenu","href","onContextMenu","clickArg","onSecondaryIconClick","onDragEnter","nonInteractive","isTouched","markIsTouched","unmarkIsTouched","useFlag","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","getRootElement","getMenuElement","querySelector","getLayout","withPortal","handleClickEvent","ctrlKey","metaKey","shiftKey","button","MouseButton","Main","handleClick","Auxiliary","IS_TOUCH_ENV","requestMeasure","handleSecondaryIconClick","handleSecondaryIconMouseDown","useFastClick","Secondary","ButtonElementTag","dir","RippleEffect","Menu","anchor","autoClose","bubbleClassName","action","MenuSeparator","key","MenuItem","handler","renderText","styles","root","ANIMATION_DURATION","freezeWhenClosed","dialogRef","contentClassName","headerClassName","isSlim","hasAbsoluteCloseButton","absoluteCloseButtonColor","noBackdrop","noBackdropClose","dialogStyle","isLowStackPriority","dialogContent","onEnter","modalRef","shouldRender","useShowTransition","withShouldRender","withCloseButton","disableDirectTextInput","enableDirectTextInput","handleEnter","captureKeyboardListeners","onEsc","trapFocus","useHistoryBack","isActive","onBack","useLayoutEffectWithPrevDeps","_ref2","prevIsOpen","body","classList","toggle","beginHeavyAnimation","remove","Portal","closeButton","renderHeader","duration","onEnd","timeLeft","setTimeLeft","useInterval","prev","svg","cx","cy","r","transform","pathLength","formatCountdownShort","DEFAULT_DURATION","CUSTOM_EMOJI_SIZE","REM","notification","actions","getActions","localId","message","actionText","cacheBreaker","disableClickDismiss","dismissAction","customEmojiIconId","shouldShowTimer","containerSelector","setIsOpen","timerRef","transitionClassNames","useShowTransitionDeprecated","handleDismiss","dismissNotification","closeAndDismiss","force","setTimeout","ANIMATION_END_DELAY","payload","isArray","cb","captureEscKeyListener","clearTimeout","handleMouseEnter","handleMouseLeave","renderedTitle","isLangFnParam","with","renderedMessage","renderedActionText","onMouseEnter","onMouseLeave","CustomEmoji","forceAlways","documentId","RoundTimer","Math","ceil","SIZES","s","m","l","xl","MIN_PROGRESS","progress","square","transparent","noCross","rotationOffset","withColor","canvasRef","progressRef","useStateRef","dpr","useDevicePixelRatio","useDynamicColorListener","growStartedAt","prevProgress","isFirst","growFrom","animate","min","max","Date","now","targetProgress","t","animationFactor","timingFunctions","easeOutQuad","currentProgress","canvas","strokeWidth","shouldInit","centerCoordinate","radius","offset","startAngle","PI","endAngle","ctx","getContext","lineCap","strokeStyle","lineWidth","clearRect","beginPath","arc","stroke","drawSpinnerArc","requestMutation","subLabelClassName","hidden","onlyInput","withIcon","isLink","onSubLabelClick","Spinner","loadingOption","onClickAction","Radio","step","bold","renderValue","isCenteredLayout","Number","mainClassName","trackWidth","Fragment","marks","rangeCount","sliderRef","fillPercentage","toFixed","rangeCountIndex","rangeValue","toString","setProperty","mark","isFilled","parseInt","newValue","openTimeout","isFirstTimeActivation","onActivate","buttonProps","isMouseInside","_extends","resultsItemSelector","inputId","focused","spinnerColor","spinnerBackgroundColor","placeholder","autoComplete","canClose","autoFocusSearch","hasUpButton","hasDownButton","teactExperimentControlled","withBackIcon","onStartBackspace","onReset","onFocus","onBlur","onUpClick","onDownClick","onSpinnerClick","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","useInputFocusOnOpen","blur","oldLang","handleFocus","element","selectionStart","selectionEnd","Transition","shouldCleanup","activeKey","slideClassName","backgroundColor","props","hasArrow","labelText","htmlFor","openSystemFilesDialog","count","itemName","itemPluralName","isHidden","isCustom","noCloseTransition","shouldAnimateFirstRender","externalRef","usePreviousDeprecated","prevChildren","fromChildrenRef","isFirstRender","noMountTransition","noAnimation","onCheck","classNames","isBlocked","badgeCount","isBadgeActive","previousActiveTab","contextRootElementSelector","tabRef","add","tabEl","prevTabEl","parentElement","contains","platformEl","prevPlatformEl","shiftLeft","offsetLeft","scaleFactor","clientWidth","forceReflow","SCROLL_DURATION","IS_IOS","tabs","activeTab","onSwitchTab","tabClassName","useHorizontalScroll","scrollWidth","scrollLeft","activeTabElement","childNodes","activeTabOffsetLeft","activeTabOffsetWidth","newLeft","abs","animateHorizontalScroll","tab","i","Tab","success","readOnly","inputMode","maxLength","maxLengthIndicator","onInput","onKeyPress","onPaste","noReplaceNewlines","textareaRef","resizeHeight","newHeight","textarea","previousSelectionEnd","replace","langKey","endsAt","forceUpdate","useForceUpdate","serverTime","getServerTime","formattedTime","formatMediaDuration","filler","widget","PlaceholderChatInfo","variant","animation","forceAspectRatio","inline","aspectRatio"],"sourceRoot":""}