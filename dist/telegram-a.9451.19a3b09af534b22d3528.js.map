{"version":3,"file":"telegram-a.9451.19a3b09af534b22d3528.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.module.scss?4803","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.module.scss?843e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.module.scss?94bc","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.tsx","webpack://telegram-t/./src/components/modals/sharePreparedMessage/SharePreparedMessageModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.type === 'chatEditPhoto' || action?.type === 'suggestProfilePhoto') {\n    return {\n      media: action.photo!,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport getOffsetToContainer from '../../../util/visibility/getOffsetToContainer';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [\n      MediaViewerOrigin.Inline,\n      MediaViewerOrigin.ScheduledInline,\n      MediaViewerOrigin.Album,\n      MediaViewerOrigin.ScheduledAlbum,\n    ].includes(origin)\n    && !isMessageImageFullyVisible(toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n\n  const { top } = getOffsetToContainer(imageEl, messageListElement);\n\n  return top > messageListElement.scrollTop\n    && top + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ChannelAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n    case MediaViewerOrigin.ChannelAvatar:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow, selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  chat?: ApiChat;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  chat,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <Icon name=\"download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <Icon name=\"download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message' && chat) {\n      openDeleteMessageModal({\n        chatId: chat?.id,\n        messageIds: [item.message.id],\n        isSchedule: messageListType === 'scheduled',\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon as IconName}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <Icon name=\"zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <Icon name=\"zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <Icon name=\"flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <Icon name=\"copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const chat = selectCurrentChat(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      chat,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <Icon name={isPlaying ? 'pause' : 'play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <Icon name=\"pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  timestamp?: number;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  timestamp,\n  handleSponsoredClick,\n  onClose,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  useEffect(() => {\n    if (!timestamp) return;\n    videoRef.current!.currentTime = timestamp;\n    setCurrentTime(timestamp);\n  }, [setCurrentTime, timestamp]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <Icon name=\"play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION } from '../../config';\nimport {\n  selectIsMessageProtected, selectMessageTimestampableDuration, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalEffect } from '../../hooks/useSignalEffect';\nimport useThrottledCallback from '../../hooks/useThrottledCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  threadId?: ThreadId;\n  timestamp?: number;\n  maxTimestamp?: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst PLAYBACK_SAVE_INTERVAL = 1000;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  threadId,\n  timestamp,\n  maxTimestamp,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const { updateLastPlaybackTimestamp } = getActions();\n\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n  const [getCurrentTime] = useCurrentTimeSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const updatePlaybackTimestamp = useThrottledCallback(() => {\n    if (!isActive || !textMessage || media?.mediaType !== 'video') return;\n    if (media.duration < MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION) return;\n\n    const message = 'id' in textMessage ? textMessage : undefined;\n    const currentTime = getCurrentTime();\n    if (!currentTime || !message || message.isInAlbum) return;\n\n    // Reset timestamp if we are close to the end of the video\n    const newTimestamp = media.duration - currentTime > PLAYBACK_SAVE_INTERVAL / 1000 ? currentTime : undefined;\n    updateLastPlaybackTimestamp({ chatId: message.chatId, messageId: message.id, timestamp: newTimestamp });\n  }, [getCurrentTime, isActive, media, textMessage], PLAYBACK_SAVE_INTERVAL);\n\n  useSignalEffect(updatePlaybackTimestamp, [getCurrentTime]);\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({\n      message: textMessage, maxTimestamp, threadId, forcePlayback: true, isForMediaViewer: true,\n    }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n          timestamp={timestamp}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n      timestamp,\n      threadId,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    const maxTimestamp = message && selectMessageTimestampableDuration(global, message, true);\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n      threadId,\n      timestamp,\n      maxTimestamp,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getPeerTitle, isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Icon from '../common/icons/Icon';\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target instanceof HTMLElement && e.target.closest('a')) return; // Prevent closing on timestamp click\n\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ isMedia: isFromMedia, isFullscreen: true, peerId: chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <Icon name=\"eye-closed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-past\" className={styles.icon} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-future\" className={styles.icon} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...selectedIds || [], ...contactIds], query: searchQuery, type: 'user' }));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...closeFriendIds, ...contactIds], query: searchQuery, type: 'user' }));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle, getUserFullName } from '../../global/helpers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getHours } from '../../util/dates/units';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? getHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <Icon name={option.icon} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <Icon name=\"next\" />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  getPeerTitle,\n  isUserId,\n} from '../../../global/helpers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { getPeerTitle, isChatChannel, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativeTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  areChatSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  areChatSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadChatSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !areChatSettingsLoaded) {\n      loadChatSettings({ chatId: peerId });\n    }\n  }, [areChatSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(lang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = lang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = lang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = lang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: lang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: lang('StealthModeOn'),\n        message: lang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: lang('StoryNotFound'),\n    });\n  }, [lang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={lang('AccDescrOpenMenu2')}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      );\n    };\n  }, [isMobile, lang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon: IconName = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <Icon name={privacyIcon} />\n        {isOut && <Icon name=\"next\" />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(lang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(lang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativeTime(lang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{lang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={lang('Volume')}\n            >\n              <Icon name={(isMuted || noSound) ? 'speaker-muted-story' : 'speaker-story'} />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{lang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {lang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {lang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {lang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-closed-outline\" onClick={handleOpenStealthModal}>\n                {lang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{lang('lng_report_story')}</MenuItem>}\n            {isOut && <MenuItem icon=\"delete\" destructive onClick={handleDeleteStoryClick}>{lang('Delete')}</MenuItem>}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={lang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={lang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={lang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={lang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately')}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n    reportModal,\n    giftInfoModal,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || reportModal || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal || giftInfoModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    areChatSettingsLoaded: Boolean(chat?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, getStoryMediaHash } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <Icon name={areReactionsFirst ? 'heart-outline' : 'recent'} className={styles.iconSort} />\n        <Icon name=\"down\" className={styles.iconDown} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport {\n  filterChatIdsByType, selectChat, selectChatFullInfo, selectUser,\n} from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n\n    const peerIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = selectChat(global, id);\n      const user = selectUser(global, id);\n      if (user && !isDeletedUser(user)) return true;\n\n      const chatFullInfo = selectChatFullInfo(global, id);\n\n      return chat && (!chatFullInfo || getCanPostInChat(chat, undefined, undefined, chatFullInfo));\n    });\n\n    const sorted = sortChatIds(\n      filterPeersByQuery({\n        ids: unique([\n          ...(currentUserId ? [currentUserId] : []),\n          ...peerIds,\n          ...(contactIds || []),\n        ]),\n        query: search,\n      }),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport { pick } from '../../util/iteratees';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: pick(contactRequest, ['firstName', 'lastName', 'phoneNumber']),\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/browser/url';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (!url) {\n      return;\n    }\n\n    window.open(ensureProtocol(url), '_blank', 'noopener noreferrer');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlText', { url: renderingUrl }, { withNodes: true, withMarkdown: true }))}\n      confirmLabel={lang('OpenUrlConfirm')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else if (currentAuth?.url) {\n      window.open(ensureProtocol(currentAuth.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <Icon name=\"previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <Icon name=\"next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text NewContactModal__help-text__negative\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport type { Point, Size } from '../types';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n  cachedPosition?: Point,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(cachedPosition);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown && !cachedPosition ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    return filterPeersByQuery({ ids: foundIds, query: searchQuery, type: 'user' });\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst FULLSCREEN_BUTTONS_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: isFullscreen ? FULLSCREEN_BUTTONS_AREA_HEIGHT : 0,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { BotAppPermissions, ThemeKey } from '../../../types';\nimport type {\n  PopupOptions,\n  WebApp,\n  WebAppInboundEvent,\n  WebAppModalStateType,\n  WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectBotAppPermissions,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { getGeolocationStatus, IS_GEOLOCATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isPremium?: boolean;\n  modalState?: WebAppModalStateType;\n  botAppPermissions?: BotAppPermissions;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppPermissions,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    openChatWithInfo,\n    showNotification,\n    openEmojiStatusAccessModal,\n    openLocationAccessModal,\n    changeWebAppModalState,\n    closeWebAppModal,\n    openPreparedInlineMessageModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const isAvailable = IS_GEOLOCATION_SUPPORTED;\n  const isAccessRequested = botAppPermissions?.geolocation !== undefined;\n  const isAccessGranted = Boolean(botAppPermissions?.geolocation);\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    if (!bot) return;\n    const result = await callApi('allowBotSendMessages', { bot });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    if (!bot) return;\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChatWithInfo({ id: bot!.id });\n  });\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n        || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n        || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n\n    if (eventType === 'web_app_send_prepared_message') {\n      if (!bot || !webAppKey) return;\n      const { id } = eventData;\n      openPreparedInlineMessageModal({ botId: bot.id, messageId: id, webAppKey });\n    }\n\n    if (eventType === 'web_app_request_emoji_status_access') {\n      if (!bot) return;\n      openEmojiStatusAccessModal({ bot, webAppKey });\n    }\n\n    if (eventType === 'web_app_check_location') {\n      const handleGeolocationCheck = () => {\n        sendEvent({\n          eventType: 'location_checked',\n          eventData: {\n            available: isAvailable,\n            access_requested: isAccessRequested,\n            access_granted: isAccessGranted,\n          },\n        });\n      };\n\n      handleGeolocationCheck();\n    }\n\n    if (eventType === 'web_app_request_location') {\n      const handleRequestLocation = async () => {\n        const geolocationData = await getGeolocationStatus();\n        const { accessRequested, accessGranted, geolocation } = geolocationData;\n\n        if (!accessGranted || !accessRequested) {\n          sendEvent({\n            eventType: 'location_requested',\n            eventData: {\n              available: false,\n            },\n          });\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n          return;\n        }\n\n        if (isAvailable) {\n          if (isAccessRequested) {\n            sendEvent({\n              eventType: 'location_requested',\n              eventData: {\n                available: botAppPermissions?.geolocation!,\n                latitude: geolocation?.latitude,\n                longitude: geolocation?.longitude,\n                altitude: geolocation?.altitude,\n                course: geolocation?.heading,\n                speed: geolocation?.speed,\n                horizontal_accuracy: geolocation?.accuracy,\n                vertical_accuracy: geolocation?.accuracy,\n              },\n            });\n          } else {\n            openLocationAccessModal({ bot, webAppKey });\n          }\n        } else {\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n        }\n      };\n\n      handleRequestLocation();\n    }\n\n    if (eventType === 'web_app_open_location_settings') {\n      handleOpenChat();\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-label={lang('WebAppCollapse')}\n            onClick={handleCollapseClick}\n          >\n            <Icon\n              name=\"down\"\n              className={styles.icon}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('AriaMoreButton')}\n            onClick={handleShowContextMenu}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n              && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={oldLang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={oldLang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const currentUser = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n    const botAppPermissions = bot ? selectBotAppPermissions(global, bot.id) : undefined;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      currentUser,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppPermissions,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tool-bar\":\"qK4q0Sat\",\"toolBar\":\"qK4q0Sat\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { Point, Size, ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  cachedSize?: Size;\n  cachedPosition?: Point;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  cachedSize,\n  cachedPosition,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n    updateMiniAppCachedPosition,\n    updateMiniAppCachedSize,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(cachedSize || DEFAULT_MAXIMIZED_STATE_SIZE);\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n    position,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n    cachedPosition,\n  );\n\n  const x = position?.x;\n  const y = position?.y;\n  useEffect(() => {\n    if (!isDragging && x !== undefined && y !== undefined) {\n      updateMiniAppCachedPosition({ position: { x, y } });\n    }\n  }, [isDragging, x, y]);\n\n  useEffect(() => {\n    if (!isDragging && size && isMaximizedState) { updateMiniAppCachedSize({ size }); }\n  }, [isDragging, isMaximizedState, size]);\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <div className={styles.toolBar}>\n          {!isMoreAppsTabActive && renderMoreAppsButton()}\n\n          {!isMoreAppsTabActive && (\n            <Button\n              className={buildClassName(\n                styles.windowStateButton,\n                styles.fullscreenButton,\n                'no-drag',\n              )}\n              round\n              color=\"translucent\"\n              size=\"tiny\"\n              onClick={handleFullscreenClick}\n            >\n              <Icon className={styles.stateIcon} name=\"expand-modal\" />\n            </Button>\n          )}\n\n          <Button\n            className={buildClassName(\n              styles.windowStateButton,\n              'no-drag',\n            )}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            onClick={handleCollapseClick}\n          >\n            <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const cachedPosition = global.settings.miniAppsCachedPosition;\n    const cachedSize = global.settings.miniAppsCachedSize;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      cachedPosition,\n      cachedSize,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n} & ({\n  icon: IconName;\n  isFontIcon: true;\n} | {\n  icon: string;\n  isFontIcon?: false;\n});\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <Icon name={icon} className={styles.fontIcon} style={`--item-color: rgb(${r},${g},${b})`} />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <Icon name=\"previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <Icon name=\"next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS: Record<string, IconName> = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-closed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium\n      ? lang('OK')\n      : lang('SubscribeToPremium', { price: formatCurrency(lang, perMonthPrice, currency) }, { withNodes: true });\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={oldLang('Back')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={oldLang(LIMITS_TITLES[limit])}\n                        description={oldLang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {oldLang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumGiftOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumGiftOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const oldLang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={oldLang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {oldLang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrencyAsString(amount, currency, oldLang.code)} x ${users!}`\n            : oldLang('PricePerMonth', formatCurrencyAsString(perMonth, currency, oldLang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrencyAsString(amount, currency, oldLang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      lang,\n      perMonthPrice,\n      currency,\n    );\n  }, [selectedSubscriptionOption, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : oldLang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = oldLang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? oldLang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : oldLang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : oldLang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return oldLang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? oldLang('TelegramPremiumUserDialogSubtitle')\n      : oldLang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={oldLang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={oldLang('Close')}\n            >\n              <Icon name=\"close\" />\n            </Button>\n            {fromUserStatusEmoji ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {oldLang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={oldLang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={oldLang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {oldLang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const foundChannelIds = channelIds ? filterPeersByQuery({ ids: channelIds, query: searchQuery, type: 'chat' }) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredUserIds = memberIds\n      ? filterPeersByQuery({ ids: memberIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(unique(filteredUserIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={styles.main} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, undefined, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const hasOnlyStaticThumb = hasStaticThumb && !hasVideoThumb && !hasAnimatedThumb && !thumbCustomEmojiId;\n\n  const shouldFallbackToStatic = hasOnlyStaticThumb || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb);\n  const staticHash = shouldFallbackToStatic && getStickerMediaHash(stickerSet.stickers![0], 'preview');\n  const staticMediaData = useMedia(staticHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !shouldFallbackToStatic) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || staticMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div ref={containerRef} className={buildClassName(styles.root, 'sticker-set-cover')}>\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToStatic) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || staticMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport Sparkles from './Sparkles';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n  withSparkles?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n  withSparkles,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, undefined, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: { type: 'regular', documentId: sticker.id, until: getServerTime() + duration },\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {withSparkles && <Sparkles preset=\"button\" /> }\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiEmojiStatusType, ApiReactionWithPaid, ApiSticker,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  collectibleStatuses?: ApiEmojiStatusType[];\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps & StateProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  collectibleStatuses,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isStatusCollectible = stickerSet.id === COLLECTIBLE_STATUS_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const collectibleEmojiIdsSet = useMemo(() => (\n    collectibleStatuses ? new Set(collectibleStatuses.map(({ documentId }) => documentId)) : undefined\n  ), [collectibleStatuses]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && !isStatusCollectible\n   && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            const withSparkles = sticker.id === COLLECTIBLE_STATUS_SET_ID\n            || collectibleEmojiIdsSet?.has(sticker.id);\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n                withSparkles={withSparkles}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return { collectibleStatuses };\n  },\n)(StickerSet));\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, oldLang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction, collectibleStatusEmojis, lang,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatus: { type: 'regular', documentId: renderingModal.customEmojiId, until: expires },\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n          withEmojiStatus\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const isNew = invite.alreadyPeerIds.length === 0;\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = isNew ? lang('FolderLinkSubtitleNew')\n    : newChatsCount ? lang('FolderLinkSubtitleAdd', {\n      chats: lang('FolderLinkSubtitleAddCount', { count: newChatsCount }, { pluralValue: newChatsCount }),\n      title: renderTextWithEntities({\n        text: folder.title.text,\n        entities: folder.title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      }),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    }) : lang('FolderLinkSubtitleAlready');\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {oldLang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length\n                  ? oldLang('DeselectAll') : oldLang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && oldLang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {oldLang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>([]);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {lang('FolderLinkSubtitleNew')}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? oldLang('DeselectAll') : oldLang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkAddFolder')}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) {\n      return renderTextWithEntities({\n        text: renderingInfo.invite.title.text,\n        entities: renderingInfo.invite.title.entities,\n        noCustomEmojiPlayback: renderingInfo.invite.noTitleAnimations,\n      });\n    }\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport { selectSponsoredMessage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredMessageContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  message?: ApiSponsoredMessage;\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ message, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(message);\n  const isMonetizationSharing = message?.canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          withSeparator\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && message && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            message={message}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const message = modal?.chatId ? selectSponsoredMessage(global, modal.chatId) : undefined;\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      message,\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      withSeparator\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['monetizationVerificationModal'];\n};\n\ntype StateProps = {\n  passwordHint?: string;\n};\n\nconst VerificationMonetizationModal = ({\n  modal,\n  passwordHint,\n}: OwnProps & StateProps) => {\n  const {\n    closeMonetizationVerificationModal, clearMonetizationVerificationError, processMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    if (!renderingModal) return;\n    processMonetizationRevenueWithdrawalUrl({\n      peerId: renderingModal.chatId,\n      currentPassword: password,\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationVerificationError();\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeMonetizationVerificationModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('CheckPasswordTitle')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('CheckPasswordPlaceholder')}\n            error={renderingModal?.errorKey && lang.withRegular(renderingModal.errorKey)}\n            description={lang('CheckPasswordDescription')}\n            clearError={handleClearError}\n            isLoading={renderingModal?.isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      passwordHint,\n    };\n  },\n)(VerificationMonetizationModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MKdSUg2P\",\"chatItem\":\"qEIwBtp0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectIsCurrentUserPremium, selectStickerSet, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './EmojiStatusAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['emojiStatusAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n  stickerSet?: ApiStickerSet;\n  isPremium?: boolean;\n};\n\nconst INTERVAL = 3000;\n\nconst EmojiStatusAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n  stickerSet,\n  isPremium,\n}) => {\n  const {\n    closeEmojiStatusAccessModal,\n    toggleUserEmojiStatusPermission,\n    sendWebAppEvent,\n    openPremiumModal,\n    loadDefaultStatusIcons,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [currentStatusIndex, setCurrentStatusIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers) {\n      loadDefaultStatusIcons();\n    }\n  }, [isOpen, stickerSet]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !stickerSet?.stickers) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: stickerSet.stickers[currentStatusIndex].id,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, stickerSet, currentStatusIndex]);\n\n  const totalCount = stickerSet?.stickers?.length;\n  useInterval(\n    () => {\n      if (!totalCount) return;\n      setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % totalCount);\n    },\n    totalCount ? INTERVAL : undefined,\n  );\n\n  const renderPickerItem = useLastCallback(() => {\n    return (\n      <PeerChip\n        withEmojiStatus\n        className={styles.chatItem}\n        itemClassName={styles.itemName}\n        mockPeer={mockPeerWithStatus}\n      />\n    );\n  });\n\n  const confirmHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      if (isPremium) {\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'allowed',\n            },\n          },\n        });\n        toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: true, isBotAccessEmojiGranted: true });\n      } else {\n        openPremiumModal();\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'cancelled',\n            },\n          },\n        });\n      }\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'emoji_status_access_requested',\n          eventData: {\n            status: 'cancelled',\n          },\n        },\n      });\n    }\n    if (isPremium) {\n      toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: false });\n    }\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('EmojiStatusAccessText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      contentClassName={styles.content}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderPickerItem()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const isPremium = selectIsCurrentUserPremium(global);\n    const stickerSet = global.defaultStatusIconsId ? selectStickerSet(global, global.defaultStatusIconsId) : undefined;\n\n    return {\n      currentUser,\n      stickerSet,\n      isPremium,\n    };\n  },\n)(EmojiStatusAccessModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getGeolocationStatus } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './LocationAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['locationAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst LocationAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n}) => {\n  const {\n    closeLocationAccessModal, toggleUserLocationPermission, sendWebAppEvent,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const confirmHandler = useLastCallback(async () => {\n    const geolocationData = await getGeolocationStatus();\n    const { geolocation } = geolocationData;\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: true,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: true,\n            latitude: geolocation?.latitude,\n            longitude: geolocation?.longitude,\n            altitude: geolocation?.altitude,\n            course: geolocation?.heading,\n            speed: geolocation?.speed,\n            horizontal_accuracy: geolocation?.accuracy,\n            vertical_accuracy: geolocation?.accuracy,\n          },\n        },\n      });\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: false,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: false,\n          },\n        },\n      });\n    }\n  });\n\n  const renderInfo = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return (\n      <div className={styles.avatars}>\n        <Avatar\n          size=\"large\"\n          peer={currentUser}\n        />\n        <Icon name=\"next\" className={styles.arrow} />\n        <Avatar\n          size=\"large\"\n          peer={modal.bot}\n        />\n      </div>\n    );\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('LocationPermissionText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderInfo()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n\n    return {\n      currentUser,\n    };\n  },\n)(LocationAccessModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatars\":\"CGPoDaLo\",\"arrow\":\"pzERgD5x\"};","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Rzj2LMLf\",\"content\":\"Ve4u2KVI\",\"modalTitle\":\"E42tgAwD\",\"container\":\"pNSCKAVN\",\"header\":\"P1fPh6h8\",\"actionMessageView\":\"McJgXCtB\",\"info\":\"xWnXsG7q\",\"background\":\"_6w75ldP\",\"customBgImage\":\"CZkpv8n0\",\"customBgColor\":\"VJAYrDF_\",\"withTransition\":\"lElCwweL\",\"blurred\":\"m8xzfVvU\",\"withRightColumn\":\"rJCyBVMB\"};","import React, {\n  type FC,\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getMockPreparedMessageFromResult, getUserFullName } from '../../../global/helpers';\nimport { selectTheme, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Message from '../../middle/message/Message';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PreparedMessageModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['preparedMessageModal'];\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  bot?: ApiUser;\n};\n\nconst PreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  customBackground,\n  backgroundColor,\n  bot,\n}) => {\n  const {\n    closePreparedInlineMessageModal, sendWebAppEvent, openSharePreparedMessageModal,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const { webAppKey, message, botId } = modal || {};\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  const handleOpenClick = useLastCallback(() => {\n    if (webAppKey && botId && message) {\n      openSharePreparedMessageModal({\n        webAppKey,\n        message,\n      });\n      closePreparedInlineMessageModal();\n    }\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closePreparedInlineMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.header}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={buildClassName('modal-title', styles.modalTitle)}>\n          {lang('BotShareMessage')}\n        </h3>\n      </div>\n    );\n  }, [lang, modal]);\n\n  const localMessage = useMemo(() => {\n    if (!botId || !message || !webAppKey) return undefined;\n    return getMockPreparedMessageFromResult(botId, message);\n  }, [botId, message, webAppKey]);\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  return (\n    <Modal\n      dialogRef={containerRef}\n      isOpen={isOpen}\n      header={header}\n      onClose={handleCloseClick}\n      className={styles.root}\n      contentClassName={styles.content}\n    >\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        {localMessage && (\n          <Message\n            key={botId}\n            message={localMessage}\n            threadId={MAIN_THREAD_ID}\n            messageListType=\"thread\"\n            noComments\n            noReplies\n            appearanceOrder={0}\n            isJustAdded={false}\n            isFirstInGroup\n            isLastInGroup\n            isLastInList={false}\n            isFirstInDocumentGroup={false}\n            isLastInDocumentGroup={false}\n          />\n        )}\n      </div>\n      <div className={styles.container}>\n        <p className={styles.info}>\n          {lang('WebAppShareMessageInfo', { user: getUserFullName(bot) })}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={handleOpenClick}\n        >\n          {lang('BotShareMessageShare')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }) => {\n    const theme = selectTheme(global);\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = global.settings.themes[theme] || {};\n    const bot = modal ? selectUser(global, modal?.botId) : undefined;\n\n    return {\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      bot,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PreparedMessageModal));\n","import React, {\n  type FC,\n  memo, useEffect,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getPeerTitle } from '../../../global/helpers';\nimport { selectPeer } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RecipientPicker from '../../common/RecipientPicker';\n\nexport type OwnProps = {\n  modal: TabState['sharePreparedMessageModal'];\n};\n\nconst SharePreparedMessageModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const {\n    closeSharePreparedMessageModal,\n    sendInlineBotResult,\n    sendWebAppEvent,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { message, filter, webAppKey } = modal || {};\n\n  const handleClose = useLastCallback(() => {\n    closeSharePreparedMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const handleSelectRecipient = useLastCallback((id: string, threadId?: ThreadId) => {\n    if (message && webAppKey) {\n      const global = getGlobal();\n      const peer = selectPeer(global, id);\n      sendInlineBotResult({\n        chatId: id,\n        threadId: threadId || MAIN_THREAD_ID,\n        id: message.result.id,\n        queryId: message.result.queryId,\n      });\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_sent',\n        },\n      });\n      showNotification({\n        message: lang('BotSharedToOne', getPeerTitle(lang, peer!)),\n      });\n      closeSharePreparedMessageModal();\n    }\n  });\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(SharePreparedMessageModal);\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"_YNfwDqt\",\"root\":\"SeaF_shb\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"button\":\"goI3MITH\",\"options\":\"b6847Kh3\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"proceedButtons\":\"L4YzeG91\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPeerTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  getSendersFromSelectedMessages,\n  selectBot,\n  selectCanDeleteSelectedMessages,\n  selectChat,\n  selectChatFullInfo, selectIsChatWithBot,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport AvatarList from './AvatarList';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  messageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  onConfirm?: NoneToVoidFunction;\n  canBanUsers?: boolean;\n  isCreator?: boolean;\n  linkedChatId?: string;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isSuperGroup,\n  isSchedule,\n  currentUserId,\n  messageIds,\n  isCreator,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  chatBot,\n  adminMembersById,\n  canBanUsers,\n  linkedChatId,\n}) => {\n  const {\n    closeDeleteMessageModal,\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n    deleteParticipantHistory,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [peerIdsToDeleteAll, setPeerIdsToDeleteAll] = useState<string[] | undefined>(undefined);\n  const [peerIdsToBan, setPeerIdsToBan] = useState<string[] | undefined>(undefined);\n  const [peerIdsToReportSpam, setPeerIdsToReportSpam] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const [shouldDeleteForAll, setShouldDeleteForAll] = useState(true);\n\n  const peerList = useMemo(() => {\n    if (isChannel || !messageIds || !chat) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n    const senderArray = getSendersFromSelectedMessages(global, chat.id, messageIds);\n    return senderArray ? unique(senderArray)\n      .filter((peer) => peer?.id !== chat?.id && peer?.id !== linkedChatId) : MEMO_EMPTY_ARRAY;\n  }, [chat, isChannel, linkedChatId, messageIds]);\n\n  const buildNestedOptionListWithAvatars = useLastCallback(() => {\n    return peerList.map((member) => {\n      return {\n        value: `${member.id}`,\n        label: getPeerTitle(lang, member) || '',\n        leftElement: <Avatar size=\"small\" peer={member} />,\n      };\n    });\n  });\n\n  const peerListToDeleteAll = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== linkedChatId && peer.id !== currentUserId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToReportSpam = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== currentUserId && peer.id !== linkedChatId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToBan = useMemo(() => {\n    const isCurrentUserInList = peerList.some((peer) => peer.id === currentUserId);\n    const shouldReturnEmpty = !canBanUsers || isCurrentUserInList;\n\n    if (shouldReturnEmpty) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return peerList.filter((peer) => {\n      const isAdmin = adminMembersById?.[peer.id];\n      return isCreator || !isAdmin;\n    });\n  }, [peerList, isCreator, currentUserId, canBanUsers, adminMembersById]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return Boolean(peerListToDeleteAll.length || peerListToReportSpam.length || peerListToBan.length);\n  }, [peerListToDeleteAll, peerListToReportSpam, peerListToBan]);\n\n  const shouldShowOption = shouldShowAdditionalOptions\n    && !canDeleteForAll && !isSchedule && isSuperGroup;\n\n  const peerNames = useMemo(() => {\n    if (!peerList || isSchedule) return {};\n    return buildCollectionByCallback(peerList, (peer) => [peer.id, getPeerTitle(lang, peer)]);\n  }, [isSchedule, lang, peerList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'spam' : peerList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, linkedChatId, currentUserId]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'delete_all' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(peerNames)[0]),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, peerNames, linkedChatId, currentUserId]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'ban' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(peerNames)[0])),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, messageIds, peerList, peerNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const filterMessageIdByPeerId = useLastCallback((peerIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(global, chat.id, msgId);\n      return sender && peerIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteAllPeerMessages = useLastCallback((peerIdList: string[]) => {\n    if (!chat) return;\n    peerIdList.forEach((peerId) => {\n      deleteParticipantHistory({ peerId, chatId: chat.id });\n    });\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageList = useLastCallback(() => {\n    if (!chat || !messageIds) return;\n\n    onConfirm?.();\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (shouldShowOption) {\n      if (peerIdsToReportSpam) {\n        const global = getGlobal();\n        const peerIdList = peerIdsToReportSpam.filter((option) => !Number.isNaN(Number(option)));\n        const messageList = messageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const peer = selectSenderFromMessage(global, chat.id, msgId);\n          if (peer && peerIdList.includes(peer.id)) {\n            if (!acc[peer.id]) {\n              acc[peer.id] = [];\n            }\n            acc[peer.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(messageList);\n      }\n\n      if (peerIdsToDeleteAll) {\n        const peerIdList = peerIdsToDeleteAll.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteAllPeerMessages(peerIdList);\n      }\n\n      if (peerIdsToBan && !havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteMember(peerIdList);\n        const filteredMessageIdList = filterMessageIdByPeerId(peerIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (peerIdsToBan && havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleUpdateChatMemberBannedRights(peerIdList);\n      }\n\n      if (!peerIdsToReportSpam || !peerIdsToDeleteAll || !peerIdsToBan) {\n        deleteMessages({ messageIds, shouldDeleteForAll });\n      }\n    } else {\n      deleteMessages({ messageIds, shouldDeleteForAll });\n    }\n\n    closeDeleteMessageModal();\n    exitMessageSelectMode();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setPeerIdsToReportSpam(undefined);\n      setPeerIdsToDeleteAll(undefined);\n      setPeerIdsToBan(undefined);\n      setShouldDeleteForAll(true);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOption && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOption && (\n          <AvatarList\n            size=\"small\"\n            peers={peerList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOption ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', messageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={setPeerIdsToReportSpam}\n          selected={peerIdsToReportSpam}\n          nestedCheckbox={messageIds && peerList.length >= 2}\n        />\n        {peerListToDeleteAll?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_DELETE_OPTION}\n            onChange={setPeerIdsToDeleteAll}\n            selected={peerIdsToDeleteAll}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n        {peerListToBan?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={setPeerIdsToBan}\n            selected={peerIdsToBan}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', peerList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageList}\n      className={styles.root}\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {shouldShowOption && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              peerIdsToBan && canBanUsers ? (\n                <ListItem\n                  narrow\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(canDeleteForAll || chatBot || !shouldShowOption) && (\n          <>\n            <p>{messageIds && messageIds.length > 1\n              ? lang('AreYouSureDeleteFewMessages') : lang('AreYouSureDeleteSingleMessage')}\n            </p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{oldLang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{oldLang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        {canDeleteForAll && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={contactName ? renderText(oldLang('DeleteMessagesOptionAlso', contactName))\n              : oldLang('Conversation.DeleteMessagesForEveryone')}\n            checked={shouldDeleteForAll}\n            onCheck={setShouldDeleteForAll}\n          />\n        )}\n        <div className={buildClassName('dialog-buttons',\n          isMediaDropdownOpen ? styles.dialogButtons : styles.proceedButtons)}\n        >\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageList}>\n            {shouldShowOption ? oldLang('DeleteProceedBtn') : lang('Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const messageIds = deleteMessageModal?.messageIds;\n    const chatId = deleteMessageModal?.chatId;\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global, messageIds);\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const linkedChatId = chatFullInfo?.linkedChatId;\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const isSchedule = deleteMessageModal?.isSchedule;\n    const onConfirm = deleteMessageModal?.onConfirm;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && getHasAdminRight(chat, 'banUsers');\n    const isCreator = chat?.isCreator;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && (isChatSuperGroup(chat) || isChannel);\n\n    return {\n      chat,\n      isChannel,\n      isSuperGroup,\n      messageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      canBanUsers,\n      linkedChatId,\n      isSchedule,\n      isCreator,\n      onConfirm,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n  shouldWarnAboutSvg?: boolean;\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n    openDeleteMessageModal,\n    setSettingOption,\n  } = getActions();\n  const lang = useOldLang();\n\n  useCopySelectedMessages(isActive);\n\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    openDeleteMessageModal({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n      isSchedule,\n    });\n  });\n\n  useEffect(() => {\n    return isActive && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? handleDelete : undefined,\n        onDelete: canDeleteMessages ? handleDelete : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, handleDelete, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const handleMessageDownload = useLastCallback(() => {\n    if (shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: false });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <Icon name={icon} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={className}>\n        <div className=\"MessageSelectToolbar-inner\">\n          <Button\n            color=\"translucent\"\n            round\n            onClick={handleExitMessageSelectMode}\n            ariaLabel=\"Exit select mode\"\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n            {formattedMessagesCount}\n          </span>\n\n          {Boolean(selectedMessagesCount) && (\n            <div className=\"MessageSelectToolbar-actions\">\n              {messageListType !== 'scheduled' && canForwardMessages && (\n                renderButton(\n                  'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n                )\n              )}\n              {canReportMessages && (\n                renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n              )}\n              {canDownloadMessages && !hasProtectedMessage && (\n                renderButton('download', lang('lng_media_download'), handleMessageDownload)\n              )}\n              {!hasProtectedMessage && (\n                renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n              )}\n              {canDeleteMessages && (\n                renderButton('delete', lang('EditAdminGroupDeleteMessages'), handleDelete, true)\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const chat = selectCurrentChat(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal\n      || tabState.deleteMessageModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport Icon from '../common/icons/Icon';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <Icon name=\"heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <Icon name=\"heart-outline\" className=\"status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyExceptions,\n  selectNotifySettings, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat\n      ? selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global))\n      : undefined;\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    return filterPeersByQuery({ ids: withoutRecent, query: searchQuery, type: 'user' });\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <Icon name=\"calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  isChatChannel,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterPeersByQuery({ ids: filteredChatIds, query: searchQuery, type: 'chat' });\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterPeersByQuery({\n      ids: contactIdsWithMe, query: searchQuery, type: 'user',\n    });\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                withOpenAppButton\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              {!isChannelList && (\n                <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                  {lang('SearchContextCaption', {\n                    type: getSearchContextCaption(searchContext),\n                  }, {\n                    withNodes: true,\n                  })}\n\n                  <Transition\n                    name=\"fade\"\n                    shouldCleanup\n                    activeKey={Number(isMessagesFetching)}\n                    className=\"iconContainer\"\n                    slideClassName=\"iconContainerSlide\"\n                  >\n                    {isMessagesFetching && (<Loading />)}\n                    {!isMessagesFetching && <Icon name=\"down\" />}\n                  </Transition>\n                </Link>\n              )}\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterPeersByQuery({ ids: chatIds, query: chatFilter, type: 'chat' }),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIconWithPreview\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title.text}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item pt-3\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 68;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIconWithPreview\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon mb-2\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item mb-2 no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <Icon name=\"lock-badge\" className=\"settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <Icon name=\"link\" className=\"mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              className=\"mb-2\"\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n};\n\nfunction PrivacyLockedOption({ label }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={styles.contactsAndPremiumOptionTitle}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts_and_premium_option-title\":\"TGUdGos3\",\"contactsAndPremiumOptionTitle\":\"TGUdGos3\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { selectIsCurrentUserPremium, selectNewNoncontactPeersRequirePremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  shouldNewNonContactPeersRequirePremium,\n  isCurrentUserPremium,\n  onReset,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const lang = useOldLang();\n\n  const canChange = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: lang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChange ? (\n          lang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption label={lang('PrivacyMessagesContactsAndPremium')} />\n        ),\n        hidden: !canChange,\n      },\n    ];\n  }, [lang, canChange]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({ shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium' });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={shouldNewNonContactPeersRequirePremium ? 'contacts_and_premium' : 'everybody'}\n        />\n        <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Privacy.Messages.SectionFooter')}\n        </p>\n      </div>\n      {!canChange && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', {\n      limit: lang('FileSizeMB', { count: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] }),\n    });\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettingsContacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsPrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsGroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsChannels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadFilesTitle'),\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 60;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item mb-2 no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-edit-profile settings-item\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title=\"Edit your profile photo\"\n            disabled={isLoading}\n          />\n          <InputText\n            value={firstName}\n            onChange={handleFirstNameChange}\n            label={lang('FirstName')}\n            disabled={isLoading}\n            error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n          />\n          <InputText\n            value={lastName}\n            onChange={handleLastNameChange}\n            label={lang('LastName')}\n            disabled={isLoading}\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('UserBio')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON, IS_SNAP_EFFECT_SUPPORTED, IS_WAVE_TRANSFORM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const timeFormatOptions: IRadioOption[] = [{\n    label: lang('SettingsTimeFormat12'),\n    value: '12h',\n  }, {\n    label: lang('SettingsTimeFormat24'),\n    value: '24h',\n  }];\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChatAppearanceLight'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChatAppearanceDark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChatAppearanceSystem'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('SettingsSendEnter'), subLabel: lang('SettingsSendEnterDescription') },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'SettingsSendCmdenter' : 'SettingsSendCtrlenter'),\n      subLabel: lang('SettingsSendPlusEnterDescription'),\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Settings')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('SettingsTray')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsTimeFormat')}\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={timeFormatOptions}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SettingsKeyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  return (\n    <div className={className} onClick={handleClick}>\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('MenuAnimations')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <Icon name=\"edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  languages?: ApiLanguage[];\n} & Pick<ISettings, | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const languages = global.settings.languages;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('TelegramGeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('MenuAnimations')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.languageInfo.nativeName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('MenuStickers')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openStarsBalanceModal({})}\n        >\n          {lang('MenuStars')}\n          {Boolean(starsBalance) && (\n            <span className=\"settings-item__current-value\">\n              {formatStarsAmount(lang, starsBalance)}\n            </span>\n          )}\n        </ListItem>\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {lang('MenuSendGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('MenuTelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('MenuPrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('OK')}\n        title={lang('AskAQuestion')}\n        textParts={lang('MenuAskText', undefined, { withNodes: true, renderTextFilters: ['br'] })}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  hasPrivateChatsNotifications: boolean;\n  hasPrivateChatsMessagePreview: boolean;\n  hasGroupNotifications: boolean;\n  hasGroupMessagePreview: boolean;\n  hasBroadcastNotifications: boolean;\n  hasBroadcastMessagePreview: boolean;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  hasPrivateChatsNotifications,\n  hasPrivateChatsMessagePreview,\n  hasGroupNotifications,\n  hasGroupMessagePreview,\n  hasBroadcastNotifications,\n  hasBroadcastMessagePreview,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: 'contact' | 'group' | 'broadcast',\n    setting: 'silent' | 'showPreviews',\n  ) => {\n    const currentIsSilent = peerType === 'contact'\n      ? !hasPrivateChatsNotifications\n      : !(peerType === 'group' ? hasGroupNotifications : hasBroadcastNotifications);\n    const currentShouldShowPreviews = peerType === 'contact'\n      ? hasPrivateChatsMessagePreview\n      : (peerType === 'group' ? hasGroupMessagePreview : hasBroadcastMessagePreview);\n\n    updateNotificationSettings({\n      peerType,\n      ...(setting === 'silent' && { isSilent: !e.target.checked, shouldShowPreviews: currentShouldShowPreviews }),\n      ...(setting === 'showPreviews' && { shouldShowPreviews: e.target.checked, isSilent: currentIsSilent }),\n    });\n  }, [\n    hasBroadcastMessagePreview, hasBroadcastNotifications,\n    hasGroupMessagePreview, hasGroupNotifications,\n    hasPrivateChatsMessagePreview, hasPrivateChatsNotifications,\n    updateNotificationSettings,\n  ]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'silent');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'contact', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'group', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'silent');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'broadcast', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NotificationsWeb')}\n        </h4>\n        <Checkbox\n          label={lang('NotificationsWeb')}\n          subLabel={lang(hasWebNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label={lang('NotificationsOffline')}\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          subLabel={areOfflineNotificationsSupported\n            ? lang(hasPushNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')\n            : lang('SettingsOfflineNotificationUnsupported')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label={lang('NotificationsSound')}\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          subLabel={lang(hasPrivateChatsNotifications\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasPrivateChatsNotifications}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasPrivateChatsNotifications}\n          subLabel={lang(hasPrivateChatsMessagePreview\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasPrivateChatsMessagePreview}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(hasGroupNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasGroupNotifications}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasGroupNotifications}\n          subLabel={lang(hasGroupMessagePreview ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasGroupMessagePreview}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          subLabel={lang(hasBroadcastNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasBroadcastNotifications}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!hasBroadcastNotifications}\n          subLabel={lang(hasBroadcastMessagePreview ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasBroadcastMessagePreview}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasPrivateChatsNotifications: Boolean(global.settings.byKey.hasPrivateChatsNotifications),\n      hasPrivateChatsMessagePreview: Boolean(global.settings.byKey.hasPrivateChatsMessagePreview),\n      hasGroupNotifications: Boolean(global.settings.byKey.hasGroupNotifications),\n      hasGroupMessagePreview: Boolean(global.settings.byKey.hasGroupMessagePreview),\n      hasBroadcastNotifications: Boolean(global.settings.byKey.hasBroadcastNotifications),\n      hasBroadcastMessagePreview: Boolean(global.settings.byKey.hasBroadcastMessagePreview),\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [RegularLangKey, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: RegularLangKey;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderMedium',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderCustom',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['SettingsPerformanceInterfaceAnimations', [\n    { key: 'pageTransitions', label: 'SettingsPerformancePageTransitions' },\n    { key: 'messageSendingAnimations', label: 'SettingsPerformanceSending' },\n    { key: 'mediaViewerAnimations', label: 'SettingsPerformanceMediaViewer' },\n    { key: 'messageComposerAnimations', label: 'SettingsPerformanceComposer' },\n    { key: 'contextMenuAnimations', label: 'SettingsPerformanceContextAnimation' },\n    { key: 'contextMenuBlur', label: 'SettingsPerformanceContextBlur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'SettingsPerformanceRightColumn' },\n    { key: 'snapEffect', label: 'SettingsPerformanceThanos' },\n  ]],\n  ['SettingsPerformanceStickers', [\n    { key: 'animatedEmoji', label: 'SettingsPerformanceAnimatedEmoji' },\n    { key: 'loopAnimatedStickers', label: 'SettingsPerformanceLoopStickers' },\n    { key: 'reactionEffects', label: 'SettingsPerformanceReactionEffects' },\n    { key: 'stickerEffects', label: 'SettingsPerformanceStickerEffects' },\n  ]],\n  ['SettingsPerformanceMediaAutoplay', [\n    { key: 'autoplayGifs', label: 'SettingsPerformanceAutoplayGif' },\n    { key: 'autoplayVideos', label: 'SettingsPerformanceAutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n\n  const animationLevelOptions = useMemo(() => {\n    const options = animationLevelState === ANIMATION_LEVEL_CUSTOM\n      ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n      : ANIMATION_LEVEL_OPTIONS;\n\n    return options.map((option) => lang(option));\n  }, [animationLevelState, lang]);\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderTitle')}\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderSubtitle')}\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item pt-3\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldNewNonContactPeersRequirePremium\n                ? oldLang('PrivacyMessagesContactsAndPremium')\n                : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterPeersByQuery({ ids: availableContactIds, query: search, type: 'user' })\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <Icon name=\"add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  onScreenSelect,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return chatId !== currentUserId && chatId !== SERVICE_NOTIFICATIONS_USER_ID && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterPeersByQuery({ ids: chatIds, query: searchQuery });\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...chatIds,\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, searchQuery, currentUserId]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onScreenSelect,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji, selectTabState } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n  recoveryEmail: string;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n  recoveryEmail,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepAuth.ConfirmEmailDescription', recoveryEmail)}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const tabState = selectTabState(global);\n  const recoveryEmail = tabState.recoveryEmail;\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n    recoveryEmail,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('RecoveryEmailSubtitle')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-2\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item pt-0\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  errorKey,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          placeholder={oldLang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={oldLang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { sortUserIds } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterPeersByQuery({ ids: contactIds, query: filter, type: 'user' });\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <Icon name=\"add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { isUserBot } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds\n      ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <Icon name=\"arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../common/icons/Icon';\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen, undefined, undefined, false);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          className=\"dialog-checkbox-group\"\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let muteUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      muteUntil = MAX_INT_32;\n    } else {\n      muteUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, muteUntil });\n    } else {\n      updateChatMutedState({ chatId, muteUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsRightColumnShown,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    reportMessages({ chatId, messageIds: [] });\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {lang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <Icon name=\"recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <Icon name=\"favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed;\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <Icon\n                name=\"delete\"\n                className={buildClassName(styles.actionItem, styles.deleteFile)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <Icon\n            name={attachment.shouldSendAsSpoiler ? 'spoiler-disable' : 'spoiler'}\n            className={styles.actionItem}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name=\"delete\" className={styles.actionItem} onClick={() => onDelete(index)} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import isFullyVisible from './visibility/isFullyVisible';\nimport animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  onSendWhenOnline,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [lang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  if (areAllPhotos) {\n    title = lang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', renderingAttachments.length, 'i');\n  } else if (areAllVideos) {\n    title = lang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', renderingAttachments.length, 'i');\n  } else if (areAllAudios) {\n    title = lang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', renderingAttachments.length, 'i');\n  } else {\n    title = lang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', renderingAttachments.length, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{lang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {lang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {lang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {lang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {lang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {lang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={lang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={lang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? lang('Next') : editingMessage ? lang('Save') : lang('Send')}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        {!shouldBeAnonymous && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={lang('PollAnonymous')}\n            checked={isAnonymous}\n            onChange={handleIsAnonymousChange}\n          />\n        )}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          label={lang('PollMultiple')}\n          checked={isMultipleAnswers}\n          disabled={isQuizMode}\n          onChange={handleMultipleAnswersChange}\n        />\n        <Checkbox\n          className=\"dialog-checkbox\"\n          label={lang('PollQuiz')}\n          checked={isQuizMode}\n          disabled={isMultipleAnswers || isQuiz !== undefined}\n          onChange={handleQuizModeChange}\n        />\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { IconName } from '../../../types/icons';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <Icon name=\"close\" className=\"gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <Icon name=\"search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji || activeTab === SymbolMenuTabs.CustomEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <Icon name=\"delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-closed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult;\n  onClick: (result: ApiBotInlineResult | ApiBotInlineMediaResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, description,\n  } = inlineResult;\n\n  const url = 'url' in inlineResult ? inlineResult.url : undefined;\n  const webThumbnail = 'webThumbnail' in inlineResult ? inlineResult.webThumbnail : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineMediaResult | ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <Icon name=\"lock-badge\" className=\"send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  if (!isReady || !statistics) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview\n        statistics={statistics}\n        type={isGroup ? 'group' : 'channel'}\n        title={lang('StatisticOverview')}\n      />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics).recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <Icon name=\"add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <SafeLink url={privateInviteLink} className=\"group-link\" text={privateInviteLink} />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <UsernameInput\n              asLink\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    return filterPeersByQuery({ ids: availableMemberIds, query: search, type: 'user' });\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <Icon name=\"add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"custom-scroll\">\n        {canHideParticipants && !isChannel && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 48;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-header\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-header\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    showNotification,\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  const handleCopyClicked = useCallback(() => {\n    copyTextToClipboard(invite!.link);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [invite, lang, showNotification]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p>{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p>{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <h3 className=\"link-title\">{invite.title || invite.link}</h3>\n              <input\n                className=\"form-control\"\n                value={invite.link}\n                readOnly\n                onClick={handleCopyClicked}\n              />\n              <Button className=\"copy-link\" onClick={handleCopyClicked}>{lang('CopyLink')}</Button>\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p>{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: oldLang('LinkCopied'),\n    });\n  }, [oldLang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = oldLang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = oldLang('PeopleJoined', usage);\n    } else {\n      text = oldLang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${oldLang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${oldLang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${oldLang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = expireDate - getServerTime();\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += oldLang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += oldLang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${oldLang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: oldLang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: oldLang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: oldLang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: oldLang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? oldLang('PrimaryLinkHelpChannel') : oldLang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? oldLang('PublicLink') : oldLang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <Button isText key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {oldLang('CreateNewLink')}\n          </Button>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{oldLang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{oldLang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{oldLang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={oldLang('DeleteAllRevokedLinks')}\n        text={oldLang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={oldLang('RevokeLink')}\n        text={oldLang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={oldLang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={oldLang('DeleteLink')}\n        text={oldLang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot, selectIsChatMuted } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { RegularLangFnParameters } from '../../util/localization';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Partial<Record<string, RegularLangFnParameters>>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport type { LangFn } from '../../util/localization';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(lang, tipAmount!, invoice.currency)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(lang, tip, invoice.currency, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = oldLang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, oldLang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang, oldLang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: oldLang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: oldLang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: oldLang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: oldLang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: oldLang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: oldLang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  lang: LangFn, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(lang, value, currency)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { RegularLangFnParameters } from '../../util/localization';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  errorKey?: RegularLangFnParameters;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  errorKey,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={errorKey && lang.withRegular(errorKey)}\n        hint={passwordHint}\n        description={oldLang('PaymentConfirmationMessage', cardName)}\n        placeholder={oldLang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    errorKey: payment.error?.messageKey,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{oldLang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber && lang.withRegular(formErrors.cardNumber)}\n        />\n        {needCardholderName && (\n          <InputText\n            label={oldLang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder && lang.withRegular(formErrors.cardholder)}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry && lang.withRegular(formErrors.expiry)}\n          />\n          <InputText\n            label={oldLang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv && lang.withRegular(formErrors.cvv)}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{oldLang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry && lang.withRegular(formErrors.billingCountry)}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip && lang.withRegular(formErrors.billingZip)}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={oldLang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={oldLang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(lang, amount, currency),\n    value,\n  }))), [shippingOptions, currency, lang]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{oldLang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{oldLang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={oldLang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1 && lang.withRegular(formErrors.streetLine1)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2 && lang.withRegular(formErrors.streetLine2)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city && lang.withRegular(formErrors.city)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state && lang.withRegular(formErrors.state)}\n            />\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2 && lang.withRegular(formErrors.countryIso2)}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode && lang.withRegular(formErrors.postCode)}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{oldLang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={oldLang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName && lang.withRegular(formErrors.fullName)}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={oldLang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email && lang.withRegular(formErrors.email)}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={oldLang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone && lang.withRegular(formErrors.phone)}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={oldLang('PaymentShippingSave')}\n          subLabel={oldLang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.messageKey,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.descriptionKey ? lang.withRegular(error.descriptionKey) : lang('ErrorUnspecified')}</h4>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <Icon name={step === PaymentStep.Checkout ? 'close' : 'arrow-left'} />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <Icon name=\"close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        className=\"dialog-checkbox\"\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","undefined","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","id","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","ChannelAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","container","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","_ref","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","arguments","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","memo","isOpen","peerId","onClose","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","lang","useOldLang","REPORT_OPTIONS","label","title","React","Modal","onEnter","className","RadioGroup","name","options","onChange","selected","InputText","Button","color","isText","onClick","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","profileId","onConfirm","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","useCallback","isUserId","withGlobal","global","_ref4","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","chat","selectCurrentChat","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","_ref2","onTrigger","round","ariaLabel","Icon","renderDeleteModal","DeleteProfilePhotoModal","openDeleteModalHandler","messageIds","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","_ref3","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","getCurrentTime","setCurrentTime","useCurrentTimeSignal","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","stopPropagation","dir","isRectangular","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","SeekLine","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","timestamp","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","VideoPlayerControls","sponsoredMessage","textMessage","maxTimestamp","selectMessageTimestampableDuration","withAnimation","isMoving","onFooterClick","updateLastPlaybackTimestamp","toggleControlsOnMove","updatePlaybackTimestamp","useThrottledCallback","MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION","isInAlbum","newTimestamp","PLAYBACK_SAVE_INTERVAL","useSignalEffect","VideoPlayer","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","MediaViewerFooter","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","closest","calculateOffsetBoundaries","offsetTop","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","cancelDrag","dragOffsetX","dragOffsetY","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","includes","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","_ref5","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","MediaViewerContent","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","imageEl","messageListElement","getOffsetToContainer","scrollTop","offsetHeight","isMessageImageFullyVisible","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","HTMLElement","isFromMedia","isMedia","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","SenderInfo","MediaViewerActions","ReportAvatarModal","MediaViewerSlides","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterPeersByQuery","ids","query","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","usersById","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","getHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","header","closeButton","headerTitle","renderHeaderContent","slideClassName","sender","fromPeerId","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","PeerColorWrapper","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","EmbeddedStoryForward","MessageText","messageOrStory","withTranslucentThumbs","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","DEFAULT_STORY_DURATION_S","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","reportModal","giftInfoModal","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","areChatSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadChatSettings","fetchChat","loadStoryViews","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","StoryProgress","formatRelativeTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryFooter","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","inputPlaceholder","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","disableScrolling","enableScrolling","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","scrollHeight","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","StoryView","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StealthModeModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","toLowerCase","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","isDeletedUser","chatFullInfo","selectChatFullInfo","sorted","sortChatIds","filterChatIdsByType","renderingIds","ChatOrUserPicker","isForwarding","isManyMessages","isStory","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","RecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","pick","messageList","getReadableErrorText","notifications","notification","Notification","toggleSafeLinkModal","useLang","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","withNodes","withMarkdown","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","CalendarModal","phoneCodeList","countryList","phoneCodes","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","Left","Right","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","changeWebAppModalState","closeWebAppModal","oldLang","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","FULLSCREEN_BUTTONS_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","userFullInfo","selectUserFullInfo","botAppSettings","botInfo","appSettings","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","botAppPermissions","selectBotAppPermissions","paymentStatus","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","openChatWithInfo","openEmojiStatusAccessModal","openLocationAccessModal","openPreparedInlineMessageModal","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","isAvailable","IS_GEOLOCATION_SUPPORTED","isAccessRequested","geolocation","isAccessGranted","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","access_requested","access_granted","geolocationData","getGeolocationStatus","accessRequested","accessGranted","latitude","longitude","altitude","course","heading","speed","horizontal_accuracy","accuracy","vertical_accuracy","handleRequestLocation","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","backButtonCaption","hasHeaderElement","viewBox","renderDefaultPlaceholder","sandbox","allow","allowFullScreen","hasCloseButton","filename","MINIMIZED_STATE_SIZE","DEFAULT_MAXIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","cachedPosition","miniAppsCachedPosition","cachedSize","miniAppsCachedSize","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","updateMiniAppCachedPosition","updateMiniAppCachedSize","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","isLowStackPriority","shortName","renderActiveTab","MinimizedWebAppModal","noBackdropClose","WebAppModalTabContent","MoreAppsTabContent","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","colorStepProgress","lerp","PremiumLimitsCompare","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","PremiumFeatureItem","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","amount","months","currency","perMonthPrice","price","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumLimitPreview","PremiumFeaturePreviewStickers","PremiumFeaturePreviewStories","videoSections","PremiumFeaturePreviewVideo","videos","PREMIUM_BOTTOM_VIDEOS","SliderDots","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","formatCurrencyAsString","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","PremiumFeatureModal","CustomEmoji","isBig","PremiumLogo","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","PremiumSubscriptionOption","statusText","entities","statusEntities","renderFooterText","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","ItemPicker","picker","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","isLink","onClickAction","userNames","selectedMemberIds","displayText","members","adminMembersById","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredUserIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedStarOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","stars","filteredGifts","basicGift","userCountOptions","winner","winnerCountOptions","winners","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","subLabelClassName","formatDateTimeToString","boosts","GiveawayTypeOption","RangeSliderWithMarks","rangeCount","marks","StarTopupOptionList","selectedStarCount","match","Link","isPrimary","renderPremiumFeaturesLink","CountryPickerModal","GiveawayUserPickerModal","GiveawayChannelPickerModal","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToStatic","IS_WEBM_SUPPORTED","staticHash","getStickerMediaHash","staticMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","withSparkles","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","until","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","Sparkles","preset","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","LOCAL_TGS_URLS","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","collectibleStatuses","collectibleEmojiStatuses","statuses","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isStatusCollectible","COLLECTIBLE_STATUS_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","collectibleEmojiIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","ReactionEmoji","isHqEmoji","canvasRef","StickerButton","HEADER_BUTTON_WIDTH","DEFAULT_ID_PREFIX","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","collectibleStatusEmojis","collectibleStatusEmojiIds","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","uniqueByField","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","StickerSetCover","StickerSet","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","CustomEmojiPicker","CUSTOM_EMOJI_SIZE","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","expires","referrerWebAppKey","hasAbsoluteCloseButton","loopLimit","PeerChip","mockPeer","withEmojiStatus","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","isNew","alreadyPeerIds","newChatsCount","noCustomEmojiPlayback","noTitleAnimations","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","Badge","buttonBadge","isAlternateColor","suggestedPeerIds","leaveChatlist","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","renderingInfo","renderingFolderTitle","folderTabNumber","ChatlistAlready","ChatlistNew","ChatlistDelete","folderTitle","foldersWrapper","folders","Tab","badgeCount","isBadgeActive","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","minLevelToRestrictAds","channelRestrictAdsLevelMin","closeAboutAdsModal","moreMenuRef","isMonetizationSharing","canReport","renderingIsNewDesign","regularAdContent","SafeLink","listItemData","TableAboutModal","headerIconName","withSeparator","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","blockchainText","monetizationTitle","specialReplacement","twoFaSettings","hint","passwordHint","closeMonetizationVerificationModal","clearMonetizationVerificationError","processMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","handleClearError","PasswordForm","shouldShowSubmit","errorKey","withRegular","clearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","closeEmojiStatusAccessModal","toggleUserEmojiStatusPermission","loadDefaultStatusIcons","currentStatusIndex","setCurrentStatusIndex","totalCount","prevIndex","renderPickerItem","chatItem","itemName","isBotAccessEmojiGranted","onCloseHandler","renderStatusText","closeLocationAccessModal","toggleUserLocationPermission","renderInfo","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","isBlurred","isBackgroundBlurred","patternColor","background","customBackground","themes","closePreparedInlineMessageModal","openSharePreparedMessageModal","customBackgroundValue","useCustomBackground","handleOpenClick","localMessage","getMockPreparedMessageFromResult","bgClassName","inert","Message","noComments","noReplies","appearanceOrder","isJustAdded","isFirstInGroup","isLastInGroup","isLastInList","isFirstInDocumentGroup","isLastInDocumentGroup","closeSharePreparedMessageModal","sendInlineBotResult","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","selectCanDeleteSelectedMessages","isSuperGroup","contactName","getPrivateChatUserId","chatBot","isSystemBot","selectBot","canBanUsers","getHasAdminRight","isCreator","isChatWithBot","selectIsChatWithBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","closeDeleteMessageModal","deleteMessages","reportChannelSpam","deleteChatMember","deleteScheduledMessages","exitMessageSelectMode","updateChatMemberBannedRights","deleteParticipantHistory","defaultBannedRights","peerIdsToDeleteAll","setPeerIdsToDeleteAll","peerIdsToBan","setPeerIdsToBan","peerIdsToReportSpam","setPeerIdsToReportSpam","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","shouldDeleteForAll","setShouldDeleteForAll","peerList","senderArray","getSendersFromSelectedMessages","buildNestedOptionListWithAvatars","member","peerListToDeleteAll","peerListToReportSpam","peerListToBan","isCurrentUserInList","isAdmin","shouldShowOption","peerNames","buildCollectionByCallback","ACTION_SPAM_OPTION","nestedOptions","opt","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByPeerId","selectedMessageIdList","msgId","selectSenderFromMessage","handleReportSpam","userMessagesMap","messageIdList","participantId","handleDeleteMessages","filteredMessageIdList","handleDeleteAllPeerMessages","peerIdList","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageList","isNaN","CheckboxGroup","nestedCheckbox","PermissionCheckboxList","isPrivateChat","canPinForAll","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","pinnedMessagesCount","onUnpin","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","selectedMessageIds","selectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","shouldWarnAboutSvg","byKey","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","setSettingOption","handleCopy","useHotkeys","useCopySelectedMessages","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","handleExitMessageSelectMode","handleDelete","onBackspace","onEsc","handleMessageDownload","handleSvgConfirm","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","userName","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","ReadTime","LastSeen","Separator","reactorModal","reactors","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","requestMessageTranslation","closeChatLanguageModal","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","currentType","isVoice","byChatId","globalMessagesByChatId","messages","searchChatId","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","canChangeFolder","chatFolders","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","LeftSearchResultChat","privateChatUserId","privateChatUser","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","foundTopicIds","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","DateSuggest","LeftSearchResultTopic","ChatMessage","topUserIds","topPeers","recentlyFoundChatIds","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","RecentContacts","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","WebLink","onMessageClick","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","ChatMessageResults","ChatResults","MediaResults","LinkResults","FileResults","AudioResults","BotAppResults","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","chatIds","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","el","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","allowSelection","shareFolderScreen","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","AnimatedIcon","FoldersShare","withShare","onRevoke","lockedUnselectedIds","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsFoldersMain","SettingsFoldersEdit","SettingsFoldersChatFilters","SettingsShareChatlist","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","fullReset","STICKER_SIZE_PASSCODE","Congratulations","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","passcode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeStart","SettingsPasscodeForm","SettingsPasscodeCongratulations","PasscodeEnabled","SettingsPasscodeEnabled","premiumSection","handleOpenPremiumModal","StarIcon","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","canLimitNewMessagesWithoutPremium","canChange","PrivacyLockedOption","hidden","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","SettingsActiveSession","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","terminateWebAuthorization","renderingBot","browser","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","SettingsActiveWebsite","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","StickerSetCard","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderValue","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","readOnly","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","UsernameInput","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","ManageUsernames","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","shouldUseSystemTheme","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","timeFormatOptions","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","wallpaper","localMediaHash","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","isAllowed","loadedWallpapers","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","WallpaperTile","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","Notifications","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","starsBalance","balance","sessionCount","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","languageInfo","formatStarsAmount","FAQ_URL","PRIVACY_URL","renderTextFilters","hasPrivateChatsNotifications","hasPrivateChatsMessagePreview","hasGroupNotifications","hasGroupMessagePreview","hasBroadcastNotifications","hasBroadcastMessagePreview","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsSilent","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","_ref6","_ref7","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","BlockUserModal","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","canShowHideReadTime","handleChangeShouldHideReadMarks","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","secondaryScreen","SettingsPrivacyPublicProfilePhoto","SettingsPrivacyLastSeen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","isAllowList","withPremiumCategory","withMiniAppsCategory","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","STICKER_SIZE_TWO_FA","recoveryEmail","animatedEmoji","selectAnimatedEmoji","codeLength","waitingEmailCodeLength","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaStart","SettingsTwoFaPassword","SettingsTwoFaSkippableForm","SettingsTwoFaEmailCode","SettingsTwoFaCongratulations","SettingsTwoFaEnabled","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","SettingsHeader","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsMain","SettingsEditProfile","SettingsGeneral","SettingsQuickReaction","SettingsCustomEmoji","SettingsNotifications","SettingsDataStorage","SettingsPrivacy","SettingsLanguage","SettingsDoNotTranslate","SettingsStickers","SettingsExperimental","SettingsGeneralBackground","SettingsGeneralBackgroundColor","SettingsActiveSessions","SettingsActiveWebsites","SettingsPrivacyBlockedUsers","SettingsPrivacyVisibility","SettingsPrivacyVisibilityExceptionList","SettingsFolders","SettingsTwoFa","SettingsPasscode","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","openNewContactDialog","isSearching","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","NewChatStep1","NewChatStep2","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","muteUntil","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","prevStickerSet","renderingStickerSet","isAdded","requestCalendar","calendar","useSchedule","isScheduleRequested","isPreloadedGlobally","scheduledAt","handleCopyLink","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canGift","selectCanGift","canCreateTopic","isUserRightBanned","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openGiftModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","setIsMenuOpen","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","closeMenu","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftClick","forUserId","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","MenuSeparator","DeleteChatModal","isSavedDialog","senderPeer","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","tag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","MiddleSearchResult","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","noForcedUpperCase","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","isForEffects","loadRecentStickers","addRecentSticker","unfaveSticker","faveSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","maxUniqueReactions","enabledReactions","reactionsLimit","isTouchScreen","currentReactions","shouldUseCurrentReactions","allAvailableReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","isForbidden","toggleReaction","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","addLocalPaidReaction","openPaidReactionModal","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","shouldAddToRecent","handleToggleReaction","handleReactionContextMenu","handleStoryReactionSelect","actionText","customEmojiMessage","parseHtmlAsFormattedText","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","StickerPicker","ReactionPickerLimited","div","BLUR_CANVAS_SIZE","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","isFullyVisible","isHorizontal","viewportY1","viewportY2","y2","findInViewport","selectorOrElements","shouldContainBottom","allElements","visibleIndexes","isFound","setTooltipItemVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","recentEmojis","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onSend","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","isBottomDividerShown","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","AttachmentModalItem","uniqueId","MentionTooltip","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","canSchedule","onSendSchedule","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","newOptions","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","category","allEmojis","useOnIntersect","emojisPerRow","displayedEmoji","EmojiButton","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","MENU_TRANSITION_DURATION","allCategories","themeCategories","exec","default","uncompressEmoji","ensureEmojiData","selectCategory","categoryEl","containerClassName","EmojiCategory","gif","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","canSendGifs","onGifSelect","loadSavedGifs","saveGif","debounceMs","shouldUnsave","GifButton","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","handleCustomEmojiSelect","canUpdateStickerSetsOrder","isFrom","EmojiPicker","GifPicker","SymbolMenuFooter","mobileClassName","onMouseEnter","withAvatar","freezeWhenClosed","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","ChatCommand","botCommand","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","onToggleReaction","isInSavedMessages","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","areItemsHidden","hideItems","showItems","markIsReady","unmarkIsReady","handleOpenMessageEffectsPicker","ReactionSelector","onShowMore","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","fragmentEl","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","EDITABLE_INPUT_ID","textFormat","tagName","restoreSelection","selection","getSelection","removeAllRanges","addRange","updateSelectedRange","getRangeAt","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","ApiMessageEntityTypes","Spoiler","execCommand","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","CustomEmojiButton","thumbnailDataUrl","getWebDocumentHash","decoding","inlineResult","webThumbnail","BaseResult","_gif","isForGallery","thumbnailBlobUrl","getPhotoMediaHash","STICKER_SIZE_INLINE_BOT_RESULT","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","GifResult","MediaResult","StickerResult","ArticleResult","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","membersCount","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","loadFeaturedStickers","StickerSetResult","selectCurrentGifSearch","canPostInChat","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","create","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentMessage","StatisticsRecentStory","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","StatisticsMessagePublicForward","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","renderViewMoreButton","poll","selectPollFromMessage","resultsByOption","buildCollectionByKey","PollAnswerResults","ICON_SIZE","createTopicPanel","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","formatInteger","joinRequests","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","loadMoreMembers","usersId","availableMemberIds","canDeleteMembers","removedMembers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","RemoveGroupUserModal","forDiscussionIds","linkedChat","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","hasFullInfo","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","importers","requesters","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","handleCopyClicked","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","JoinRequest","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","isCenteredLayout","notPersonalPhoto","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","ManageBot","ManageUser","ManageGroup","GroupRecentActions","ManageChannel","ManageChatPrivacyType","ManageDiscussion","ManageGroupPermissions","ManageChatRemovedUsers","ManageGroupUserPermissionsCreate","ManageGroupUserPermissions","ManageChatAdministrators","ManageGroupAdminRights","ManageGroupMembers","ManageInvites","ManageInvite","ManageReactions","ManageInviteInfo","ManageJoinRequests","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","noRedirect","onPaymentFormSubmit","messageKey","form","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","CardInput","ExpiryInput","Select","hasArrow","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","ConfirmPayment","setStep","nextStep","Checkout","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","shippingOption","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","SavedPaymentCredentials","PasswordConfirm","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","descriptionKey","renderError","optionId","receipt","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","closeOneTimeMediaModal","handlePlayVoice","isOwn","isOwnMessage","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge","modalProps","hasButton","hasBackdrop","absoluteCloseButtonColor","headerAvatarPeer","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","perUserStars","wideOption","optionTop","stackedStars","stackedStar","optionBottom","moreOptions"],"sourceRoot":""}